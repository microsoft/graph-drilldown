{"remainingRequest":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js??ruleSet[1].rules[0].use[1]!C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js??ruleSet[1].rules[0].use[2]!C:\\ws\\graph-drill\\src\\components\\HierarchyBrowserPanel\\hooks.ts","dependencies":[{"path":"C:\\ws\\graph-drill\\src\\components\\HierarchyBrowserPanel\\hooks.ts","mtime":1631029334791},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\cache-loader-virtual-2fd14a2267\\0\\cache\\cache-loader-npm-4.1.0-82c3da90d8-0339778bdd.zip\\node_modules\\cache-loader\\dist\\cjs.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyohDQogKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4gU2VlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcHJvamVjdC4NCiAqLwppbXBvcnQgeyBST09UX0NPTU1VTklUWV9JRCB9IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7CmltcG9ydCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7CmltcG9ydCB7IGZpbmROb2Rlc0NvbGxlY3Rpb25Gb3JDb21tdW5pdHksIGdldEVkZ2VzRnJvbVRhYmxlQnlJRCB9IGZyb20gJ34vYXJxdWVybyc7CmltcG9ydCB7IHVzZU5hdmlnYXRpb25TdGF0ZSwgdXNlR3JvdXBlZEJ5Q29tbXVuaXR5VGFibGUsIHVzZUdyb3VwZWRCeVBhcmVudFRhYmxlIH0gZnJvbSAnfi9zdGF0ZSc7CgpmdW5jdGlvbiB1c2VDb21tdW5pdHlTaXplcyhpZHMpIHsKICBjb25zdCBieUNvbW11bml0eSA9IHVzZUdyb3VwZWRCeUNvbW11bml0eVRhYmxlKCk7CiAgY29uc3QgYnlQYXJlbnQgPSB1c2VHcm91cGVkQnlQYXJlbnRUYWJsZSgpOwogIHJldHVybiB1c2VNZW1vKCgpID0+IHsKICAgIHJldHVybiBpZHMubWFwKGlkID0+IHsKICAgICAgY29uc3Qgbm9kZXMgPSBmaW5kTm9kZXNDb2xsZWN0aW9uRm9yQ29tbXVuaXR5KGlkLCBieVBhcmVudCwgYnlDb21tdW5pdHkpOwogICAgICByZXR1cm4gewogICAgICAgIGlkLAogICAgICAgIHNpemU6IG5vZGVzLnNpemUKICAgICAgfTsKICAgIH0pOwogIH0sIFtpZHMsIGJ5UGFyZW50LCBieUNvbW11bml0eV0pOwp9CgpleHBvcnQgZnVuY3Rpb24gdXNlQ29tbXVuaXR5TGlzdCgpIHsKICBjb25zdCBjb21tdW5pdHlJZHMgPSB1c2VOYXZpZ2F0aW9uU3RhdGUoKTsKICBjb25zdCBub2RlVGFibGVBcnJheSA9IHVzZUNvbW11bml0eVNpemVzKGNvbW11bml0eUlkcyk7CiAgY29uc3QgY29tbXVuaXRpZXMgPSB1c2VNZW1vKCgpID0+IHsKICAgIGNvbnN0IHJldmVyc2VMaXN0ID0gbm9kZVRhYmxlQXJyYXkucmV2ZXJzZSgpOyAvLyBUT0RPOiB0aGlzIHN3YXBzIGluIGEgZnJpZW5kbHkgbGFiZWwgZm9yIHRoZSByb290LCB3aGljaCBjb3VsZCBiZSBoYW5kbGVkIG1vcmUgY2xlYW5seSBhcyBhbiBvcHRpb25hbCBsYWJlbCBpbiBIQgoKICAgIHJldHVybiByZXZlcnNlTGlzdC5tYXAobyA9PiAoewogICAgICBjb21tdW5pdHlJZDogby5pZCA9PT0gUk9PVF9DT01NVU5JVFlfSUQgPyAnUm9vdCcgOiBvLmlkLAogICAgICBzaXplOiBvLnNpemUKICAgIH0pKTsKICB9LCBbbm9kZVRhYmxlQXJyYXldKTsKICByZXR1cm4gY29tbXVuaXRpZXM7Cn0KCmZ1bmN0aW9uIG5vZGVUb0VudGl0eURldGFpbChub2RlLCBjb2x1bW5zKSB7CiAgY29uc3QgYXR0cnMgPSBjb2x1bW5zLnJlZHVjZSgoYWNjLCBrKSA9PiB7CiAgICBjb25zdCB2YWx1ZSA9IG5vZGUuZ2V0KGspOwogICAgYWNjW2tdID0gdmFsdWU7CiAgICByZXR1cm4gYWNjOwogIH0sIHt9KTsKICByZXR1cm4gewogICAgaWQ6IG5vZGUuaWQsCiAgICBhdHRycwogIH07Cn0KCmZ1bmN0aW9uIG5vZGVDb2x1bW5zKG5vZGVzLCBsb2FkUGFyYW1zKSB7CiAgY29uc3QgY29sdW1uTmFtZXMgPSBub2Rlcy50YWJsZS5jb2x1bW5OYW1lcygpOwogIGNvbnN0IHsKICAgIG9mZnNldCwKICAgIGNvdW50CiAgfSA9IGxvYWRQYXJhbXM7CiAgY29uc3QgdmFsdWVzID0gbm9kZXMucGFnZShub2RlID0+IG5vZGVUb0VudGl0eURldGFpbChub2RlLCBjb2x1bW5OYW1lcyksIG9mZnNldCwgY291bnQpOwogIHJldHVybiB2YWx1ZXM7Cn0KCmV4cG9ydCBmdW5jdGlvbiB1c2VFbnRpdHlDYWxsYmFjaygpIHsKICBhc3luYyBmdW5jdGlvbiBoYW5kbGVFbnRpdHlDYWxsYmFjayhsb2FkUGFyYW1zLCBieVBhcmVudCwgYnlDb21tdW5pdHkpIHsKICAgIGNvbnN0IGNpZCA9IGxvYWRQYXJhbXMuY29tbXVuaXR5SWQ7CiAgICBjb25zdCBzZWxlY3RlZE5laWdoYm9yID0gZmluZE5vZGVzQ29sbGVjdGlvbkZvckNvbW11bml0eShjaWQgPT09ICdSb290JyA/IFJPT1RfQ09NTVVOSVRZX0lEIDogY2lkLCBieVBhcmVudCwgYnlDb21tdW5pdHkpOwogICAgY29uc3QgZGF0YSA9IG5vZGVDb2x1bW5zKHNlbGVjdGVkTmVpZ2hib3IsIGxvYWRQYXJhbXMpOwogICAgcmV0dXJuIHsKICAgICAgZGF0YSwKICAgICAgZXJyb3I6IHVuZGVmaW5lZAogICAgfTsKICB9CgogIHJldHVybiBoYW5kbGVFbnRpdHlDYWxsYmFjazsKfQpleHBvcnQgZnVuY3Rpb24gdXNlTmVpZ2hib3JDYWxsYmFjaygpIHsKICBjb25zdCBoYW5kbGVOZWlnaGJvckNhbGxiYWNrID0gYXN5bmMgZnVuY3Rpb24gKHBhcmFtcywgbm9kZVRhYmxlLCBlZGdlcykgewogICAgY29uc3QgbmVpZ2hib3JUYWJsZSA9IGdldEVkZ2VzRnJvbVRhYmxlQnlJRChwYXJhbXMuY29tbXVuaXR5SWQsIG5vZGVUYWJsZSwgZWRnZXMpOwoKICAgIGlmIChuZWlnaGJvclRhYmxlKSB7CiAgICAgIGNvbnN0IGNvbW11bml0eU5laWdoYm9ycyA9IGdldE5laWdoYm9ySWRzKG5laWdoYm9yVGFibGUsIHBhcmFtcy5jb21tdW5pdHlJZCk7CiAgICAgIHJldHVybiB7CiAgICAgICAgZGF0YTogY29tbXVuaXR5TmVpZ2hib3JzLAogICAgICAgIGVycm9yOiB1bmRlZmluZWQKICAgICAgfTsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgZGF0YTogW10sCiAgICAgICAgZXJyb3I6IG5ldyBFcnJvcihgTm8gZWRnZXMgZm91bmQgZm9yICR7cGFyYW1zLmNvbW11bml0eUlkfWApCiAgICAgIH07CiAgICB9CiAgfTsKCiAgcmV0dXJuIGhhbmRsZU5laWdoYm9yQ2FsbGJhY2s7Cn0KCmZ1bmN0aW9uIGdldE5laWdoYm9ySWRzKGNvdW50cywgY29tbXVuaXR5SWQpIHsKICBpZiAoY291bnRzLm51bVJvd3MoKSA+IDApIHsKICAgIC8vIHNjYW4gdGhlIGVkZ2UgY291bnRzIHRhYmxlIHRvIGNyZWF0ZSBhIGZldyB0YWJsZSByb3dzCiAgICBjb25zdCBtYXggPSBNYXRoLm1pbigxMDAsIGNvdW50cy5udW1Sb3dzKCkpOwogICAgY29uc3Qgb3V0cHV0ID0gW107CiAgICBjb25zdCBrZXkgPSBjb3VudHMuZ2V0dGVyKCdrZXknKTsKICAgIGNvbnN0IGNvdW50ID0gY291bnRzLmdldHRlcignY291bnQnKTsKICAgIGNvbnN0IG1lbWJlcnNoaXAgPSBjb3VudHMuZ2V0dGVyKCdtZW1iZXJzJyk7CiAgICBjb3VudHMuc2NhbigoaWR4LCBkYXRhLCBzdG9wKSA9PiB7CiAgICAgIGNvbnN0IGsgPSBrZXkoaWR4KTsKICAgICAgY29uc3QgYyA9IGNvdW50KGlkeCk7CiAgICAgIGNvbnN0IHNpemUgPSBtZW1iZXJzaGlwKGlkeCk7CgogICAgICBpZiAoY29tbXVuaXR5SWQgIT09IGspIHsKICAgICAgICBvdXRwdXQucHVzaCh7CiAgICAgICAgICBjb21tdW5pdHlJZDogaywKICAgICAgICAgIGNvbm5lY3Rpb25zOiBjLAogICAgICAgICAgZWRnZUNvbW11bml0eUlkOiBjb21tdW5pdHlJZCwKICAgICAgICAgIHNpemUKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgaWYgKG91dHB1dC5sZW5ndGggPiBtYXgpIHsKICAgICAgICBzdG9wKCk7CiAgICAgIH0KICAgIH0sIHRydWUpOwogICAgcmV0dXJuIG91dHB1dDsKICB9CgogIHJldHVybiBbXTsKfQ=="},{"version":3,"sources":["C:/ws/graph-drill/src/components/HierarchyBrowserPanel/hooks.ts"],"names":["ROOT_COMMUNITY_ID","useMemo","findNodesCollectionForCommunity","getEdgesFromTableByID","useNavigationState","useGroupedByCommunityTable","useGroupedByParentTable","useCommunitySizes","ids","byCommunity","byParent","map","id","nodes","size","useCommunityList","communityIds","nodeTableArray","communities","reverseList","reverse","o","communityId","nodeToEntityDetail","node","columns","attrs","reduce","acc","k","value","get","nodeColumns","loadParams","columnNames","table","offset","count","values","page","useEntityCallback","handleEntityCallback","cid","selectedNeighbor","data","error","undefined","useNeighborCallback","handleNeighborCallback","params","nodeTable","edges","neighborTable","communityNeighbors","getNeighborIds","Error","counts","numRows","max","Math","min","output","key","getter","membership","scan","idx","stop","c","push","connections","edgeCommunityId","length"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,iBAAT,QAAkC,iBAAlC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,+BAAT,EAA0CC,qBAA1C,QAAwE,WAAxE;AACA,SAASC,kBAAT,EAA6BC,0BAA7B,EAAyDC,uBAAzD,QAAyF,SAAzF;;AACA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AAC5B,QAAMC,WAAW,GAAGJ,0BAA0B,EAA9C;AACA,QAAMK,QAAQ,GAAGJ,uBAAuB,EAAxC;AACA,SAAOL,OAAO,CAAC,MAAM;AACjB,WAAOO,GAAG,CAACG,GAAJ,CAAQC,EAAE,IAAI;AACjB,YAAMC,KAAK,GAAGX,+BAA+B,CAACU,EAAD,EAAKF,QAAL,EAAeD,WAAf,CAA7C;AACA,aAAO;AAAEG,QAAAA,EAAF;AAAME,QAAAA,IAAI,EAAED,KAAK,CAACC;AAAlB,OAAP;AACH,KAHM,CAAP;AAIH,GALa,EAKX,CAACN,GAAD,EAAME,QAAN,EAAgBD,WAAhB,CALW,CAAd;AAMH;;AACD,OAAO,SAASM,gBAAT,GAA4B;AAC/B,QAAMC,YAAY,GAAGZ,kBAAkB,EAAvC;AACA,QAAMa,cAAc,GAAGV,iBAAiB,CAACS,YAAD,CAAxC;AACA,QAAME,WAAW,GAAGjB,OAAO,CAAC,MAAM;AAC9B,UAAMkB,WAAW,GAAGF,cAAc,CAACG,OAAf,EAApB,CAD8B,CAE9B;;AACA,WAAOD,WAAW,CAACR,GAAZ,CAAiBU,CAAD,KAAQ;AAC3BC,MAAAA,WAAW,EAAED,CAAC,CAACT,EAAF,KAASZ,iBAAT,GAA6B,MAA7B,GAAsCqB,CAAC,CAACT,EAD1B;AAE3BE,MAAAA,IAAI,EAAEO,CAAC,CAACP;AAFmB,KAAR,CAAhB,CAAP;AAIH,GAP0B,EAOxB,CAACG,cAAD,CAPwB,CAA3B;AAQA,SAAOC,WAAP;AACH;;AACD,SAASK,kBAAT,CAA4BC,IAA5B,EAAkCC,OAAlC,EAA2C;AACvC,QAAMC,KAAK,GAAGD,OAAO,CAACE,MAAR,CAAe,CAACC,GAAD,EAAMC,CAAN,KAAY;AACrC,UAAMC,KAAK,GAAGN,IAAI,CAACO,GAAL,CAASF,CAAT,CAAd;AACAD,IAAAA,GAAG,CAACC,CAAD,CAAH,GAASC,KAAT;AACA,WAAOF,GAAP;AACH,GAJa,EAIX,EAJW,CAAd;AAKA,SAAO;AAAEhB,IAAAA,EAAE,EAAEY,IAAI,CAACZ,EAAX;AAAec,IAAAA;AAAf,GAAP;AACH;;AACD,SAASM,WAAT,CAAqBnB,KAArB,EAA4BoB,UAA5B,EAAwC;AACpC,QAAMC,WAAW,GAAGrB,KAAK,CAACsB,KAAN,CAAYD,WAAZ,EAApB;AACA,QAAM;AAAEE,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBJ,UAA1B;AACA,QAAMK,MAAM,GAAGzB,KAAK,CAAC0B,IAAN,CAAWf,IAAI,IAAID,kBAAkB,CAACC,IAAD,EAAOU,WAAP,CAArC,EAA0DE,MAA1D,EAAkEC,KAAlE,CAAf;AACA,SAAOC,MAAP;AACH;;AACD,OAAO,SAASE,iBAAT,GAA6B;AAChC,iBAAeC,oBAAf,CAAoCR,UAApC,EAAgDvB,QAAhD,EAA0DD,WAA1D,EAAuE;AACnE,UAAMiC,GAAG,GAAGT,UAAU,CAACX,WAAvB;AACA,UAAMqB,gBAAgB,GAAGzC,+BAA+B,CAACwC,GAAG,KAAK,MAAR,GAAiB1C,iBAAjB,GAAqC0C,GAAtC,EAA2ChC,QAA3C,EAAqDD,WAArD,CAAxD;AACA,UAAMmC,IAAI,GAAGZ,WAAW,CAACW,gBAAD,EAAmBV,UAAnB,CAAxB;AACA,WAAO;AAAEW,MAAAA,IAAF;AAAQC,MAAAA,KAAK,EAAEC;AAAf,KAAP;AACH;;AACD,SAAOL,oBAAP;AACH;AACD,OAAO,SAASM,mBAAT,GAA+B;AAClC,QAAMC,sBAAsB,GAAG,gBAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,KAAnC,EAA0C;AACrE,UAAMC,aAAa,GAAGjD,qBAAqB,CAAC8C,MAAM,CAAC3B,WAAR,EAAqB4B,SAArB,EAAgCC,KAAhC,CAA3C;;AACA,QAAIC,aAAJ,EAAmB;AACf,YAAMC,kBAAkB,GAAGC,cAAc,CAACF,aAAD,EAAgBH,MAAM,CAAC3B,WAAvB,CAAzC;AACA,aAAO;AAAEsB,QAAAA,IAAI,EAAES,kBAAR;AAA4BR,QAAAA,KAAK,EAAEC;AAAnC,OAAP;AACH,KAHD,MAIK;AACD,aAAO;AACHF,QAAAA,IAAI,EAAE,EADH;AAEHC,QAAAA,KAAK,EAAE,IAAIU,KAAJ,CAAW,sBAAqBN,MAAM,CAAC3B,WAAY,EAAnD;AAFJ,OAAP;AAIH;AACJ,GAZD;;AAaA,SAAO0B,sBAAP;AACH;;AACD,SAASM,cAAT,CAAwBE,MAAxB,EAAgClC,WAAhC,EAA6C;AACzC,MAAIkC,MAAM,CAACC,OAAP,KAAmB,CAAvB,EAA0B;AACtB;AACA,UAAMC,GAAG,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAT,EAAcJ,MAAM,CAACC,OAAP,EAAd,CAAZ;AACA,UAAMI,MAAM,GAAG,EAAf;AACA,UAAMC,GAAG,GAAGN,MAAM,CAACO,MAAP,CAAc,KAAd,CAAZ;AACA,UAAM1B,KAAK,GAAGmB,MAAM,CAACO,MAAP,CAAc,OAAd,CAAd;AACA,UAAMC,UAAU,GAAGR,MAAM,CAACO,MAAP,CAAc,SAAd,CAAnB;AACAP,IAAAA,MAAM,CAACS,IAAP,CAAY,CAACC,GAAD,EAAMtB,IAAN,EAAYuB,IAAZ,KAAqB;AAC7B,YAAMtC,CAAC,GAAGiC,GAAG,CAACI,GAAD,CAAb;AACA,YAAME,CAAC,GAAG/B,KAAK,CAAC6B,GAAD,CAAf;AACA,YAAMpD,IAAI,GAAGkD,UAAU,CAACE,GAAD,CAAvB;;AACA,UAAI5C,WAAW,KAAKO,CAApB,EAAuB;AACnBgC,QAAAA,MAAM,CAACQ,IAAP,CAAY;AACR/C,UAAAA,WAAW,EAAEO,CADL;AAERyC,UAAAA,WAAW,EAAEF,CAFL;AAGRG,UAAAA,eAAe,EAAEjD,WAHT;AAIRR,UAAAA;AAJQ,SAAZ;AAMH;;AACD,UAAI+C,MAAM,CAACW,MAAP,GAAgBd,GAApB,EAAyB;AACrBS,QAAAA,IAAI;AACP;AACJ,KAfD,EAeG,IAfH;AAgBA,WAAON,MAAP;AACH;;AACD,SAAO,EAAP;AACH","sourcesContent":["/*!\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Licensed under the MIT license. See LICENSE file in the project.\r\n */\r\nimport { ROOT_COMMUNITY_ID } from '../../constants';\r\nimport { useMemo } from 'react';\r\nimport { findNodesCollectionForCommunity, getEdgesFromTableByID, } from '~/arquero';\r\nimport { useNavigationState, useGroupedByCommunityTable, useGroupedByParentTable, } from '~/state';\r\nfunction useCommunitySizes(ids) {\r\n    const byCommunity = useGroupedByCommunityTable();\r\n    const byParent = useGroupedByParentTable();\r\n    return useMemo(() => {\r\n        return ids.map(id => {\r\n            const nodes = findNodesCollectionForCommunity(id, byParent, byCommunity);\r\n            return { id, size: nodes.size };\r\n        });\r\n    }, [ids, byParent, byCommunity]);\r\n}\r\nexport function useCommunityList() {\r\n    const communityIds = useNavigationState();\r\n    const nodeTableArray = useCommunitySizes(communityIds);\r\n    const communities = useMemo(() => {\r\n        const reverseList = nodeTableArray.reverse();\r\n        // TODO: this swaps in a friendly label for the root, which could be handled more cleanly as an optional label in HB\r\n        return reverseList.map((o) => ({\r\n            communityId: o.id === ROOT_COMMUNITY_ID ? 'Root' : o.id,\r\n            size: o.size,\r\n        }));\r\n    }, [nodeTableArray]);\r\n    return communities;\r\n}\r\nfunction nodeToEntityDetail(node, columns) {\r\n    const attrs = columns.reduce((acc, k) => {\r\n        const value = node.get(k);\r\n        acc[k] = value;\r\n        return acc;\r\n    }, {});\r\n    return { id: node.id, attrs };\r\n}\r\nfunction nodeColumns(nodes, loadParams) {\r\n    const columnNames = nodes.table.columnNames();\r\n    const { offset, count } = loadParams;\r\n    const values = nodes.page(node => nodeToEntityDetail(node, columnNames), offset, count);\r\n    return values;\r\n}\r\nexport function useEntityCallback() {\r\n    async function handleEntityCallback(loadParams, byParent, byCommunity) {\r\n        const cid = loadParams.communityId;\r\n        const selectedNeighbor = findNodesCollectionForCommunity(cid === 'Root' ? ROOT_COMMUNITY_ID : cid, byParent, byCommunity);\r\n        const data = nodeColumns(selectedNeighbor, loadParams);\r\n        return { data, error: undefined };\r\n    }\r\n    return handleEntityCallback;\r\n}\r\nexport function useNeighborCallback() {\r\n    const handleNeighborCallback = async function (params, nodeTable, edges) {\r\n        const neighborTable = getEdgesFromTableByID(params.communityId, nodeTable, edges);\r\n        if (neighborTable) {\r\n            const communityNeighbors = getNeighborIds(neighborTable, params.communityId);\r\n            return { data: communityNeighbors, error: undefined };\r\n        }\r\n        else {\r\n            return {\r\n                data: [],\r\n                error: new Error(`No edges found for ${params.communityId}`),\r\n            };\r\n        }\r\n    };\r\n    return handleNeighborCallback;\r\n}\r\nfunction getNeighborIds(counts, communityId) {\r\n    if (counts.numRows() > 0) {\r\n        // scan the edge counts table to create a few table rows\r\n        const max = Math.min(100, counts.numRows());\r\n        const output = [];\r\n        const key = counts.getter('key');\r\n        const count = counts.getter('count');\r\n        const membership = counts.getter('members');\r\n        counts.scan((idx, data, stop) => {\r\n            const k = key(idx);\r\n            const c = count(idx);\r\n            const size = membership(idx);\r\n            if (communityId !== k) {\r\n                output.push({\r\n                    communityId: k,\r\n                    connections: c,\r\n                    edgeCommunityId: communityId,\r\n                    size,\r\n                });\r\n            }\r\n            if (output.length > max) {\r\n                stop();\r\n            }\r\n        }, true);\r\n        return output;\r\n    }\r\n    return [];\r\n}\r\n"]}]}