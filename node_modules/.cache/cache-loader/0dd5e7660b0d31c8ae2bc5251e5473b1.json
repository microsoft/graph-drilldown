{"remainingRequest":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js??ruleSet[1].rules[0].use[1]!C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js??ruleSet[1].rules[0].use[2]!C:\\ws\\graph-drill\\src\\layout\\fa2.ts","dependencies":[{"path":"C:\\ws\\graph-drill\\src\\layout\\fa2.ts","mtime":1624559748401},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\cache-loader-virtual-2fd14a2267\\0\\cache\\cache-loader-npm-4.1.0-82c3da90d8-0339778bdd.zip\\node_modules\\cache-loader\\dist\\cjs.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgeyBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IH0ga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9CgovKiENCiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0LiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLiBTZWUgTElDRU5TRSBmaWxlIGluIHRoZSBwcm9qZWN0Lg0KICovCmltcG9ydCB7IEdyYXBoQ29udGFpbmVyIH0gZnJvbSAnQGdyYXNwb2xvZ2ljL2dyYXBoJzsKaW1wb3J0IHsgTGF5b3V0V29ya2VyTWFuYWdlciB9IGZyb20gJ0BncmFzcG9sb2dpYy9sYXlvdXQtY29yZSc7CmltcG9ydCB7IGZyb20gfSBmcm9tICdhcnF1ZXJvJzsKaW1wb3J0IHsgbm9ybWFsaXplWFkgfSBmcm9tICd+L2FycXVlcm8nOwoKZnVuY3Rpb24gZ2V0RmEyV29ya2VyKCkgewogIC8vZXNsaW50LWRpc2FibGUtbmV4dC1saW5lCiAgcmV0dXJuIHJlcXVpcmUoJ3dvcmtlci1sb2FkZXIhQGdyYXNwb2xvZ2ljL2xheW91dC1mYTIvZGlzdC9mYTJfd29ya2VyJykuZGVmYXVsdCgpOwp9IC8vIHRoaXMgZ2V0cyB0aGUgbm9kZXMgKyBlZGdlcyByZWFkeSBmb3IgdGhlIGdyYXNwb2xvZ2ljIGxheW91dCB3b3JrZXIKCgpmdW5jdGlvbiBwcmVwR3JhcGgoZWRnZVRhYmxlLCBub2RlVGFibGUpIHsKICAvLyBlZGdlVGFibGUgc2hvdWxkIGp1c3QgYmUgc291cmNlICsgdGFyZ2V0IGNvbHMsIHBsdXMgb3B0aW9uYWwgd2VpZ2h0CiAgLy8gZGVyaXZlIGEgd2VpZ2h0IGlmIG5lZWRlZCwgYW5kIHRoZW4gZXh0cmFjdCBpbmRpdmlkdWFsIG5vZGVzCiAgY29uc3QgZWRnZXMgPSBbXTsKICBjb25zdCBzb3VyY2UgPSBlZGdlVGFibGUuZ2V0dGVyKCdlZGdlLnNvdXJjZScpOwogIGNvbnN0IHRhcmdldCA9IGVkZ2VUYWJsZS5nZXR0ZXIoJ2VkZ2UudGFyZ2V0Jyk7CiAgY29uc3Qgd2VpZ2h0ID0gZWRnZVRhYmxlLmdldHRlcignZWRnZS53ZWlnaHQnKTsKICBlZGdlVGFibGUuc2Nhbihyb3cgPT4gZWRnZXMucHVzaCh7CiAgICBzb3VyY2U6IHNvdXJjZShyb3cpLAogICAgdGFyZ2V0OiB0YXJnZXQocm93KSwKICAgIHdlaWdodDogd2VpZ2h0KHJvdykKICB9KSk7CiAgY29uc3QgblRhYmxlID0gbm9kZVRhYmxlIHx8IGVkZ2VUYWJsZS5mb2xkKFsnZWRnZS5zb3VyY2UnLCAnZWRnZS50YXJnZXQnXSkuZGVkdXBlKCd2YWx1ZScpLnNlbGVjdCh7CiAgICB2YWx1ZTogJ25vZGUuaWQnCiAgfSk7CiAgY29uc3Qgbm9kZXMgPSBbXTsKICBjb25zdCBpZCA9IG5UYWJsZS5nZXR0ZXIoJ25vZGUuaWQnKTsKICBuVGFibGUuc2Nhbihyb3cgPT4gbm9kZXMucHVzaCh7CiAgICBpZDogaWQocm93KSwKICAgIHg6IDAsCiAgICB5OiAwCiAgfSkpOwogIGNvbnN0IGdyYXBoID0gR3JhcGhDb250YWluZXIuaW50ZXJuKHsKICAgIG5vZGVzLAogICAgZWRnZXMKICB9KTsKICBjb25zb2xlLmxvZyhlZGdlcyk7CiAgY29uc3QgY291bnQgPSBlZGdlcy5yZWR1Y2UoKGFjYywgY3VyKSA9PiBhY2MgKyBjdXIud2VpZ2h0ID09PSAxID8gMSA6IDAsIDApOwogIGNvbnNvbGUubG9nKCcxIHdlaWdodCBlZGdlIGNvdW50JywgY291bnQsIGVkZ2VzLmxlbmd0aCwgY291bnQgLyBlZGdlcy5sZW5ndGgpOwogIHJldHVybiBncmFwaDsKfSAvLyBvbmNlIHdlIGhhdmUgbGF5b3V0IGNvbXBsZXRlLCBleHRyYWN0IGl0IGZyb20gdGhlIGdyYXBoIGNvbnRhaW5lciBhbmQgbW92ZSBiYWNrIHRvIGEgdGFibGUKCgpmdW5jdGlvbiBwb3N0UHJvY2Vzc0xheW91dChncmFwaCkgewogIGNvbnN0IG5vZGVzID0gW107CiAgZ3JhcGgubm9kZXMuc2NhbihuID0+IHsKICAgIG5vZGVzLnB1c2goewogICAgICAnbm9kZS5pZCc6IG4uaWQsCiAgICAgICdub2RlLngnOiBuLngsCiAgICAgICdub2RlLnknOiBuLnkKICAgIH0pOwogIH0pOwogIGNvbnN0IHRhYmxlID0gZnJvbShub2Rlcyk7CiAgcmV0dXJuIG5vcm1hbGl6ZVhZKHRhYmxlKTsKfQovKioNCiAqIEV4ZWN1dGVzIEZvcmNlQXRsYXMyIGxheW91dCBvbiBhbiBlZGdlIGxpc3QsDQogKiByZXR1cm5pbmcgYSB0YWJsZSBvZiBub2RlcyB3aXRoIHgveSBjb2x1bW5zLg0KICogQHBhcmFtIGVkZ2VzDQogKiBAcGFyYW0gbm9kZXMgLSBvcHRpb25hbCwgd2lsbCBiZSBkZXJpdmVkIGZyb20gZWRnZSBsaXN0IGlmIG5lY2Vzc2FyeQ0KICogQHBhcmFtIG9wdGlvbnMgLSBhZGRsIGxheW91dCB3b3JrZXIgb3B0aW9ucw0KICovCgoKZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxheW91dEZhMihlZGdlcywgbm9kZXMsIG9wdGlvbnMpIHsKICBjb25zb2xlLnRpbWUoJ2xheW91dC1mYTInKTsKICBjb25zdCBncmFwaCA9IHByZXBHcmFwaChlZGdlcywgbm9kZXMpOwogIGNvbnN0IGxheW91dE1hbmFnZXIgPSBuZXcgTGF5b3V0V29ya2VyTWFuYWdlcihnZXRGYTJXb3JrZXIpOwoKICBjb25zdCBvcHRzID0gX29iamVjdFNwcmVhZCh7CiAgICBzY2FsaW5nUmF0aW86IDEwMDAsCiAgICBzbG93RG93bjogMTAwLjgsCiAgICB0YXJnZXRJdGVyYXRpb25zOiAyMDAsCiAgICBlZGdlV2VpZ2h0SW5mbHVlbmNlOiAxLjEKICB9LCBvcHRpb25zKTsKCiAgbGF5b3V0TWFuYWdlci5jb25maWd1cmUob3B0cyk7CiAgYXdhaXQgbGF5b3V0TWFuYWdlci5sYXlvdXQoZ3JhcGgpOwogIGNvbnN0IHJlc3VsdCA9IHBvc3RQcm9jZXNzTGF5b3V0KGdyYXBoKTsKICBjb25zb2xlLnRpbWVFbmQoJ2xheW91dC1mYTInKTsKICByZXR1cm4gcmVzdWx0Owp9"},{"version":3,"sources":["C:/ws/graph-drill/src/layout/fa2.ts"],"names":["GraphContainer","LayoutWorkerManager","from","normalizeXY","getFa2Worker","require","default","prepGraph","edgeTable","nodeTable","edges","source","getter","target","weight","scan","row","push","nTable","fold","dedupe","select","value","nodes","id","x","y","graph","intern","console","log","count","reduce","acc","cur","length","postProcessLayout","n","table","layoutFa2","options","time","layoutManager","opts","scalingRatio","slowDown","targetIterations","edgeWeightInfluence","configure","layout","result","timeEnd"],"mappings":"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","sourcesContent":["/*!\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Licensed under the MIT license. See LICENSE file in the project.\r\n */\r\nimport { GraphContainer } from '@graspologic/graph';\r\nimport { LayoutWorkerManager } from '@graspologic/layout-core';\r\nimport { from } from 'arquero';\r\nimport { normalizeXY } from '~/arquero';\r\nfunction getFa2Worker() {\r\n    //eslint-disable-next-line\r\n    return require('worker-loader!@graspologic/layout-fa2/dist/fa2_worker').default();\r\n}\r\n// this gets the nodes + edges ready for the graspologic layout worker\r\nfunction prepGraph(edgeTable, nodeTable) {\r\n    // edgeTable should just be source + target cols, plus optional weight\r\n    // derive a weight if needed, and then extract individual nodes\r\n    const edges = [];\r\n    const source = edgeTable.getter('edge.source');\r\n    const target = edgeTable.getter('edge.target');\r\n    const weight = edgeTable.getter('edge.weight');\r\n    edgeTable.scan(row => edges.push({\r\n        source: source(row),\r\n        target: target(row),\r\n        weight: weight(row),\r\n    }));\r\n    const nTable = nodeTable ||\r\n        edgeTable\r\n            .fold(['edge.source', 'edge.target'])\r\n            .dedupe('value')\r\n            .select({ value: 'node.id' });\r\n    const nodes = [];\r\n    const id = nTable.getter('node.id');\r\n    nTable.scan(row => nodes.push({\r\n        id: id(row),\r\n        x: 0,\r\n        y: 0,\r\n    }));\r\n    const graph = GraphContainer.intern({\r\n        nodes,\r\n        edges,\r\n    });\r\n    console.log(edges);\r\n    const count = edges.reduce((acc, cur) => (acc + cur.weight === 1 ? 1 : 0), 0);\r\n    console.log('1 weight edge count', count, edges.length, count / edges.length);\r\n    return graph;\r\n}\r\n// once we have layout complete, extract it from the graph container and move back to a table\r\nfunction postProcessLayout(graph) {\r\n    const nodes = [];\r\n    graph.nodes.scan(n => {\r\n        nodes.push({\r\n            'node.id': n.id,\r\n            'node.x': n.x,\r\n            'node.y': n.y,\r\n        });\r\n    });\r\n    const table = from(nodes);\r\n    return normalizeXY(table);\r\n}\r\n/**\r\n * Executes ForceAtlas2 layout on an edge list,\r\n * returning a table of nodes with x/y columns.\r\n * @param edges\r\n * @param nodes - optional, will be derived from edge list if necessary\r\n * @param options - addl layout worker options\r\n */\r\nexport async function layoutFa2(edges, nodes, options) {\r\n    console.time('layout-fa2');\r\n    const graph = prepGraph(edges, nodes);\r\n    const layoutManager = new LayoutWorkerManager(getFa2Worker);\r\n    const opts = {\r\n        scalingRatio: 1000,\r\n        slowDown: 100.8,\r\n        targetIterations: 200,\r\n        edgeWeightInfluence: 1.1,\r\n        ...options,\r\n    };\r\n    layoutManager.configure(opts);\r\n    await layoutManager.layout(graph);\r\n    const result = postProcessLayout(graph);\r\n    console.timeEnd('layout-fa2');\r\n    return result;\r\n}\r\n"]}]}