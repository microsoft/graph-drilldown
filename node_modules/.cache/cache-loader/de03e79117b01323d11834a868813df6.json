{"remainingRequest":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js??ruleSet[1].rules[0].use[1]!C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js??ruleSet[1].rules[0].use[2]!C:\\ws\\graph-drill\\src\\state\\vis\\view.ts","dependencies":[{"path":"C:\\ws\\graph-drill\\src\\state\\vis\\view.ts","mtime":1631029334919},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\cache-loader-virtual-2fd14a2267\\0\\cache\\cache-loader-npm-4.1.0-82c3da90d8-0339778bdd.zip\\node_modules\\cache-loader\\dist\\cjs.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyohDQogKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4gU2VlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcHJvamVjdC4NCiAqLwppbXBvcnQgeyBWaWV3VHlwZSB9IGZyb20gJy4uLy4uL3R5cGVzJzsKaW1wb3J0IHsgZmVhdHVyZXNTdGF0ZSB9IGZyb20gJy4uL2ZlYXR1cmVzJzsKaW1wb3J0IHsgYXRvbSwgc2VsZWN0b3IsIHVzZVJlY29pbFZhbHVlLCB1c2VTZXRSZWNvaWxTdGF0ZSB9IGZyb20gJ3JlY29pbCc7CmV4cG9ydCBjb25zdCBncmFwaFZpZXdTdGF0ZSA9IGF0b20oewogIGtleTogJ2dyYXBoLXZpZXcnLAogIGRlZmF1bHQ6IFZpZXdUeXBlLlNpbmdsZUdyYXBoCn0pOwpleHBvcnQgY29uc3QgY29uc3RyYWluZWRHcmFwaFZpZXdTdGF0ZSA9IHNlbGVjdG9yKHsKICBrZXk6ICdncmFwaC12aWV3LWNvbnRyYWluZWQnLAogIGdldDogKHsKICAgIGdldAogIH0pID0+IHsKICAgIGNvbnN0IGZlYXR1cmVzID0gZ2V0KGZlYXR1cmVzU3RhdGUpOwogICAgY29uc3QgdmlldyA9IGdldChncmFwaFZpZXdTdGF0ZSk7CiAgICByZXR1cm4gZmVhdHVyZXMuZW5hYmxlU21hbGxNdWx0aXBsZXMgPyB2aWV3IDogVmlld1R5cGUuU2luZ2xlR3JhcGg7CiAgfQp9KTsKZXhwb3J0IGNvbnN0IG5vZGVzVmlzaWJsZVN0YXRlID0gYXRvbSh7CiAga2V5OiAnbm9kZXMtdmlzaWJsZScsCiAgZGVmYXVsdDogdHJ1ZQp9KTsKZXhwb3J0IGZ1bmN0aW9uIHVzZU5vZGVzVmlzaWJsZSgpIHsKICByZXR1cm4gdXNlUmVjb2lsVmFsdWUobm9kZXNWaXNpYmxlU3RhdGUpOwp9CmV4cG9ydCBmdW5jdGlvbiB1c2VTZXROb2Rlc1Zpc2libGUoKSB7CiAgcmV0dXJuIHVzZVNldFJlY29pbFN0YXRlKG5vZGVzVmlzaWJsZVN0YXRlKTsKfQpleHBvcnQgY29uc3QgZWRnZXNWaXNpYmxlU3RhdGUgPSBhdG9tKHsKICBrZXk6ICdlZGdlcy12aXNpYmxlJywKICBkZWZhdWx0OiB0cnVlCn0pOwpleHBvcnQgZnVuY3Rpb24gdXNlRWRnZXNWaXNpYmxlKCkgewogIHJldHVybiB1c2VSZWNvaWxWYWx1ZShlZGdlc1Zpc2libGVTdGF0ZSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIHVzZVNldEVkZ2VzVmlzaWJsZSgpIHsKICByZXR1cm4gdXNlU2V0UmVjb2lsU3RhdGUoZWRnZXNWaXNpYmxlU3RhdGUpOwp9CmV4cG9ydCBmdW5jdGlvbiB1c2VHcmFwaFZpZXdUeXBlKCkgewogIHJldHVybiB1c2VSZWNvaWxWYWx1ZShjb25zdHJhaW5lZEdyYXBoVmlld1N0YXRlKTsKfQpleHBvcnQgZnVuY3Rpb24gdXNlU2V0R3JhcGhWaWV3VHlwZSgpIHsKICByZXR1cm4gdXNlU2V0UmVjb2lsU3RhdGUoZ3JhcGhWaWV3U3RhdGUpOwp9"},{"version":3,"sources":["C:/ws/graph-drill/src/state/vis/view.ts"],"names":["ViewType","featuresState","atom","selector","useRecoilValue","useSetRecoilState","graphViewState","key","default","SingleGraph","constrainedGraphViewState","get","features","view","enableSmallMultiples","nodesVisibleState","useNodesVisible","useSetNodesVisible","edgesVisibleState","useEdgesVisible","useSetEdgesVisible","useGraphViewType","useSetGraphViewType"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,cAAzB,EAAyCC,iBAAzC,QAAkE,QAAlE;AACA,OAAO,MAAMC,cAAc,GAAGJ,IAAI,CAAC;AAC/BK,EAAAA,GAAG,EAAE,YAD0B;AAE/BC,EAAAA,OAAO,EAAER,QAAQ,CAACS;AAFa,CAAD,CAA3B;AAIP,OAAO,MAAMC,yBAAyB,GAAGP,QAAQ,CAAC;AAC9CI,EAAAA,GAAG,EAAE,uBADyC;AAE9CI,EAAAA,GAAG,EAAE,CAAC;AAAEA,IAAAA;AAAF,GAAD,KAAa;AACd,UAAMC,QAAQ,GAAGD,GAAG,CAACV,aAAD,CAApB;AACA,UAAMY,IAAI,GAAGF,GAAG,CAACL,cAAD,CAAhB;AACA,WAAOM,QAAQ,CAACE,oBAAT,GAAgCD,IAAhC,GAAuCb,QAAQ,CAACS,WAAvD;AACH;AAN6C,CAAD,CAA1C;AAQP,OAAO,MAAMM,iBAAiB,GAAGb,IAAI,CAAC;AAClCK,EAAAA,GAAG,EAAE,eAD6B;AAElCC,EAAAA,OAAO,EAAE;AAFyB,CAAD,CAA9B;AAIP,OAAO,SAASQ,eAAT,GAA2B;AAC9B,SAAOZ,cAAc,CAACW,iBAAD,CAArB;AACH;AACD,OAAO,SAASE,kBAAT,GAA8B;AACjC,SAAOZ,iBAAiB,CAACU,iBAAD,CAAxB;AACH;AACD,OAAO,MAAMG,iBAAiB,GAAGhB,IAAI,CAAC;AAClCK,EAAAA,GAAG,EAAE,eAD6B;AAElCC,EAAAA,OAAO,EAAE;AAFyB,CAAD,CAA9B;AAIP,OAAO,SAASW,eAAT,GAA2B;AAC9B,SAAOf,cAAc,CAACc,iBAAD,CAArB;AACH;AACD,OAAO,SAASE,kBAAT,GAA8B;AACjC,SAAOf,iBAAiB,CAACa,iBAAD,CAAxB;AACH;AACD,OAAO,SAASG,gBAAT,GAA4B;AAC/B,SAAOjB,cAAc,CAACM,yBAAD,CAArB;AACH;AACD,OAAO,SAASY,mBAAT,GAA+B;AAClC,SAAOjB,iBAAiB,CAACC,cAAD,CAAxB;AACH","sourcesContent":["/*!\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Licensed under the MIT license. See LICENSE file in the project.\r\n */\r\nimport { ViewType } from '../../types';\r\nimport { featuresState } from '../features';\r\nimport { atom, selector, useRecoilValue, useSetRecoilState } from 'recoil';\r\nexport const graphViewState = atom({\r\n    key: 'graph-view',\r\n    default: ViewType.SingleGraph,\r\n});\r\nexport const constrainedGraphViewState = selector({\r\n    key: 'graph-view-contrained',\r\n    get: ({ get }) => {\r\n        const features = get(featuresState);\r\n        const view = get(graphViewState);\r\n        return features.enableSmallMultiples ? view : ViewType.SingleGraph;\r\n    },\r\n});\r\nexport const nodesVisibleState = atom({\r\n    key: 'nodes-visible',\r\n    default: true,\r\n});\r\nexport function useNodesVisible() {\r\n    return useRecoilValue(nodesVisibleState);\r\n}\r\nexport function useSetNodesVisible() {\r\n    return useSetRecoilState(nodesVisibleState);\r\n}\r\nexport const edgesVisibleState = atom({\r\n    key: 'edges-visible',\r\n    default: true,\r\n});\r\nexport function useEdgesVisible() {\r\n    return useRecoilValue(edgesVisibleState);\r\n}\r\nexport function useSetEdgesVisible() {\r\n    return useSetRecoilState(edgesVisibleState);\r\n}\r\nexport function useGraphViewType() {\r\n    return useRecoilValue(constrainedGraphViewState);\r\n}\r\nexport function useSetGraphViewType() {\r\n    return useSetRecoilState(graphViewState);\r\n}\r\n"]}]}