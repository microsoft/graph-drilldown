{"remainingRequest":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js??ruleSet[1].rules[0].use[1]!C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js??ruleSet[1].rules[0].use[2]!C:\\ws\\graph-drill\\src\\state\\nodes.ts","dependencies":[{"path":"C:\\ws\\graph-drill\\src\\state\\nodes.ts","mtime":1631029334888},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\cache-loader-virtual-2fd14a2267\\0\\cache\\cache-loader-npm-4.1.0-82c3da90d8-0339778bdd.zip\\node_modules\\cache-loader\\dist\\cjs.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyohDQogKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4gU2VlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcHJvamVjdC4NCiAqLwppbXBvcnQgeyBST09UX0NPTU1VTklUWV9JRCB9IGZyb20gJy4uL2NvbnN0YW50cyc7CmltcG9ydCB7IGdyb3VwZWRQYXJlbnRzVGFibGVTdGF0ZSB9IGZyb20gJy4vdGFibGVzJzsKaW1wb3J0IHsgYXRvbSwgc2VsZWN0b3IsIHVzZVJlY29pbFZhbHVlLCB1c2VTZXRSZWNvaWxTdGF0ZSB9IGZyb20gJ3JlY29pbCc7CmltcG9ydCB7IGZpbmRHcm91cEluZGljZXMsIE5vZGVDb2xsZWN0aW9uIH0gZnJvbSAnfi9hcnF1ZXJvJzsKY29uc3QgaG92ZXJlZE5vZGVTdGF0ZSA9IGF0b20oewogIGtleTogJ2hvdmVyZWQtbm9kZScsCiAgZGVmYXVsdDogdW5kZWZpbmVkCn0pOwpleHBvcnQgZnVuY3Rpb24gdXNlSG92ZXJlZE5vZGUoKSB7CiAgcmV0dXJuIHVzZVJlY29pbFZhbHVlKGhvdmVyZWROb2RlU3RhdGUpOwp9CmV4cG9ydCBmdW5jdGlvbiB1c2VTZXRIb3ZlcmVkTm9kZSgpIHsKICByZXR1cm4gdXNlU2V0UmVjb2lsU3RhdGUoaG92ZXJlZE5vZGVTdGF0ZSk7Cn0gLy8gVHJhY2tzIG5vZGVzIHNlbGVjdGVkIGZyb20gc2VhcmNoCgpjb25zdCBzZWxlY3RlZE5vZGVzU3RhdGUgPSBhdG9tKHsKICBrZXk6ICdzZWxlY3RlZC1ub2RlJywKICBkZWZhdWx0OiB1bmRlZmluZWQKfSk7CmV4cG9ydCBmdW5jdGlvbiB1c2VTZWxlY3RlZE5vZGVzU3RhdGUoKSB7CiAgcmV0dXJuIHVzZVJlY29pbFZhbHVlKHNlbGVjdGVkTm9kZXNTdGF0ZSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIHVzZVNldFNlbGVjdGVkTm9kZXMoKSB7CiAgcmV0dXJuIHVzZVNldFJlY29pbFN0YXRlKHNlbGVjdGVkTm9kZXNTdGF0ZSk7Cn0gLy8gdGhpcyBpcyBhIGxpc3Qgb2YgdGhlIHVuaXF1ZSBub2Rlcywgd2hpY2ggaXMgZGVmaW5lZCBhcyBhbGwgdGhvc2UgZm9yCi8vIGNvbW11bml0aWVzIHdpdGggbm8gcGFyZW50LCBpLmUuLCB0aGUgcm9vdHMKLy8gbm90ZSB0aGF0IHRoZXkgd2lsbCB0aGVyZWZvcmUgaGF2ZSByb290IGNvbW11bml0eSBwcm9wZXJ0aWVzCgpleHBvcnQgY29uc3QgdW5pcXVlTm9kZXNTdGF0ZSA9IHNlbGVjdG9yKHsKICBrZXk6ICd1bmlxdWUtbm9kZXMnLAogIGdldDogKHsKICAgIGdldAogIH0pID0+IHsKICAgIGNvbnN0IHBhcmVudHMgPSBnZXQoZ3JvdXBlZFBhcmVudHNUYWJsZVN0YXRlKTsKICAgIGNvbnN0IGluZGljZXMgPSBmaW5kR3JvdXBJbmRpY2VzKHBhcmVudHMsICdjb21tdW5pdHkucGlkJywgUk9PVF9DT01NVU5JVFlfSUQpOwogICAgcmV0dXJuIG5ldyBOb2RlQ29sbGVjdGlvbihwYXJlbnRzLCBpbmRpY2VzKTsKICB9LAogIGRhbmdlcm91c2x5QWxsb3dNdXRhYmlsaXR5OiB0cnVlCn0pOwpleHBvcnQgZnVuY3Rpb24gdXNlVW5pcXVlTm9kZXMoKSB7CiAgcmV0dXJuIHVzZVJlY29pbFZhbHVlKHVuaXF1ZU5vZGVzU3RhdGUpOwp9"},{"version":3,"sources":["C:/ws/graph-drill/src/state/nodes.ts"],"names":["ROOT_COMMUNITY_ID","groupedParentsTableState","atom","selector","useRecoilValue","useSetRecoilState","findGroupIndices","NodeCollection","hoveredNodeState","key","default","undefined","useHoveredNode","useSetHoveredNode","selectedNodesState","useSelectedNodesState","useSetSelectedNodes","uniqueNodesState","get","parents","indices","dangerouslyAllowMutability","useUniqueNodes"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,iBAAT,QAAkC,cAAlC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,cAAzB,EAAyCC,iBAAzC,QAAkE,QAAlE;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,WAAjD;AACA,MAAMC,gBAAgB,GAAGN,IAAI,CAAC;AAC1BO,EAAAA,GAAG,EAAE,cADqB;AAE1BC,EAAAA,OAAO,EAAEC;AAFiB,CAAD,CAA7B;AAIA,OAAO,SAASC,cAAT,GAA0B;AAC7B,SAAOR,cAAc,CAACI,gBAAD,CAArB;AACH;AACD,OAAO,SAASK,iBAAT,GAA6B;AAChC,SAAOR,iBAAiB,CAACG,gBAAD,CAAxB;AACH,C,CACD;;AACA,MAAMM,kBAAkB,GAAGZ,IAAI,CAAC;AAC5BO,EAAAA,GAAG,EAAE,eADuB;AAE5BC,EAAAA,OAAO,EAAEC;AAFmB,CAAD,CAA/B;AAIA,OAAO,SAASI,qBAAT,GAAiC;AACpC,SAAOX,cAAc,CAACU,kBAAD,CAArB;AACH;AACD,OAAO,SAASE,mBAAT,GAA+B;AAClC,SAAOX,iBAAiB,CAACS,kBAAD,CAAxB;AACH,C,CACD;AACA;AACA;;AACA,OAAO,MAAMG,gBAAgB,GAAGd,QAAQ,CAAC;AACrCM,EAAAA,GAAG,EAAE,cADgC;AAErCS,EAAAA,GAAG,EAAE,CAAC;AAAEA,IAAAA;AAAF,GAAD,KAAa;AACd,UAAMC,OAAO,GAAGD,GAAG,CAACjB,wBAAD,CAAnB;AACA,UAAMmB,OAAO,GAAGd,gBAAgB,CAACa,OAAD,EAAU,eAAV,EAA2BnB,iBAA3B,CAAhC;AACA,WAAO,IAAIO,cAAJ,CAAmBY,OAAnB,EAA4BC,OAA5B,CAAP;AACH,GANoC;AAOrCC,EAAAA,0BAA0B,EAAE;AAPS,CAAD,CAAjC;AASP,OAAO,SAASC,cAAT,GAA0B;AAC7B,SAAOlB,cAAc,CAACa,gBAAD,CAArB;AACH","sourcesContent":["/*!\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Licensed under the MIT license. See LICENSE file in the project.\r\n */\r\nimport { ROOT_COMMUNITY_ID } from '../constants';\r\nimport { groupedParentsTableState } from './tables';\r\nimport { atom, selector, useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport { findGroupIndices, NodeCollection } from '~/arquero';\r\nconst hoveredNodeState = atom({\r\n    key: 'hovered-node',\r\n    default: undefined,\r\n});\r\nexport function useHoveredNode() {\r\n    return useRecoilValue(hoveredNodeState);\r\n}\r\nexport function useSetHoveredNode() {\r\n    return useSetRecoilState(hoveredNodeState);\r\n}\r\n// Tracks nodes selected from search\r\nconst selectedNodesState = atom({\r\n    key: 'selected-node',\r\n    default: undefined,\r\n});\r\nexport function useSelectedNodesState() {\r\n    return useRecoilValue(selectedNodesState);\r\n}\r\nexport function useSetSelectedNodes() {\r\n    return useSetRecoilState(selectedNodesState);\r\n}\r\n// this is a list of the unique nodes, which is defined as all those for\r\n// communities with no parent, i.e., the roots\r\n// note that they will therefore have root community properties\r\nexport const uniqueNodesState = selector({\r\n    key: 'unique-nodes',\r\n    get: ({ get }) => {\r\n        const parents = get(groupedParentsTableState);\r\n        const indices = findGroupIndices(parents, 'community.pid', ROOT_COMMUNITY_ID);\r\n        return new NodeCollection(parents, indices);\r\n    },\r\n    dangerouslyAllowMutability: true,\r\n});\r\nexport function useUniqueNodes() {\r\n    return useRecoilValue(uniqueNodesState);\r\n}\r\n"]}]}