{"remainingRequest":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js??ruleSet[1].rules[0].use[1]!C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js??ruleSet[1].rules[0].use[2]!C:\\ws\\graph-drill\\src\\layout\\grid.ts","dependencies":[{"path":"C:\\ws\\graph-drill\\src\\layout\\grid.ts","mtime":1624559748403},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\cache-loader-virtual-2fd14a2267\\0\\cache\\cache-loader-npm-4.1.0-82c3da90d8-0339778bdd.zip\\node_modules\\cache-loader\\dist\\cjs.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyohDQogKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4gU2VlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcHJvamVjdC4NCiAqLwppbXBvcnQgeyBvcCB9IGZyb20gJ2FycXVlcm8nOwppbXBvcnQgeyBub3JtYWxpemVYWSB9IGZyb20gJ34vYXJxdWVybyc7Ci8qKg0KICogQXNzaWducyBub2RlIHBvc2l0aW9ucyBieSB1bnJvbGxpbmcgaW50byBhIHNxdWFyZSBncmlkLg0KICogVGhpcyBjYW4gYmUgdXNlZnVsIHdoZW4gbm9kZXMgYXJlIHNvcnRlZCBieSBhIGdyb3VwaW5nIGZpZWxkLA0KICogYXMgaXQgd2lsbCBjb25zb2xpZGF0ZSBibG9ja3Mgb2YgY29sb3IgaW4gc3RyaXBzLg0KICogQHBhcmFtIG5vZGVzDQogKi8KCmV4cG9ydCBhc3luYyBmdW5jdGlvbiBsYXlvdXRHcmlkKG5vZGVzKSB7CiAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gewogICAgY29uc3QgcmFua2VkID0gbm9kZXMucGFyYW1zKHsKICAgICAgcm93czogbm9kZXMubnVtUm93cygpLAogICAgICByb290OiBNYXRoLnNxcnQobm9kZXMubnVtUm93cygpKQogICAgfSkuZGVyaXZlKHsKICAgICAgcm93OiBvcC5yb3dfbnVtYmVyKCkKICAgIH0pLmRlcml2ZSh7CiAgICAgICdub2RlLnknOiAoZCwgJCkgPT4gewogICAgICAgIGNvbnN0IHIgPSBNYXRoLmZsb29yKGQucm93IC8gJC5yb290KTsKICAgICAgICBjb25zdCBiYXNlWSA9IDEgLyAkLnJvb3QgKiByOwogICAgICAgIHJldHVybiAxIC0gYmFzZVkgLSAxIC8gJC5yb290OwogICAgICB9LAogICAgICAnbm9kZS54JzogKGQsICQpID0+IHsKICAgICAgICBjb25zdCByID0gTWF0aC5mbG9vcihkLnJvdyAvICQucm9vdCk7CiAgICAgICAgY29uc3QgY29sID0gZC5yb3cgLSByICogJC5yb290OwogICAgICAgIHJldHVybiAxIC8gJC5yb290ICogY29sOwogICAgICB9CiAgICB9KTsKICAgIGNvbnN0IG5vcm1hbGl6ZWQgPSBub3JtYWxpemVYWShyYW5rZWQpOwogICAgcmVzb2x2ZShub3JtYWxpemVkKTsKICB9KTsKfQ=="},{"version":3,"sources":["C:/ws/graph-drill/src/layout/grid.ts"],"names":["op","normalizeXY","layoutGrid","nodes","Promise","resolve","ranked","params","rows","numRows","root","Math","sqrt","derive","row","row_number","d","$","r","floor","baseY","col","normalized"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,EAAT,QAAmB,SAAnB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,eAAeC,UAAf,CAA0BC,KAA1B,EAAiC;AACpC,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC1B,UAAMC,MAAM,GAAGH,KAAK,CACfI,MADU,CACH;AACRC,MAAAA,IAAI,EAAEL,KAAK,CAACM,OAAN,EADE;AAERC,MAAAA,IAAI,EAAEC,IAAI,CAACC,IAAL,CAAUT,KAAK,CAACM,OAAN,EAAV;AAFE,KADG,EAKVI,MALU,CAKH;AACRC,MAAAA,GAAG,EAAEd,EAAE,CAACe,UAAH;AADG,KALG,EAQVF,MARU,CAQH;AACR,gBAAU,CAACG,CAAD,EAAIC,CAAJ,KAAU;AAChB,cAAMC,CAAC,GAAGP,IAAI,CAACQ,KAAL,CAAWH,CAAC,CAACF,GAAF,GAAQG,CAAC,CAACP,IAArB,CAAV;AACA,cAAMU,KAAK,GAAI,IAAIH,CAAC,CAACP,IAAP,GAAeQ,CAA7B;AACA,eAAO,IAAIE,KAAJ,GAAY,IAAIH,CAAC,CAACP,IAAzB;AACH,OALO;AAMR,gBAAU,CAACM,CAAD,EAAIC,CAAJ,KAAU;AAChB,cAAMC,CAAC,GAAGP,IAAI,CAACQ,KAAL,CAAWH,CAAC,CAACF,GAAF,GAAQG,CAAC,CAACP,IAArB,CAAV;AACA,cAAMW,GAAG,GAAGL,CAAC,CAACF,GAAF,GAAQI,CAAC,GAAGD,CAAC,CAACP,IAA1B;AACA,eAAQ,IAAIO,CAAC,CAACP,IAAP,GAAeW,GAAtB;AACH;AAVO,KARG,CAAf;AAoBA,UAAMC,UAAU,GAAGrB,WAAW,CAACK,MAAD,CAA9B;AACAD,IAAAA,OAAO,CAACiB,UAAD,CAAP;AACH,GAvBM,CAAP;AAwBH","sourcesContent":["/*!\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Licensed under the MIT license. See LICENSE file in the project.\r\n */\r\nimport { op } from 'arquero';\r\nimport { normalizeXY } from '~/arquero';\r\n/**\r\n * Assigns node positions by unrolling into a square grid.\r\n * This can be useful when nodes are sorted by a grouping field,\r\n * as it will consolidate blocks of color in strips.\r\n * @param nodes\r\n */\r\nexport async function layoutGrid(nodes) {\r\n    return new Promise(resolve => {\r\n        const ranked = nodes\r\n            .params({\r\n            rows: nodes.numRows(),\r\n            root: Math.sqrt(nodes.numRows()),\r\n        })\r\n            .derive({\r\n            row: op.row_number(),\r\n        })\r\n            .derive({\r\n            'node.y': (d, $) => {\r\n                const r = Math.floor(d.row / $.root);\r\n                const baseY = (1 / $.root) * r;\r\n                return 1 - baseY - 1 / $.root;\r\n            },\r\n            'node.x': (d, $) => {\r\n                const r = Math.floor(d.row / $.root);\r\n                const col = d.row - r * $.root;\r\n                return (1 / $.root) * col;\r\n            },\r\n        });\r\n        const normalized = normalizeXY(ranked);\r\n        resolve(normalized);\r\n    });\r\n}\r\n"]}]}