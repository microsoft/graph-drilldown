{"remainingRequest":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js??ruleSet[1].rules[0].use[1]!C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js??ruleSet[1].rules[0].use[2]!C:\\ws\\graph-drill\\src\\controls\\HeaderLegend\\hooks.ts","dependencies":[{"path":"C:\\ws\\graph-drill\\src\\controls\\HeaderLegend\\hooks.ts","mtime":1631029334837},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\cache-loader-virtual-2fd14a2267\\0\\cache\\cache-loader-npm-4.1.0-82c3da90d8-0339778bdd.zip\\node_modules\\cache-loader\\dist\\cjs.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyohDQogKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4gU2VlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcHJvamVjdC4NCiAqLwppbXBvcnQgeyB1c2VOdW1lcmljRW5jb2RpbmdTY2FsZSwgdXNlVGhlbWF0aWNDb2xvclNjYWxlIH0gZnJvbSAnLi4vLi4vaG9va3MvZ3JhcGgnOwppbXBvcnQgeyBEYXRhQmluZGluZyB9IGZyb20gJy4uLy4uL3R5cGVzJzsKaW1wb3J0IHsgZ2V0TmFtZWRTY2hlbWVDb2xvciwgaXNOb21pbmFsIH0gZnJvbSAnQHRoZW1hdGljL2NvbG9yJzsKaW1wb3J0IHsgdXNlVGhlbWF0aWMgfSBmcm9tICdAdGhlbWF0aWMvcmVhY3QnOwppbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JzsKZXhwb3J0IGZ1bmN0aW9uIHVzZUlzTm9taW5hbChlbmNvZGluZykgewogIHJldHVybiB1c2VNZW1vKCgpID0+IGlzTm9taW5hbChlbmNvZGluZy5zY2FsZU5hbWUpLCBbZW5jb2RpbmddKTsKfQpleHBvcnQgZnVuY3Rpb24gdXNlTGVnZW5kTnVtZXJpY1NjYWxlKGVuY29kaW5nLCBjb3VudCA9IDEwLAovKioNCiAqIFZhbHVlIHRvIHVzZSBpZiBubyBlbmNvZGluZyBpcyBwcm92aWRlZC4NCiAqLwpkZWZhdWx0VmFsdWUgPSAwKSB7CiAgY29uc3QgZW5jID0gdXNlTWVtbygoKSA9PiB7CiAgICByZXR1cm4gZW5jb2RpbmcgfHwgewogICAgICBiaW5kaW5nOiBEYXRhQmluZGluZy5GaXhlZCwKICAgICAgdmFsdWU6IGRlZmF1bHRWYWx1ZQogICAgfTsKICB9LCBbZW5jb2RpbmcsIGRlZmF1bHRWYWx1ZV0pOwogIGNvbnN0IHNjYWxlID0gdXNlU2l6ZVNjYWxlKGVuYywgY291bnQpOwogIHJldHVybiB1c2VDYWxsYmFjayh2YWx1ZSA9PiB7CiAgICBpZiAoZW5jLmJpbmRpbmcgPT09IERhdGFCaW5kaW5nLkZpeGVkKSB7CiAgICAgIHJldHVybiBlbmMudmFsdWU7CiAgICB9CgogICAgcmV0dXJuIHNjYWxlKHZhbHVlIHx8IDApOwogIH0sIFtlbmMsIHNjYWxlXSk7Cn0KCmZ1bmN0aW9uIHVzZVNpemVTY2FsZShlbmNvZGluZywgY291bnQpIHsKICBjb25zdCBzY2FsZSA9IHVzZU51bWVyaWNFbmNvZGluZ1NjYWxlKGVuY29kaW5nKTsKICByZXR1cm4gdXNlQ2FsbGJhY2soaW5kZXggPT4gewogICAgY29uc3QgW21pbiwgbWF4XSA9IGVuY29kaW5nLmRvbWFpbjsKICAgIGNvbnN0IHN0ZXBzID0gKG1heCAtIG1pbikgLyBjb3VudDsKICAgIGNvbnN0IHYgPSBzdGVwcyAqIGluZGV4ICsgbWluOwogICAgcmV0dXJuIHNjYWxlKHYpOwogIH0sIFtlbmNvZGluZywgc2NhbGUsIGNvdW50XSk7Cn0KLyoqDQogKiBQcm92aWRlcyBhbiBpbmRleGVkIGNvbG9yIHNjYWxlIHRoYXQgbWFwcyB0aGUgZW5jb2RpbmcgY29sb3JzDQogKiB0byB0aGUgaXRlbSBwb3NpdGlvbi4gRHluYW1pY2FsbHkgcmV0dXJucyB0aGUgY29ycmVjdCBjb2xvciBiYXNlZA0KICogb24gZW5jb2RpbmcgdHlwZS4NCiAqIElmIHRoZXJlIGlzIG5vIGVuY29kaW5nLCBpdCByZXR1cm5zIHRoZSBkZWZhdWx0IGxlZ2VuZCBmaWxsIGNvbG9yLg0KICogQHBhcmFtIGVuY29kaW5nDQogKiBAcGFyYW0gY291bnQNCiAqLwoKCmV4cG9ydCBmdW5jdGlvbiB1c2VMZWdlbmRDb2xvclNjYWxlKGVuY29kaW5nLCBjb3VudCA9IDEwLAovKioNCiAqIERlZmF1bHQgaGV4IGNvbG9yIHRvIHVzZSBpZiBubyBlbmNvZGluZyBpcyBwcm92aWRlZC4NCiAqLwpkZWZhdWx0VmFsdWUgPSAnbm9uZScpIHsKICBjb25zdCBlbmMgPSB1c2VNZW1vKCgpID0+IHsKICAgIHJldHVybiBlbmNvZGluZyB8fCB7CiAgICAgIGJpbmRpbmc6IERhdGFCaW5kaW5nLkZpeGVkLAogICAgICB2YWx1ZTogZGVmYXVsdFZhbHVlCiAgICB9OwogIH0sIFtlbmNvZGluZywgZGVmYXVsdFZhbHVlXSk7CiAgY29uc3QgZml4ZWRDb2xvciA9IHVzZUZpeGVkQ29sb3IoZW5jKTsKICBjb25zdCBwYWxldHRlQ29sb3IgPSB1c2VQYWxldHRlQ29sb3IoZW5jKTsKICBjb25zdCBzYW1wbGVkQ29sb3JzID0gdXNlU2FtcGxlZENvbG9ycyhlbmMsIGNvdW50KTsKICByZXR1cm4gdXNlQ2FsbGJhY2soaW5kZXggPT4gewogICAgc3dpdGNoIChlbmMuYmluZGluZykgewogICAgICBjYXNlIERhdGFCaW5kaW5nLkZpeGVkOgogICAgICAgIHJldHVybiBmaXhlZENvbG9yOwoKICAgICAgY2FzZSBEYXRhQmluZGluZy5QYWxldHRlOgogICAgICAgIHJldHVybiBwYWxldHRlQ29sb3I7CgogICAgICBjYXNlIERhdGFCaW5kaW5nLlNjYWxlZDoKICAgICAgICByZXR1cm4gc2FtcGxlZENvbG9yc1tpbmRleCB8fCAwXTsKICAgIH0KICB9LCBbZW5jLCBmaXhlZENvbG9yLCBwYWxldHRlQ29sb3IsIHNhbXBsZWRDb2xvcnNdKTsKfQpleHBvcnQgZnVuY3Rpb24gdXNlU2FtcGxlZENvbG9ycyhlbmNvZGluZywgY291bnQgPSAxMCkgewogIGNvbnN0IHNjYWxlID0gdXNlVGhlbWF0aWNDb2xvclNjYWxlKGVuY29kaW5nKTsKICByZXR1cm4gdXNlTWVtbygoKSA9PiB7CiAgICBjb25zdCBhbGxDb2xvcnMgPSBzY2FsZS50b0FycmF5KCk7IC8vIEhBQ0s6IHRoZXJlIGlzIGEgYnVnIGluIHRoZSB0aGVtYXRpYyB0b0FycmF5IGZvciBjb250aW51b3VzIHNjYWxlcwogICAgLy8gaXQgZG9lcyBub3QgY292ZXIgdGhlIHdob2xlIHJhbmdlIGNvcnJlY3RseQogICAgLy8gdGhpcyBjaGVja3MgZm9yIGEgbGVuZ3RoIHRoYXQgbWF0Y2hlcyB0aGUgaGFyZC1jb2RlZCBjb250aW51b3VzIG91dHB1dAogICAgLy8gZm9yIHRoZW1hdGljLCBhbmQgcmUtc2NhbGVzIHRvIGVuc3VyZSBpdCBjYXB0dXJlcyB0aGUgZW5kcG9pbnRzCgogICAgaWYgKGFsbENvbG9ycy5sZW5ndGggPT09IDEwMCkgewogICAgICBjb25zdCBbbWluLCBtYXhdID0gZW5jb2RpbmcuZG9tYWluIHx8IFswLCAxXTsKICAgICAgY29uc3Qgc3RlcHMgPSAobWF4IC0gbWluKSAvIGNvdW50OwogICAgICBjb25zdCBjb2xvcnMgPSBuZXcgQXJyYXkoY291bnQpLmZpbGwoMSkubWFwKChhLCBpKSA9PiB7CiAgICAgICAgY29uc3QgdiA9IHN0ZXBzICogaSArIG1pbjsKICAgICAgICByZXR1cm4gc2NhbGUodikuaGV4KCk7CiAgICAgIH0pOwogICAgICByZXR1cm4gY29sb3JzOwogICAgfQoKICAgIHJldHVybiBzY2FsZS50b0FycmF5KGNvdW50KTsKICB9LCBbc2NhbGUsIGVuY29kaW5nLCBjb3VudF0pOwp9CmV4cG9ydCBmdW5jdGlvbiB1c2VGaXhlZENvbG9yKGVuY29kaW5nKSB7CiAgcmV0dXJuIHVzZU1lbW8oKCkgPT4gZW5jb2RpbmcudmFsdWUsIFtlbmNvZGluZ10pOwp9CmV4cG9ydCBmdW5jdGlvbiB1c2VQYWxldHRlQ29sb3IoZW5jb2RpbmcpIHsKICBjb25zdCB0aGVtZSA9IHVzZVRoZW1hdGljKCk7CiAgcmV0dXJuIHVzZU1lbW8oKCkgPT4gZ2V0TmFtZWRTY2hlbWVDb2xvcih0aGVtZS5zY2hlbWUsIGVuY29kaW5nLnRoZW1hdGljU2NoZW1lUGF0aCkuaGV4KCksIFt0aGVtZSwgZW5jb2RpbmddKTsKfQ=="},{"version":3,"sources":["C:/ws/graph-drill/src/controls/HeaderLegend/hooks.ts"],"names":["useNumericEncodingScale","useThematicColorScale","DataBinding","getNamedSchemeColor","isNominal","useThematic","useCallback","useMemo","useIsNominal","encoding","scaleName","useLegendNumericScale","count","defaultValue","enc","binding","Fixed","value","scale","useSizeScale","index","min","max","domain","steps","v","useLegendColorScale","fixedColor","useFixedColor","paletteColor","usePaletteColor","sampledColors","useSampledColors","Palette","Scaled","allColors","toArray","length","colors","Array","fill","map","a","i","hex","theme","scheme","thematicSchemePath"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,uBAAT,EAAkCC,qBAAlC,QAAgE,mBAAhE;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,mBAAT,EAA8BC,SAA9B,QAA+C,iBAA/C;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,OAArC;AACA,OAAO,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;AACnC,SAAOF,OAAO,CAAC,MAAMH,SAAS,CAACK,QAAQ,CAACC,SAAV,CAAhB,EAAsC,CAACD,QAAD,CAAtC,CAAd;AACH;AACD,OAAO,SAASE,qBAAT,CAA+BF,QAA/B,EAAyCG,KAAK,GAAG,EAAjD;AACP;AACA;AACA;AACAC,YAAY,GAAG,CAJR,EAIW;AACd,QAAMC,GAAG,GAAGP,OAAO,CAAC,MAAM;AACtB,WAAQE,QAAQ,IACZ;AACIM,MAAAA,OAAO,EAAEb,WAAW,CAACc,KADzB;AAEIC,MAAAA,KAAK,EAAEJ;AAFX,KADJ;AAKH,GANkB,EAMhB,CAACJ,QAAD,EAAWI,YAAX,CANgB,CAAnB;AAOA,QAAMK,KAAK,GAAGC,YAAY,CAACL,GAAD,EAAMF,KAAN,CAA1B;AACA,SAAON,WAAW,CAAEW,KAAD,IAAW;AAC1B,QAAIH,GAAG,CAACC,OAAJ,KAAgBb,WAAW,CAACc,KAAhC,EAAuC;AACnC,aAAOF,GAAG,CAACG,KAAX;AACH;;AACD,WAAOC,KAAK,CAACD,KAAK,IAAI,CAAV,CAAZ;AACH,GALiB,EAKf,CAACH,GAAD,EAAMI,KAAN,CALe,CAAlB;AAMH;;AACD,SAASC,YAAT,CAAsBV,QAAtB,EAAgCG,KAAhC,EAAuC;AACnC,QAAMM,KAAK,GAAGlB,uBAAuB,CAACS,QAAD,CAArC;AACA,SAAOH,WAAW,CAACc,KAAK,IAAI;AACxB,UAAM,CAACC,GAAD,EAAMC,GAAN,IAAab,QAAQ,CAACc,MAA5B;AACA,UAAMC,KAAK,GAAG,CAACF,GAAG,GAAGD,GAAP,IAAcT,KAA5B;AACA,UAAMa,CAAC,GAAGD,KAAK,GAAGJ,KAAR,GAAgBC,GAA1B;AACA,WAAOH,KAAK,CAACO,CAAD,CAAZ;AACH,GALiB,EAKf,CAAChB,QAAD,EAAWS,KAAX,EAAkBN,KAAlB,CALe,CAAlB;AAMH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASc,mBAAT,CAA6BjB,QAA7B,EAAuCG,KAAK,GAAG,EAA/C;AACP;AACA;AACA;AACAC,YAAY,GAAG,MAJR,EAIgB;AACnB,QAAMC,GAAG,GAAGP,OAAO,CAAC,MAAM;AACtB,WAAQE,QAAQ,IACZ;AACIM,MAAAA,OAAO,EAAEb,WAAW,CAACc,KADzB;AAEIC,MAAAA,KAAK,EAAEJ;AAFX,KADJ;AAKH,GANkB,EAMhB,CAACJ,QAAD,EAAWI,YAAX,CANgB,CAAnB;AAOA,QAAMc,UAAU,GAAGC,aAAa,CAACd,GAAD,CAAhC;AACA,QAAMe,YAAY,GAAGC,eAAe,CAAChB,GAAD,CAApC;AACA,QAAMiB,aAAa,GAAGC,gBAAgB,CAAClB,GAAD,EAAMF,KAAN,CAAtC;AACA,SAAON,WAAW,CAAEc,KAAD,IAAW;AAC1B,YAAQN,GAAG,CAACC,OAAZ;AACI,WAAKb,WAAW,CAACc,KAAjB;AACI,eAAOW,UAAP;;AACJ,WAAKzB,WAAW,CAAC+B,OAAjB;AACI,eAAOJ,YAAP;;AACJ,WAAK3B,WAAW,CAACgC,MAAjB;AACI,eAAOH,aAAa,CAACX,KAAK,IAAI,CAAV,CAApB;AANR;AAQH,GATiB,EASf,CAACN,GAAD,EAAMa,UAAN,EAAkBE,YAAlB,EAAgCE,aAAhC,CATe,CAAlB;AAUH;AACD,OAAO,SAASC,gBAAT,CAA0BvB,QAA1B,EAAoCG,KAAK,GAAG,EAA5C,EAAgD;AACnD,QAAMM,KAAK,GAAGjB,qBAAqB,CAACQ,QAAD,CAAnC;AACA,SAAOF,OAAO,CAAC,MAAM;AACjB,UAAM4B,SAAS,GAAGjB,KAAK,CAACkB,OAAN,EAAlB,CADiB,CAEjB;AACA;AACA;AACA;;AACA,QAAID,SAAS,CAACE,MAAV,KAAqB,GAAzB,EAA8B;AAC1B,YAAM,CAAChB,GAAD,EAAMC,GAAN,IAAab,QAAQ,CAACc,MAAT,IAAmB,CAAC,CAAD,EAAI,CAAJ,CAAtC;AACA,YAAMC,KAAK,GAAG,CAACF,GAAG,GAAGD,GAAP,IAAcT,KAA5B;AACA,YAAM0B,MAAM,GAAG,IAAIC,KAAJ,CAAU3B,KAAV,EAAiB4B,IAAjB,CAAsB,CAAtB,EAAyBC,GAAzB,CAA6B,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClD,cAAMlB,CAAC,GAAGD,KAAK,GAAGmB,CAAR,GAAYtB,GAAtB;AACA,eAAOH,KAAK,CAACO,CAAD,CAAL,CAASmB,GAAT,EAAP;AACH,OAHc,CAAf;AAIA,aAAON,MAAP;AACH;;AACD,WAAOpB,KAAK,CAACkB,OAAN,CAAcxB,KAAd,CAAP;AACH,GAhBa,EAgBX,CAACM,KAAD,EAAQT,QAAR,EAAkBG,KAAlB,CAhBW,CAAd;AAiBH;AACD,OAAO,SAASgB,aAAT,CAAuBnB,QAAvB,EAAiC;AACpC,SAAOF,OAAO,CAAC,MAAME,QAAQ,CAACQ,KAAhB,EAAuB,CAACR,QAAD,CAAvB,CAAd;AACH;AACD,OAAO,SAASqB,eAAT,CAAyBrB,QAAzB,EAAmC;AACtC,QAAMoC,KAAK,GAAGxC,WAAW,EAAzB;AACA,SAAOE,OAAO,CAAC,MAAMJ,mBAAmB,CAAC0C,KAAK,CAACC,MAAP,EAAerC,QAAQ,CAACsC,kBAAxB,CAAnB,CAA+DH,GAA/D,EAAP,EAA6E,CAACC,KAAD,EAAQpC,QAAR,CAA7E,CAAd;AACH","sourcesContent":["/*!\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Licensed under the MIT license. See LICENSE file in the project.\r\n */\r\nimport { useNumericEncodingScale, useThematicColorScale, } from '../../hooks/graph';\r\nimport { DataBinding } from '../../types';\r\nimport { getNamedSchemeColor, isNominal } from '@thematic/color';\r\nimport { useThematic } from '@thematic/react';\r\nimport { useCallback, useMemo } from 'react';\r\nexport function useIsNominal(encoding) {\r\n    return useMemo(() => isNominal(encoding.scaleName), [encoding]);\r\n}\r\nexport function useLegendNumericScale(encoding, count = 10, \r\n/**\r\n * Value to use if no encoding is provided.\r\n */\r\ndefaultValue = 0) {\r\n    const enc = useMemo(() => {\r\n        return (encoding ||\r\n            {\r\n                binding: DataBinding.Fixed,\r\n                value: defaultValue,\r\n            });\r\n    }, [encoding, defaultValue]);\r\n    const scale = useSizeScale(enc, count);\r\n    return useCallback((value) => {\r\n        if (enc.binding === DataBinding.Fixed) {\r\n            return enc.value;\r\n        }\r\n        return scale(value || 0);\r\n    }, [enc, scale]);\r\n}\r\nfunction useSizeScale(encoding, count) {\r\n    const scale = useNumericEncodingScale(encoding);\r\n    return useCallback(index => {\r\n        const [min, max] = encoding.domain;\r\n        const steps = (max - min) / count;\r\n        const v = steps * index + min;\r\n        return scale(v);\r\n    }, [encoding, scale, count]);\r\n}\r\n/**\r\n * Provides an indexed color scale that maps the encoding colors\r\n * to the item position. Dynamically returns the correct color based\r\n * on encoding type.\r\n * If there is no encoding, it returns the default legend fill color.\r\n * @param encoding\r\n * @param count\r\n */\r\nexport function useLegendColorScale(encoding, count = 10, \r\n/**\r\n * Default hex color to use if no encoding is provided.\r\n */\r\ndefaultValue = 'none') {\r\n    const enc = useMemo(() => {\r\n        return (encoding ||\r\n            {\r\n                binding: DataBinding.Fixed,\r\n                value: defaultValue,\r\n            });\r\n    }, [encoding, defaultValue]);\r\n    const fixedColor = useFixedColor(enc);\r\n    const paletteColor = usePaletteColor(enc);\r\n    const sampledColors = useSampledColors(enc, count);\r\n    return useCallback((index) => {\r\n        switch (enc.binding) {\r\n            case DataBinding.Fixed:\r\n                return fixedColor;\r\n            case DataBinding.Palette:\r\n                return paletteColor;\r\n            case DataBinding.Scaled:\r\n                return sampledColors[index || 0];\r\n        }\r\n    }, [enc, fixedColor, paletteColor, sampledColors]);\r\n}\r\nexport function useSampledColors(encoding, count = 10) {\r\n    const scale = useThematicColorScale(encoding);\r\n    return useMemo(() => {\r\n        const allColors = scale.toArray();\r\n        // HACK: there is a bug in the thematic toArray for continuous scales\r\n        // it does not cover the whole range correctly\r\n        // this checks for a length that matches the hard-coded continuous output\r\n        // for thematic, and re-scales to ensure it captures the endpoints\r\n        if (allColors.length === 100) {\r\n            const [min, max] = encoding.domain || [0, 1];\r\n            const steps = (max - min) / count;\r\n            const colors = new Array(count).fill(1).map((a, i) => {\r\n                const v = steps * i + min;\r\n                return scale(v).hex();\r\n            });\r\n            return colors;\r\n        }\r\n        return scale.toArray(count);\r\n    }, [scale, encoding, count]);\r\n}\r\nexport function useFixedColor(encoding) {\r\n    return useMemo(() => encoding.value, [encoding]);\r\n}\r\nexport function usePaletteColor(encoding) {\r\n    const theme = useThematic();\r\n    return useMemo(() => getNamedSchemeColor(theme.scheme, encoding.thematicSchemePath).hex(), [theme, encoding]);\r\n}\r\n"]}]}