{"remainingRequest":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js??ruleSet[1].rules[0].use[1]!C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js??ruleSet[1].rules[0].use[2]!C:\\ws\\graph-drill\\src\\api\\dsv.ts","dependencies":[{"path":"C:\\ws\\graph-drill\\src\\api\\dsv.ts","mtime":1631029334658},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\cache-loader-virtual-2fd14a2267\\0\\cache\\cache-loader-npm-4.1.0-82c3da90d8-0339778bdd.zip\\node_modules\\cache-loader\\dist\\cjs.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyohDQogKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4gU2VlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcHJvamVjdC4NCiAqLwppbXBvcnQgeyBleHRlbnNpb24gfSBmcm9tICcuL3V0aWwnOwppbXBvcnQgeyBmcm9tQ1NWIH0gZnJvbSAnYXJxdWVybyc7Cgpjb25zdCBpZGVudGl0eSA9IGQgPT4gZDsKCmNvbnN0IGZucyA9IHsKICBpZDogaWRlbnRpdHksCiAgSUQ6IGlkZW50aXR5LAogIG5vZGVJZDogaWRlbnRpdHksCiAgY2lkOiBpZGVudGl0eSwKICBjbHVzdGVySWQ6IGlkZW50aXR5LAogIGNvbW11bml0eTogaWRlbnRpdHksCiAgY29tbXVuaXR5SWQ6IGlkZW50aXR5LAogIHBpZDogaWRlbnRpdHksCiAgcGFyZW50Q2x1c3RlcjogaWRlbnRpdHksCiAgcGFyZW50OiBpZGVudGl0eSwKICBwYXJlbnRJZDogaWRlbnRpdHksCiAgc291cmNlOiBpZGVudGl0eSwKICB0YXJnZXQ6IGlkZW50aXR5Cn07CmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaERTVlRhYmxlKHVybCkgewogIGNvbnN0IGNvbnRlbnQgPSBhd2FpdCBmZXRjaCh1cmwpLnRoZW4ocmVzID0+IHJlcy50ZXh0KCkpOwogIHJldHVybiBwYXJzZURTVlRhYmxlKHVybCwgY29udGVudCk7Cn0KZXhwb3J0IGZ1bmN0aW9uIHBhcnNlRFNWVGFibGUoZmlsZW5hbWUsIGNvbnRlbnQpIHsKICBjb25zdCBleHQgPSBleHRlbnNpb24oZmlsZW5hbWUpOwogIGNvbnN0IHRhYmxlID0gZnJvbUNTVihjb250ZW50LCB7CiAgICBoZWFkZXI6IHRydWUsCiAgICAvLyBoYW5kbGUgYSBidW5jaCBvZiBzdGFuZGFyZCBpZCBmaWVsZHMgYXMgc3RyaW5ncwogICAgcGFyc2U6IGZucywKICAgIGRlbGltaXRlcjogZXh0ID09PSAnY3N2JyA/ICcsJyA6ICdcdCcKICB9KTsKICByZXR1cm4gdGFibGU7Cn0="},{"version":3,"sources":["C:/ws/graph-drill/src/api/dsv.ts"],"names":["extension","fromCSV","identity","d","fns","id","ID","nodeId","cid","clusterId","community","communityId","pid","parentCluster","parent","parentId","source","target","fetchDSVTable","url","content","fetch","then","res","text","parseDSVTable","filename","ext","table","header","parse","delimiter"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,QAA1B;AACA,SAASC,OAAT,QAAwB,SAAxB;;AACA,MAAMC,QAAQ,GAAIC,CAAD,IAAOA,CAAxB;;AACA,MAAMC,GAAG,GAAG;AACRC,EAAAA,EAAE,EAAEH,QADI;AAERI,EAAAA,EAAE,EAAEJ,QAFI;AAGRK,EAAAA,MAAM,EAAEL,QAHA;AAIRM,EAAAA,GAAG,EAAEN,QAJG;AAKRO,EAAAA,SAAS,EAAEP,QALH;AAMRQ,EAAAA,SAAS,EAAER,QANH;AAORS,EAAAA,WAAW,EAAET,QAPL;AAQRU,EAAAA,GAAG,EAAEV,QARG;AASRW,EAAAA,aAAa,EAAEX,QATP;AAURY,EAAAA,MAAM,EAAEZ,QAVA;AAWRa,EAAAA,QAAQ,EAAEb,QAXF;AAYRc,EAAAA,MAAM,EAAEd,QAZA;AAaRe,EAAAA,MAAM,EAAEf;AAbA,CAAZ;AAeA,OAAO,eAAegB,aAAf,CAA6BC,GAA7B,EAAkC;AACrC,QAAMC,OAAO,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAL,CAAWG,IAAX,CAAgBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvB,CAAtB;AACA,SAAOC,aAAa,CAACN,GAAD,EAAMC,OAAN,CAApB;AACH;AACD,OAAO,SAASK,aAAT,CAAuBC,QAAvB,EAAiCN,OAAjC,EAA0C;AAC7C,QAAMO,GAAG,GAAG3B,SAAS,CAAC0B,QAAD,CAArB;AACA,QAAME,KAAK,GAAG3B,OAAO,CAACmB,OAAD,EAAU;AAC3BS,IAAAA,MAAM,EAAE,IADmB;AAE3B;AACAC,IAAAA,KAAK,EAAE1B,GAHoB;AAI3B2B,IAAAA,SAAS,EAAEJ,GAAG,KAAK,KAAR,GAAgB,GAAhB,GAAsB;AAJN,GAAV,CAArB;AAMA,SAAOC,KAAP;AACH","sourcesContent":["/*!\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Licensed under the MIT license. See LICENSE file in the project.\r\n */\r\nimport { extension } from './util';\r\nimport { fromCSV } from 'arquero';\r\nconst identity = (d) => d;\r\nconst fns = {\r\n    id: identity,\r\n    ID: identity,\r\n    nodeId: identity,\r\n    cid: identity,\r\n    clusterId: identity,\r\n    community: identity,\r\n    communityId: identity,\r\n    pid: identity,\r\n    parentCluster: identity,\r\n    parent: identity,\r\n    parentId: identity,\r\n    source: identity,\r\n    target: identity,\r\n};\r\nexport async function fetchDSVTable(url) {\r\n    const content = await fetch(url).then(res => res.text());\r\n    return parseDSVTable(url, content);\r\n}\r\nexport function parseDSVTable(filename, content) {\r\n    const ext = extension(filename);\r\n    const table = fromCSV(content, {\r\n        header: true,\r\n        // handle a bunch of standard id fields as strings\r\n        parse: fns,\r\n        delimiter: ext === 'csv' ? ',' : '\\t',\r\n    });\r\n    return table;\r\n}\r\n"]}]}