{"remainingRequest":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js??ruleSet[1].rules[0].use[1]!C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js??ruleSet[1].rules[0].use[2]!C:\\ws\\graph-drill\\src\\hooks\\graph\\scales.ts","dependencies":[{"path":"C:\\ws\\graph-drill\\src\\hooks\\graph\\scales.ts","mtime":1631029334867},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\cache-loader-virtual-2fd14a2267\\0\\cache\\cache-loader-npm-4.1.0-82c3da90d8-0339778bdd.zip\\node_modules\\cache-loader\\dist\\cjs.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgeyBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IH0ga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9CgovKiENCiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0LiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLiBTZWUgTElDRU5TRSBmaWxlIGluIHRoZSBwcm9qZWN0Lg0KICovCgovKioNCiAqIFRoaXMgc2NhbGVzIGluIHRoaXMgbW9kdWxlIG1hcCB2aXN1YWwgZW5jb2RpbmdzIHRvIHJhdyB1bmRlcmx5aW5nIHNjYWxlcy4NCiAqIEkuZS4sIHRoZSBpbnB1dHMgdG8gdGhlc2Ugc2NhbGVzIGFyZSBiYXNlIHByaW1pdGl2ZXMuDQogKi8KaW1wb3J0IHsgRGF0YUJpbmRpbmcgfSBmcm9tICcuLi8uLi90eXBlcyc7CmltcG9ydCB7IENvbG9yLCBnZXROYW1lZFNjaGVtZUNvbG9yIH0gZnJvbSAnQHRoZW1hdGljL2NvbG9yJzsKaW1wb3J0IHsgU2NhbGVUeXBlIH0gZnJvbSAnQHRoZW1hdGljL2NvcmUnOwppbXBvcnQgeyB1c2VUaGVtYXRpYyB9IGZyb20gJ0B0aGVtYXRpYy9yZWFjdCc7CmltcG9ydCB7IHNjYWxlTGluZWFyLCBzY2FsZUxvZyB9IGZyb20gJ2QzLXNjYWxlJzsKaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7CmV4cG9ydCBmdW5jdGlvbiB1c2VOdW1lcmljRW5jb2RpbmdTY2FsZShlbmNvZGluZywgb3ZlcnJpZGVzKSB7CiAgY29uc3QgZW5jID0gdXNlTWVtbygoKSA9PiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGVuY29kaW5nKSwgb3ZlcnJpZGVzKSwgW2VuY29kaW5nLCBvdmVycmlkZXNdKTsKICBjb25zdCBmaXhlZCA9IHVzZUNhbGxiYWNrKCgpID0+IGVuYy52YWx1ZSB8fCAwLCBbZW5jXSk7CiAgY29uc3Qgc2NhbGUgPSB1c2VNZW1vKCgpID0+IHsKICAgIC8vIFRPRE86IGNoZWNrIHNhZmUgbG9nIGRvbWFpbnMgKG5vIHplcm8gY3Jvc3NpbmdzKSBhbmQgYWRqdXN0CiAgICBjb25zdCBmbiA9IGVuYy5zY2FsZVR5cGUgPT09IFNjYWxlVHlwZS5Mb2cgPyBzY2FsZUxvZyA6IHNjYWxlTGluZWFyOwogICAgY29uc3QgZG9tYWluID0gZW5jLmRvbWFpbiB8fCBbMCwgMV07CiAgICBjb25zdCByYW5nZSA9IGVuYy5yYW5nZSB8fCBbMCwgMV07CiAgICByZXR1cm4gZm4oKS5kb21haW4oZG9tYWluKS5yYW5nZShyYW5nZSkuY2xhbXAodHJ1ZSk7CiAgfSwgW2VuY10pOwogIGNvbnN0IHNjYWxlZCA9IHVzZUNhbGxiYWNrKHZhbHVlID0+IHNjYWxlKHZhbHVlIHx8IDFlLTYpLCBbc2NhbGVdKTsKCiAgaWYgKGVuYy5iaW5kaW5nID09PSBEYXRhQmluZGluZy5GaXhlZCkgewogICAgcmV0dXJuIGZpeGVkOwogIH0KCiAgcmV0dXJuIHNjYWxlZDsKfQpleHBvcnQgZnVuY3Rpb24gdXNlQ29sb3JFbmNvZGluZ1NjYWxlKGVuY29kaW5nKSB7CiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtYXRpYygpOwogIGNvbnN0IGZpeGVkID0gdXNlQ2FsbGJhY2soKCkgPT4gbmV3IENvbG9yKGVuY29kaW5nLnZhbHVlIHx8ICdub25lJyksIFtlbmNvZGluZ10pOwogIGNvbnN0IHBhbGV0dGUgPSB1c2VDYWxsYmFjaygoKSA9PiBnZXROYW1lZFNjaGVtZUNvbG9yKHRoZW1lLnNjaGVtZSwgZW5jb2RpbmcudGhlbWF0aWNTY2hlbWVQYXRoKSwgW3RoZW1lLCBlbmNvZGluZ10pOwogIGNvbnN0IHNjYWxlZCA9IHVzZUNhY2hlZFRoZW1hdGljQ29sb3JTY2FsZShlbmNvZGluZyk7CgogIHN3aXRjaCAoZW5jb2RpbmcuYmluZGluZykgewogICAgY2FzZSBEYXRhQmluZGluZy5GaXhlZDoKICAgICAgcmV0dXJuIGZpeGVkOwoKICAgIGNhc2UgRGF0YUJpbmRpbmcuUGFsZXR0ZToKICAgICAgcmV0dXJuIHBhbGV0dGU7CgogICAgZGVmYXVsdDoKICAgICAgcmV0dXJuIHNjYWxlZDsKICB9Cn0KY29uc3QgQ09MT1JfTk9ORSA9IG5ldyBDb2xvcignbm9uZScpOwoKZnVuY3Rpb24gdXNlQ2FjaGVkVGhlbWF0aWNDb2xvclNjYWxlKGVuY29kaW5nKSB7CiAgY29uc3QgY29sb3JTY2FsZSA9IHVzZVRoZW1hdGljQ29sb3JTY2FsZShlbmNvZGluZyk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZQoKICBjb25zdCBjb2xvckNhY2hlID0gdXNlTWVtbygoKSA9PiBuZXcgTWFwKCksIFtlbmNvZGluZ10pOwogIHJldHVybiB1c2VDYWxsYmFjayh2YWx1ZSA9PiB7CiAgICBpZiAoIXZhbHVlIHx8ICFlbmNvZGluZy5maWVsZCkgewogICAgICByZXR1cm4gQ09MT1JfTk9ORTsKICAgIH0KCiAgICBsZXQgY29sb3IgPSBjb2xvckNhY2hlLmdldCh2YWx1ZSk7CgogICAgaWYgKGNvbG9yID09IG51bGwpIHsKICAgICAgY29sb3IgPSBjb2xvclNjYWxlKHZhbHVlKTsKICAgICAgY29sb3JDYWNoZS5zZXQodmFsdWUsIGNvbG9yKTsKICAgIH0KCiAgICByZXR1cm4gY29sb3I7CiAgfSwgW2VuY29kaW5nLCBjb2xvclNjYWxlLCBjb2xvckNhY2hlXSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiB1c2VUaGVtYXRpY0NvbG9yU2NhbGUoZW5jb2RpbmcpIHsKICBjb25zdCB0aGVtZSA9IHVzZVRoZW1hdGljKCk7CiAgcmV0dXJuIHVzZU1lbW8oKCkgPT4gewogICAgY29uc3Qgc2NhbGVzID0gdGhlbWUuc2NhbGVzKCk7CiAgICBjb25zdCB7CiAgICAgIHNjYWxlVHlwZSwKICAgICAgZG9tYWluLAogICAgICB1bmlxdWVzID0gW10KICAgIH0gPSBlbmNvZGluZzsKCiAgICBzd2l0Y2ggKGVuY29kaW5nLnNjYWxlTmFtZSkgewogICAgICBjYXNlICdub21pbmFsTXV0ZWQnOgogICAgICAgIHJldHVybiBzY2FsZXMubm9taW5hbE11dGVkKHVuaXF1ZXMubGVuZ3RoKTsKCiAgICAgIGNhc2UgJ25vbWluYWxCb2xkJzoKICAgICAgICByZXR1cm4gc2NhbGVzLm5vbWluYWxCb2xkKHVuaXF1ZXMubGVuZ3RoKTsKCiAgICAgIGNhc2UgJ3NlcXVlbnRpYWwnOgogICAgICAgIHJldHVybiBzY2FsZXMuc2VxdWVudGlhbChkb21haW4sIHNjYWxlVHlwZSk7CgogICAgICBjYXNlICdzZXF1ZW50aWFsMic6CiAgICAgICAgcmV0dXJuIHNjYWxlcy5zZXF1ZW50aWFsMihkb21haW4sIHNjYWxlVHlwZSk7CgogICAgICBjYXNlICdkaXZlcmdpbmcnOgogICAgICAgIHJldHVybiBzY2FsZXMuZGl2ZXJnaW5nKGRvbWFpbiwgc2NhbGVUeXBlKTsKCiAgICAgIGNhc2UgJ2RpdmVyZ2luZzInOgogICAgICAgIHJldHVybiBzY2FsZXMuZGl2ZXJnaW5nMihkb21haW4sIHNjYWxlVHlwZSk7CgogICAgICBjYXNlICdncmV5cyc6CiAgICAgICAgcmV0dXJuIHNjYWxlcy5ncmV5cyhkb21haW4sIHNjYWxlVHlwZSk7CgogICAgICBkZWZhdWx0OgogICAgICAgIHJldHVybiBzY2FsZXMubm9taW5hbCh1bmlxdWVzLmxlbmd0aCk7CiAgICB9CiAgfSwgW3RoZW1lLCBlbmNvZGluZ10pOwp9"},{"version":3,"sources":["C:/ws/graph-drill/src/hooks/graph/scales.ts"],"names":["DataBinding","Color","getNamedSchemeColor","ScaleType","useThematic","scaleLinear","scaleLog","useCallback","useMemo","useNumericEncodingScale","encoding","overrides","enc","fixed","value","scale","fn","scaleType","Log","domain","range","clamp","scaled","binding","Fixed","useColorEncodingScale","theme","palette","scheme","thematicSchemePath","useCachedThematicColorScale","Palette","COLOR_NONE","colorScale","useThematicColorScale","colorCache","Map","field","color","get","set","scales","uniques","scaleName","nominalMuted","length","nominalBold","sequential","sequential2","diverging","diverging2","greys","nominal"],"mappings":"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","sourcesContent":["/*!\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Licensed under the MIT license. See LICENSE file in the project.\r\n */\r\n/**\r\n * This scales in this module map visual encodings to raw underlying scales.\r\n * I.e., the inputs to these scales are base primitives.\r\n */\r\nimport { DataBinding } from '../../types';\r\nimport { Color, getNamedSchemeColor } from '@thematic/color';\r\nimport { ScaleType, } from '@thematic/core';\r\nimport { useThematic } from '@thematic/react';\r\nimport { scaleLinear, scaleLog } from 'd3-scale';\r\nimport { useCallback, useMemo } from 'react';\r\nexport function useNumericEncodingScale(encoding, overrides) {\r\n    const enc = useMemo(() => ({\r\n        ...encoding,\r\n        ...overrides,\r\n    }), [encoding, overrides]);\r\n    const fixed = useCallback(() => enc.value || 0, [enc]);\r\n    const scale = useMemo(() => {\r\n        // TODO: check safe log domains (no zero crossings) and adjust\r\n        const fn = enc.scaleType === ScaleType.Log ? scaleLog : scaleLinear;\r\n        const domain = enc.domain || [0, 1];\r\n        const range = enc.range || [0, 1];\r\n        return fn().domain(domain).range(range).clamp(true);\r\n    }, [enc]);\r\n    const scaled = useCallback((value) => scale(value || 1e-6), [scale]);\r\n    if (enc.binding === DataBinding.Fixed) {\r\n        return fixed;\r\n    }\r\n    return scaled;\r\n}\r\nexport function useColorEncodingScale(encoding) {\r\n    const theme = useThematic();\r\n    const fixed = useCallback(() => new Color(encoding.value || 'none'), [encoding]);\r\n    const palette = useCallback(() => getNamedSchemeColor(theme.scheme, encoding.thematicSchemePath), [theme, encoding]);\r\n    const scaled = useCachedThematicColorScale(encoding);\r\n    switch (encoding.binding) {\r\n        case DataBinding.Fixed:\r\n            return fixed;\r\n        case DataBinding.Palette:\r\n            return palette;\r\n        default:\r\n            return scaled;\r\n    }\r\n}\r\nconst COLOR_NONE = new Color('none');\r\nfunction useCachedThematicColorScale(encoding) {\r\n    const colorScale = useThematicColorScale(encoding);\r\n    // eslint-disable-next-line\r\n    const colorCache = useMemo(() => new Map(), [encoding]);\r\n    return useCallback((value) => {\r\n        if (!value || !encoding.field) {\r\n            return COLOR_NONE;\r\n        }\r\n        let color = colorCache.get(value);\r\n        if (color == null) {\r\n            color = colorScale(value);\r\n            colorCache.set(value, color);\r\n        }\r\n        return color;\r\n    }, [encoding, colorScale, colorCache]);\r\n}\r\nexport function useThematicColorScale(encoding) {\r\n    const theme = useThematic();\r\n    return useMemo(() => {\r\n        const scales = theme.scales();\r\n        const { scaleType, domain, uniques = [] } = encoding;\r\n        switch (encoding.scaleName) {\r\n            case 'nominalMuted':\r\n                return scales.nominalMuted(uniques.length);\r\n            case 'nominalBold':\r\n                return scales.nominalBold(uniques.length);\r\n            case 'sequential':\r\n                return scales.sequential(domain, scaleType);\r\n            case 'sequential2':\r\n                return scales.sequential2(domain, scaleType);\r\n            case 'diverging':\r\n                return scales.diverging(domain, scaleType);\r\n            case 'diverging2':\r\n                return scales.diverging2(domain, scaleType);\r\n            case 'greys':\r\n                return scales.greys(domain, scaleType);\r\n            default:\r\n                return scales.nominal(uniques.length);\r\n        }\r\n    }, [theme, encoding]);\r\n}\r\n"]}]}