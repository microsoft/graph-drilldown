{"remainingRequest":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js??ruleSet[1].rules[0].use[1]!C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js??ruleSet[1].rules[0].use[2]!C:\\ws\\graph-drill\\src\\components\\App\\pages\\GraphViewerPage\\SidePanel\\PanelComponents\\SearchPanel.tsx","dependencies":[{"path":"C:\\ws\\graph-drill\\src\\components\\App\\pages\\GraphViewerPage\\SidePanel\\PanelComponents\\SearchPanel.tsx","mtime":1631029334744},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\cache-loader-virtual-2fd14a2267\\0\\cache\\cache-loader-npm-4.1.0-82c3da90d8-0339778bdd.zip\\node_modules\\cache-loader\\dist\\cjs.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyohDQogKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4gU2VlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcHJvamVjdC4NCiAqLwppbXBvcnQgeyBDb21tdW5pdHlDb2xsZWN0aW9uLCBsaXN0Q29sdW1uTmFtZXMsIE5vZGVDb2xsZWN0aW9uLCB1c2VUYWJsZUNvbHVtbnNCeVR5cGUgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi8uLi9hcnF1ZXJvJzsKaW1wb3J0IHsgdXNlQ29tbXVuaXRpZXNUYWJsZSwgdXNlU2V0U2VsZWN0ZWRDb21tdW5pdHksIHVzZVNldFNlbGVjdGVkTm9kZXMgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi8uLi9zdGF0ZSc7CmltcG9ydCB7IFNlYXJjaEl0ZW1zIH0gZnJvbSAnLi9TZWFyY2hJdGVtcyc7CmltcG9ydCB7IFNlYXJjaFBhbmVsSGVhZGVyIH0gZnJvbSAnLi9TZWFyY2hQYW5lbEhlYWRlcic7CmltcG9ydCB7IENvbGxhcHNpYmxlUGFuZWwgfSBmcm9tICdAZXNzZXgtanMtdG9vbGtpdC90aGVtZWQtY29tcG9uZW50cyc7CmltcG9ydCB7IG9wIH0gZnJvbSAnYXJxdWVybyc7CmltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjaywgdXNlU3RhdGUsIHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7CmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnOwpleHBvcnQgY29uc3QgU2VhcmNoUGFuZWwgPSAoKSA9PiB7CiAgY29uc3QgW3NlYXJjaFRleHQsIHNldFNlYXJjaFRleHRdID0gdXNlU3RhdGUoKTsKICBjb25zdCBbc2VhcmNoTm9kZVRhYmxlLCBzZXRTZWFyY2hOb2RlVGFibGVdID0gdXNlU3RhdGUoKTsKICBjb25zdCBbc2VhcmNoVGFibGUsIHNldFNlYXJjaFRhYmxlXSA9IHVzZVN0YXRlKCk7CiAgY29uc3QgW2lzRXhwYW5kZWQsIHNldElzRXhwYW5kZWRdID0gdXNlU3RhdGUoZmFsc2UpOwogIGNvbnN0IFtlcnJvck1zZywgc2V0RXJyb3JNc2ddID0gdXNlU3RhdGUoKTsKICBjb25zdCBbaXNJbkZvY3VzLCBzZXRJc0luRm9jdXNdID0gdXNlU3RhdGUoZmFsc2UpOwogIGNvbnN0IHNldFNlbGVjdGVkTm9kZSA9IHVzZVNldFNlbGVjdGVkTm9kZXMoKTsKICBjb25zdCBtb2RpZmllZFRhYmxlID0gdXNlVGFibGVDb2x1bW5zQnlUeXBlKCdzdHJpbmcnKTsKICBjb25zdCBjb2x1bW5zID0gbGlzdENvbHVtbk5hbWVzKG1vZGlmaWVkVGFibGUpOwogIGNvbnN0IGNvbW11bml0aWVzID0gdXNlQ29tbXVuaXRpZXNUYWJsZSgpOwogIGNvbnN0IG9uRm9jdXNDaGFuZ2UgPSB1c2VDYWxsYmFjayhzdGF0ZSA9PiBzZXRJc0luRm9jdXMoc3RhdGUpLCBbc2V0SXNJbkZvY3VzXSk7CiAgY29uc3Qgb25QYW5lbENsaWNrID0gdXNlQ2FsbGJhY2soc3RhdGUgPT4gewogICAgLy8gZG9udCBzZXQgZXhwYW5kIHN0YXRlIGlmIHVzaW5nIHNlYXJjaGJveAogICAgaWYgKCFpc0luRm9jdXMpIHsKICAgICAgc2V0SXNFeHBhbmRlZChzdGF0ZSk7CiAgICB9CiAgfSwgW3NldElzRXhwYW5kZWQsIGlzSW5Gb2N1c10pOwogIGNvbnN0IHNldFNlbGVjdGVkQ29tbXVuaXR5ID0gdXNlU2V0U2VsZWN0ZWRDb21tdW5pdHkoKTsKICBjb25zdCBnZXRDb2x1bW5CeVJvdyA9IHVzZUNhbGxiYWNrKChjb2wsIHJvdykgPT4gewogICAgY29uc3Qgc3RyaW5nVmFsdWUgPSBtb2RpZmllZFRhYmxlLmdldChjb2wsIHJvdyk7CiAgICBsZXQgaXNJblNlYXJjaCA9IGZhbHNlOwoKICAgIGlmIChzdHJpbmdWYWx1ZS5pbmRleE9mKHNlYXJjaFRleHQpID4gLTEpIHsKICAgICAgaXNJblNlYXJjaCA9IHRydWU7CiAgICB9CgogICAgcmV0dXJuIFtzdHJpbmdWYWx1ZSwgaXNJblNlYXJjaF07CiAgfSwgW21vZGlmaWVkVGFibGUsIHNlYXJjaFRleHRdKTsKICBjb25zdCBnZXRNYXRjaGluZ1ZhbHVlc0J5Um93ID0gdXNlQ2FsbGJhY2soY29sdW1ucyA9PiB7CiAgICBjb25zdCBtYXRjaGVzID0gW107CiAgICBtb2RpZmllZFRhYmxlLnNjYW4ocm93ID0+IHsKICAgICAgY29uc3QgbyA9IGNvbHVtbnMucmVkdWNlKChhY2MsIGNvbCkgPT4gewogICAgICAgIGNvbnN0IFt2YWx1ZSwgaXNJblNlYXJjaF0gPSBnZXRDb2x1bW5CeVJvdyhjb2wsIHJvdyk7CgogICAgICAgIGlmIChpc0luU2VhcmNoKSB7CiAgICAgICAgICBhY2MuaXNJblNlYXJjaCA9IHRydWU7CiAgICAgICAgICBhY2MubWF0Y2hDb2x1bW5zLnB1c2goY29sKTsKICAgICAgICB9CgogICAgICAgIGFjY1tjb2xdID0gdmFsdWU7CiAgICAgICAgYWNjLmluZGV4ID0gcm93OwogICAgICAgIHJldHVybiBhY2M7CiAgICAgIH0sIHsKICAgICAgICBpc0luU2VhcmNoOiBmYWxzZSwKICAgICAgICBtYXRjaENvbHVtbnM6IFtdCiAgICAgIH0pOwoKICAgICAgaWYgKG8uaXNJblNlYXJjaCkgewogICAgICAgIG1hdGNoZXMucHVzaChvKTsKICAgICAgfQogICAgfSk7IC8vIGN1cnJlbnRseSBvbmx5IGhhbmRsaW5nIG1hdGNoIG9uIG5vZGUuaWQgb3IgY29tbXVuaXR5LmlkCgogICAgY29uc3Qgc2VlbiA9IG5ldyBTZXQoW10pOwogICAgY29uc3QgW25vZGVpZHMsIG5vZGVDb21tSWRzLCBjb21tdW5pdHlJZHNdID0gbWF0Y2hlcy5yZWR1Y2UoKGFjYywgZCkgPT4gewogICAgICBpZiAoZC5tYXRjaENvbHVtbnMuaW5jbHVkZXMoJ25vZGUuaWQnKSkgewogICAgICAgIGNvbnN0IG5vZGVpZCA9IGRbJ25vZGUuaWQnXTsKCiAgICAgICAgaWYgKCFzZWVuLmhhcyhub2RlaWQpKSB7CiAgICAgICAgICBhY2NbMV0ucHVzaChkWydjb21tdW5pdHkuaWQnXSk7CiAgICAgICAgICBzZWVuLmFkZChub2RlaWQpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKGQubWF0Y2hDb2x1bW5zLmluY2x1ZGVzKCdjb21tdW5pdHkuaWQnKSkgewogICAgICAgIGFjY1syXS5wdXNoKGRbJ2NvbW11bml0eS5pZCddKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGFjYzsKICAgIH0sIFtzZWVuLCBbXSwgW11dKTsKICAgIGNvbnN0IG1hdGNoVGFibGUgPSBjb21tdW5pdGllcy5wYXJhbXMoewogICAgICBtYXRjaDogY29tbXVuaXR5SWRzCiAgICB9KS5maWx0ZXIoKGQsICQpID0+IG9wLmluY2x1ZGVzKCQubWF0Y2gsIGRbJ2NvbW11bml0eS5pZCddKSkudW5ncm91cCgpOwogICAgY29uc3Qgbm9kZU1hdGNoVGFibGUgPSBtb2RpZmllZFRhYmxlLnBhcmFtcyh7CiAgICAgIG1hdGNoOiBBcnJheS5mcm9tKG5vZGVpZHMpLAogICAgICBjb21tSWRzOiBub2RlQ29tbUlkcwogICAgfSkuZmlsdGVyKChkLCAkKSA9PiBvcC5pbmNsdWRlcygkLm1hdGNoLCBkWydub2RlLmlkJ10pICYmIG9wLmluY2x1ZGVzKCQuY29tbUlkcywgZFsnY29tbXVuaXR5LmlkJ10pKS51bmdyb3VwKCk7CiAgICBjb25zdCBjY1RhYmxlID0gbmV3IENvbW11bml0eUNvbGxlY3Rpb24obWF0Y2hUYWJsZSk7CiAgICBjb25zdCBub2RlVGFibGUgPSBuZXcgTm9kZUNvbGxlY3Rpb24obm9kZU1hdGNoVGFibGUpOwogICAgcmV0dXJuIFtjY1RhYmxlLCBub2RlVGFibGVdOwogIH0sIFttb2RpZmllZFRhYmxlLCBnZXRDb2x1bW5CeVJvdywgY29tbXVuaXRpZXNdKTsKICBjb25zdCBvbkNsZWFyID0gdXNlQ2FsbGJhY2soKCkgPT4gewogICAgLy8gQ2xlYXIgUmVzdWx0CiAgICBzZXRTZWFyY2hUZXh0KHVuZGVmaW5lZCk7CiAgICBzZXRTZWFyY2hOb2RlVGFibGUodW5kZWZpbmVkKTsKICAgIHNldFNlYXJjaFRhYmxlKHVuZGVmaW5lZCk7CiAgICBzZXRTZWxlY3RlZE5vZGUodW5kZWZpbmVkKTsKICAgIHNldEVycm9yTXNnKHVuZGVmaW5lZCk7CiAgICBzZXRTZWxlY3RlZENvbW11bml0eSgnLTEnKTsKICAgIHNldElzRXhwYW5kZWQoZmFsc2UpOwogIH0sIFtzZXRTZWFyY2hUZXh0LCBzZXRTZWFyY2hOb2RlVGFibGUsIHNldEVycm9yTXNnLCBzZXRTZWFyY2hUYWJsZSwgc2V0U2VsZWN0ZWROb2RlLCBzZXRTZWxlY3RlZENvbW11bml0eSwgc2V0SXNFeHBhbmRlZF0pOwogIGNvbnN0IG9uU2VhcmNoID0gdXNlQ2FsbGJhY2soKCkgPT4gewogICAgaWYgKCFzZWFyY2hUZXh0KSB7CiAgICAgIG9uQ2xlYXIoKTsKICAgIH0gZWxzZSB7CiAgICAgIHNldEVycm9yTXNnKHVuZGVmaW5lZCk7CgogICAgICBpZiAoY29sdW1ucy5sZW5ndGggPiAwKSB7CiAgICAgICAgLy8gZmlsdGVyIG91dCBjb21tdW5pdHkucGlkLCBuZWVkIHRvIGZpZ3VyZSBvdXQgcHJvcGVybHkgZGlzcGxheSBpZiB3ZSBjaG9vc2UgdG8gaW5jbHVkZSBpdAogICAgICAgIGNvbnN0IGNvbHMgPSBjb2x1bW5zLmZpbHRlcihkID0+IGQgIT09ICdjb21tdW5pdHkucGlkJyk7CiAgICAgICAgY29uc3QgW21hdGNoVGFibGUsIG1hdGNoaW5nVmFsdWVzXSA9IGdldE1hdGNoaW5nVmFsdWVzQnlSb3coY29scyk7CgogICAgICAgIGlmIChtYXRjaGluZ1ZhbHVlcy5zaXplIDwgMSkgewogICAgICAgICAgc2V0RXJyb3JNc2coYE5vIHJlc3VsdHMgZm91bmQgZm9yICR7c2VhcmNoVGV4dH1gKTsKICAgICAgICB9CgogICAgICAgIHNldElzRXhwYW5kZWQodHJ1ZSk7CiAgICAgICAgc2V0U2VhcmNoVGFibGUobWF0Y2hUYWJsZSk7CiAgICAgICAgc2V0U2VhcmNoTm9kZVRhYmxlKG1hdGNoaW5nVmFsdWVzKTsKICAgICAgfQogICAgfQogIH0sIFtzZWFyY2hUZXh0LCBjb2x1bW5zLCBzZXRTZWFyY2hOb2RlVGFibGUsIG9uQ2xlYXIsIGdldE1hdGNoaW5nVmFsdWVzQnlSb3csIHNldFNlYXJjaFRhYmxlLCBzZXRFcnJvck1zZywgc2V0SXNFeHBhbmRlZF0pOwogIGNvbnN0IG9uQ2hhbmdlID0gdXNlQ2FsbGJhY2soKGV2ZW50LCBuZXdWYWx1ZSkgPT4gewogICAgc2V0U2VhcmNoVGV4dChuZXdWYWx1ZSk7CiAgfSwgW3NldFNlYXJjaFRleHRdKTsKICBjb25zdCBkaXNhYmxlZCA9IHVzZU1lbW8oKCkgPT4gbW9kaWZpZWRUYWJsZS5udW1Sb3dzKCkgPCAxLCBbbW9kaWZpZWRUYWJsZV0pOwogIGNvbnN0IG9uUmVuZGVyU2VhcmNoSGVhZGVyID0gdXNlQ2FsbGJhY2soKCkgPT4gUmVhY3QuY3JlYXRlRWxlbWVudChTZWFyY2hQYW5lbEhlYWRlciwgewogICAgZGlzYWJsZWQ6IGRpc2FibGVkLAogICAgb25DaGFuZ2U6IG9uQ2hhbmdlLAogICAgb25TZWFyY2g6IG9uU2VhcmNoLAogICAgb25DbGVhcjogb25DbGVhciwKICAgIG9uRm9jdXNDaGFuZ2U6IG9uRm9jdXNDaGFuZ2UKICB9KSwgW2Rpc2FibGVkLCBvbkNsZWFyLCBvbkNoYW5nZSwgb25TZWFyY2gsIG9uRm9jdXNDaGFuZ2VdKTsKICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb2xsYXBzaWJsZVBhbmVsLCB7CiAgICBvblJlbmRlckhlYWRlcjogb25SZW5kZXJTZWFyY2hIZWFkZXIsCiAgICBkZWZhdWx0RXhwYW5kZWQ6IGZhbHNlLAogICAgb25IZWFkZXJDbGljazogb25QYW5lbENsaWNrLAogICAgZXhwYW5kZWRTdGF0ZTogaXNFeHBhbmRlZAogIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGVudCwgbnVsbCwgc2VhcmNoVGFibGUgJiYgUmVhY3QuY3JlYXRlRWxlbWVudChTZWFyY2hJdGVtcywgewogICAgc2VhcmNoTm9kZVRhYmxlOiBzZWFyY2hOb2RlVGFibGUsCiAgICBzZWFyY2hUYWJsZTogc2VhcmNoVGFibGUsCiAgICBlcnJvck1zZzogZXJyb3JNc2cKICB9KSkpOwp9Owpjb25zdCBDb250ZW50ID0gc3R5bGVkLmRpdmBgOw=="},{"version":3,"sources":["C:/ws/graph-drill/src/components/App/pages/GraphViewerPage/SidePanel/PanelComponents/SearchPanel.tsx"],"names":["CommunityCollection","listColumnNames","NodeCollection","useTableColumnsByType","useCommunitiesTable","useSetSelectedCommunity","useSetSelectedNodes","SearchItems","SearchPanelHeader","CollapsiblePanel","op","React","useCallback","useState","useMemo","styled","SearchPanel","searchText","setSearchText","searchNodeTable","setSearchNodeTable","searchTable","setSearchTable","isExpanded","setIsExpanded","errorMsg","setErrorMsg","isInFocus","setIsInFocus","setSelectedNode","modifiedTable","columns","communities","onFocusChange","state","onPanelClick","setSelectedCommunity","getColumnByRow","col","row","stringValue","get","isInSearch","indexOf","getMatchingValuesByRow","matches","scan","o","reduce","acc","value","matchColumns","push","index","seen","Set","nodeids","nodeCommIds","communityIds","d","includes","nodeid","has","add","matchTable","params","match","filter","$","ungroup","nodeMatchTable","Array","from","commIds","ccTable","nodeTable","onClear","undefined","onSearch","length","cols","matchingValues","size","onChange","event","newValue","disabled","numRows","onRenderSearchHeader","createElement","onRenderHeader","defaultExpanded","onHeaderClick","expandedState","Content","div"],"mappings":"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","sourcesContent":["/*!\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Licensed under the MIT license. See LICENSE file in the project.\r\n */\r\nimport { CommunityCollection, listColumnNames, NodeCollection, useTableColumnsByType, } from '../../../../../../arquero';\r\nimport { useCommunitiesTable, useSetSelectedCommunity, useSetSelectedNodes, } from '../../../../../../state';\r\nimport { SearchItems } from './SearchItems';\r\nimport { SearchPanelHeader } from './SearchPanelHeader';\r\nimport { CollapsiblePanel } from '@essex-js-toolkit/themed-components';\r\nimport { op } from 'arquero';\r\nimport React, { useCallback, useState, useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nexport const SearchPanel = () => {\r\n    const [searchText, setSearchText] = useState();\r\n    const [searchNodeTable, setSearchNodeTable] = useState();\r\n    const [searchTable, setSearchTable] = useState();\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState();\r\n    const [isInFocus, setIsInFocus] = useState(false);\r\n    const setSelectedNode = useSetSelectedNodes();\r\n    const modifiedTable = useTableColumnsByType('string');\r\n    const columns = listColumnNames(modifiedTable);\r\n    const communities = useCommunitiesTable();\r\n    const onFocusChange = useCallback((state) => setIsInFocus(state), [setIsInFocus]);\r\n    const onPanelClick = useCallback((state) => {\r\n        // dont set expand state if using searchbox\r\n        if (!isInFocus) {\r\n            setIsExpanded(state);\r\n        }\r\n    }, [setIsExpanded, isInFocus]);\r\n    const setSelectedCommunity = useSetSelectedCommunity();\r\n    const getColumnByRow = useCallback((col, row) => {\r\n        const stringValue = modifiedTable.get(col, row);\r\n        let isInSearch = false;\r\n        if (stringValue.indexOf(searchText) > -1) {\r\n            isInSearch = true;\r\n        }\r\n        return [stringValue, isInSearch];\r\n    }, [modifiedTable, searchText]);\r\n    const getMatchingValuesByRow = useCallback((columns) => {\r\n        const matches = [];\r\n        modifiedTable.scan(row => {\r\n            const o = columns.reduce((acc, col) => {\r\n                const [value, isInSearch] = getColumnByRow(col, row);\r\n                if (isInSearch) {\r\n                    acc.isInSearch = true;\r\n                    acc.matchColumns.push(col);\r\n                }\r\n                acc[col] = value;\r\n                acc.index = row;\r\n                return acc;\r\n            }, { isInSearch: false, matchColumns: [] });\r\n            if (o.isInSearch) {\r\n                matches.push(o);\r\n            }\r\n        });\r\n        // currently only handling match on node.id or community.id\r\n        const seen = new Set([]);\r\n        const [nodeids, nodeCommIds, communityIds] = matches.reduce((acc, d) => {\r\n            if (d.matchColumns.includes('node.id')) {\r\n                const nodeid = d['node.id'];\r\n                if (!seen.has(nodeid)) {\r\n                    acc[1].push(d['community.id']);\r\n                    seen.add(nodeid);\r\n                }\r\n            }\r\n            if (d.matchColumns.includes('community.id')) {\r\n                acc[2].push(d['community.id']);\r\n            }\r\n            return acc;\r\n        }, [seen, [], []]);\r\n        const matchTable = communities\r\n            .params({ match: communityIds })\r\n            .filter((d, $) => op.includes($.match, d['community.id']))\r\n            .ungroup();\r\n        const nodeMatchTable = modifiedTable\r\n            .params({ match: Array.from(nodeids), commIds: nodeCommIds })\r\n            .filter((d, $) => op.includes($.match, d['node.id']) &&\r\n            op.includes($.commIds, d['community.id']))\r\n            .ungroup();\r\n        const ccTable = new CommunityCollection(matchTable);\r\n        const nodeTable = new NodeCollection(nodeMatchTable);\r\n        return [ccTable, nodeTable];\r\n    }, [modifiedTable, getColumnByRow, communities]);\r\n    const onClear = useCallback(() => {\r\n        // Clear Result\r\n        setSearchText(undefined);\r\n        setSearchNodeTable(undefined);\r\n        setSearchTable(undefined);\r\n        setSelectedNode(undefined);\r\n        setErrorMsg(undefined);\r\n        setSelectedCommunity('-1');\r\n        setIsExpanded(false);\r\n    }, [\r\n        setSearchText,\r\n        setSearchNodeTable,\r\n        setErrorMsg,\r\n        setSearchTable,\r\n        setSelectedNode,\r\n        setSelectedCommunity,\r\n        setIsExpanded,\r\n    ]);\r\n    const onSearch = useCallback(() => {\r\n        if (!searchText) {\r\n            onClear();\r\n        }\r\n        else {\r\n            setErrorMsg(undefined);\r\n            if (columns.length > 0) {\r\n                // filter out community.pid, need to figure out properly display if we choose to include it\r\n                const cols = columns.filter(d => d !== 'community.pid');\r\n                const [matchTable, matchingValues] = getMatchingValuesByRow(cols);\r\n                if (matchingValues.size < 1) {\r\n                    setErrorMsg(`No results found for ${searchText}`);\r\n                }\r\n                setIsExpanded(true);\r\n                setSearchTable(matchTable);\r\n                setSearchNodeTable(matchingValues);\r\n            }\r\n        }\r\n    }, [\r\n        searchText,\r\n        columns,\r\n        setSearchNodeTable,\r\n        onClear,\r\n        getMatchingValuesByRow,\r\n        setSearchTable,\r\n        setErrorMsg,\r\n        setIsExpanded,\r\n    ]);\r\n    const onChange = useCallback((event, newValue) => {\r\n        setSearchText(newValue);\r\n    }, [setSearchText]);\r\n    const disabled = useMemo(() => modifiedTable.numRows() < 1, [modifiedTable]);\r\n    const onRenderSearchHeader = useCallback(() => (React.createElement(SearchPanelHeader, { disabled: disabled, onChange: onChange, onSearch: onSearch, onClear: onClear, onFocusChange: onFocusChange })), [disabled, onClear, onChange, onSearch, onFocusChange]);\r\n    return (React.createElement(CollapsiblePanel, { onRenderHeader: onRenderSearchHeader, defaultExpanded: false, onHeaderClick: onPanelClick, expandedState: isExpanded },\r\n        React.createElement(Content, null, searchTable && (React.createElement(SearchItems, { searchNodeTable: searchNodeTable, searchTable: searchTable, errorMsg: errorMsg })))));\r\n};\r\nconst Content = styled.div ``;\r\n"]}]}