{"remainingRequest":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js??ruleSet[1].rules[0].use[1]!C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js??ruleSet[1].rules[0].use[2]!C:\\ws\\graph-drill\\src\\hooks\\graph\\graspologic.ts","dependencies":[{"path":"C:\\ws\\graph-drill\\src\\hooks\\graph\\graspologic.ts","mtime":1631029334862},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\cache-loader-virtual-2fd14a2267\\0\\cache\\cache-loader-npm-4.1.0-82c3da90d8-0339778bdd.zip\\node_modules\\cache-loader\\dist\\cjs.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyohDQogKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4gU2VlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcHJvamVjdC4NCiAqLwppbXBvcnQgeyBEYXRhQmluZGluZyB9IGZyb20gJy4uLy4uL3R5cGVzJzsKaW1wb3J0IHsgdXNlQ29sb3JFbmNvZGluZ1NjYWxlLCB1c2VOdW1lcmljRW5jb2RpbmdTY2FsZSB9IGZyb20gJy4vc2NhbGVzJzsKaW1wb3J0IHsgdG9HcmFwaENvbG9yIH0gZnJvbSAnQGdyYXNwb2xvZ2ljL2dyYXBoJzsKaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7CmltcG9ydCB7IHVzZUNvbG9yQ2FjaGUgfSBmcm9tICd+L3N0YXRlL2NhY2hlcyc7IC8vIFRPRE86IHVzZSB0aGUgbm9kZS9lZGdlIHNpemVyIGluc3RlYWQgb2Ygd2VpZ2h0ZXIsCi8vIHNvIGl0IGNhbiBiZSBib3VuZCBkaXJlY3RseSB0byB0aGUgZW5jb2RpbmcgcmFuZ2UKLy8gYXMgaXQgaXMgd2UgbmVlZCB0byBzZXQgbWluL21heCByYWRpdXMvc2l6ZSBvbiB0aGUgR3JhcGhWaWV3Cgpjb25zdCBPVkVSUklERVMgPSB7CiAgcmFuZ2U6IFswLCAxXQp9OwovKioNCiAqIFRoaXMgcHJvdmlkZXMgYSBjYWxsYmFjayBjb25mb3JtaW5nIHRvIHRoZSBXZWlnaHRlciBpbnRlcmZhY2VzDQogKiBmb3Igbm9kZS9lZGdlIHNpemVzLg0KICogQHBhcmFtIGVuY29kaW5nDQogKiBAcGFyYW0gbWFwDQogKi8KCmV4cG9ydCBmdW5jdGlvbiB1c2VXZWlnaHRlcihlbmNvZGluZywgbWFwKSB7CiAgY29uc3Qgc2NhbGUgPSB1c2VOdW1lcmljRW5jb2RpbmdTY2FsZShlbmNvZGluZywgT1ZFUlJJREVTKTsKICByZXR1cm4gdXNlQ2FsbGJhY2soaWQgPT4gewogICAgaWYgKCFlbmNvZGluZy5maWVsZCkgewogICAgICByZXR1cm4gc2NhbGUoKTsKICAgIH0KCiAgICBjb25zdCBub2RlID0gbWFwLmdldChpZCk7CgogICAgaWYgKG5vZGUpIHsKICAgICAgY29uc3QgdmFsdWUgPSBub2RlLmdldChlbmNvZGluZy5maWVsZCk7CiAgICAgIHJldHVybiBzY2FsZSh2YWx1ZSk7CiAgICB9CgogICAgcmV0dXJuIDA7CiAgfSwgW3NjYWxlLCBlbmNvZGluZywgbWFwXSk7Cn0KLyoqDQogKiBUaGlzIHByb3ZpZGVzIGEgY2FsbGJhY2sgY29uZm9ybWluZyB0byB0aGUgQ29sb3JpemVyIGludGVyZmFjZXMNCiAqIGZvciBub2RlL2VkZ2UgY29sb3JzLiBOb3RlIHRoYXQgaXQgdW5pZmllcyBjb2xvciArIG9wYWNpdHkgc28NCiAqIHRoZXkgY2FuIGJlIGNvbmZpZ3VyZWQgc2VwYXJhdGVseSBhbmQgZWFjaCBzY2FsZWQgdG8gdGFibGUgcHJvcGVydGllcy4NCiAqIChUaGUgZ3Jhc3BvbG9naWMgaW50ZXJmYWNlIGRvZXMgbm90IGhhdmUgYSBzZXBhcmF0ZSBzY2FsZWQgb3BhY2l0eSBwcm9wKQ0KICogQHBhcmFtIGNvbG9yRW5jb2RpbmcNCiAqIEBwYXJhbSBvcGFjaXR5RW5jb2RpbmcNCiAqIEBwYXJhbSBtYXANCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIHVzZUNvbG9yaXplcihjb2xvckVuY29kaW5nLCBvcGFjaXR5RW5jb2RpbmcsIG1hcCkgewogIGNvbnN0IGNvbG9yU2NhbGUgPSB1c2VDb2xvckVuY29kaW5nU2NhbGUoY29sb3JFbmNvZGluZyk7CiAgY29uc3Qgb3BhY2l0eVNjYWxlID0gdXNlTnVtZXJpY0VuY29kaW5nU2NhbGUob3BhY2l0eUVuY29kaW5nKTsKICBjb25zdCBjb2xvckNhY2hlID0gdXNlQ29sb3JDYWNoZSgpOwogIHJldHVybiB1c2VDYWxsYmFjayhpZCA9PiB7CiAgICBjb25zdCBpdGVtID0gbWFwLmdldChpZCk7CiAgICBsZXQgY29sb3I7CiAgICBsZXQgb3BhY2l0eTsKCiAgICBpZiAoaXRlbSAmJiBjb2xvckVuY29kaW5nLmZpZWxkKSB7CiAgICAgIGNvbnN0IGNvbG9yRGF0YSA9IGl0ZW0uZ2V0KGNvbG9yRW5jb2RpbmcuZmllbGQpOwogICAgICBjb2xvciA9IGNvbG9yU2NhbGUoY29sb3JEYXRhKTsKICAgIH0gZWxzZSB7CiAgICAgIGNvbG9yID0gY29sb3JTY2FsZSgpOwogICAgfQoKICAgIGlmIChpdGVtICYmIG9wYWNpdHlFbmNvZGluZy5maWVsZCkgewogICAgICBjb25zdCBvcGFjaXR5RGF0YSA9IGl0ZW0uZ2V0KG9wYWNpdHlFbmNvZGluZy5maWVsZCk7CiAgICAgIG9wYWNpdHkgPSBvcGFjaXR5U2NhbGUob3BhY2l0eURhdGEpOwogICAgfSBlbHNlIHsKICAgICAgb3BhY2l0eSA9IG9wYWNpdHlTY2FsZSgpOwogICAgfQoKICAgIGNvbnN0IGtleSA9IGAke2NvbG9yLnJhd30tJHtvcGFjaXR5fWA7CiAgICBsZXQgY2FjaGVkID0gY29sb3JDYWNoZS5nZXQoa2V5KTsKCiAgICBpZiAoIWNhY2hlZCkgewogICAgICBjYWNoZWQgPSB0b0dyYXBoQ29sb3IoY29sb3IucmdiYXYob3BhY2l0eSkpOwogICAgICBjb2xvckNhY2hlLnNldChrZXksIGNhY2hlZCk7CiAgICB9CgogICAgcmV0dXJuIGNhY2hlZDsKICB9LCBbY29sb3JTY2FsZSwgb3BhY2l0eVNjYWxlLCBjb2xvckVuY29kaW5nLCBvcGFjaXR5RW5jb2RpbmcsIG1hcCwgY29sb3JDYWNoZV0pOwp9Ci8qKg0KICogU29tZSBncmFzcG9sb2dpYyBhcGlzIGhhdmUgYSB3ZWlnaHRlciB0aGF0IHNjYWxlcyAwLTEsDQogKiBhY2NvbXBhbmllZCBieSBtaW4vbWF4IHByb3BzIG9uIHRoZSBjb21wb25lbnQuDQogKiBUaGlzIHByb3ZpZGVzIGEgdG9nZ2xlZCByYW5nZSB0byBlbnN1cmUgdmFsaWQgbWluL21heA0KICogdmFsdWVzIHN3aXRjaCBmb3IgZml4ZWQgdmVyc3VzIHNjYWxlZCByYW5nZXMuDQogKiBAcGFyYW0gZW5jb2RpbmcNCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIHVzZVJhbmdlKGVuY29kaW5nKSB7CiAgcmV0dXJuIHVzZU1lbW8oKCkgPT4gewogICAgaWYgKGVuY29kaW5nLmJpbmRpbmcgPT09IERhdGFCaW5kaW5nLkZpeGVkKSB7CiAgICAgIHJldHVybiBlbmNvZGluZy52YWx1ZSA/IFtlbmNvZGluZy52YWx1ZSwgZW5jb2RpbmcudmFsdWVdIDogWzAsIDBdOwogICAgfQoKICAgIHJldHVybiBlbmNvZGluZy5yYW5nZSB8fCBbMCwgMV07CiAgfSwgW2VuY29kaW5nXSk7Cn0="},{"version":3,"sources":["C:/ws/graph-drill/src/hooks/graph/graspologic.ts"],"names":["DataBinding","useColorEncodingScale","useNumericEncodingScale","toGraphColor","useCallback","useMemo","useColorCache","OVERRIDES","range","useWeighter","encoding","map","scale","id","field","node","get","value","useColorizer","colorEncoding","opacityEncoding","colorScale","opacityScale","colorCache","item","color","opacity","colorData","opacityData","key","raw","cached","rgbav","set","useRange","binding","Fixed"],"mappings":"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","sourcesContent":["/*!\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Licensed under the MIT license. See LICENSE file in the project.\r\n */\r\nimport { DataBinding, } from '../../types';\r\nimport { useColorEncodingScale, useNumericEncodingScale } from './scales';\r\nimport { toGraphColor, } from '@graspologic/graph';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useColorCache } from '~/state/caches';\r\n// TODO: use the node/edge sizer instead of weighter,\r\n// so it can be bound directly to the encoding range\r\n// as it is we need to set min/max radius/size on the GraphView\r\nconst OVERRIDES = {\r\n    range: [0, 1],\r\n};\r\n/**\r\n * This provides a callback conforming to the Weighter interfaces\r\n * for node/edge sizes.\r\n * @param encoding\r\n * @param map\r\n */\r\nexport function useWeighter(encoding, map) {\r\n    const scale = useNumericEncodingScale(encoding, OVERRIDES);\r\n    return useCallback((id) => {\r\n        if (!encoding.field) {\r\n            return scale();\r\n        }\r\n        const node = map.get(id);\r\n        if (node) {\r\n            const value = node.get(encoding.field);\r\n            return scale(value);\r\n        }\r\n        return 0;\r\n    }, [scale, encoding, map]);\r\n}\r\n/**\r\n * This provides a callback conforming to the Colorizer interfaces\r\n * for node/edge colors. Note that it unifies color + opacity so\r\n * they can be configured separately and each scaled to table properties.\r\n * (The graspologic interface does not have a separate scaled opacity prop)\r\n * @param colorEncoding\r\n * @param opacityEncoding\r\n * @param map\r\n */\r\nexport function useColorizer(colorEncoding, opacityEncoding, map) {\r\n    const colorScale = useColorEncodingScale(colorEncoding);\r\n    const opacityScale = useNumericEncodingScale(opacityEncoding);\r\n    const colorCache = useColorCache();\r\n    return useCallback((id) => {\r\n        const item = map.get(id);\r\n        let color;\r\n        let opacity;\r\n        if (item && colorEncoding.field) {\r\n            const colorData = item.get(colorEncoding.field);\r\n            color = colorScale(colorData);\r\n        }\r\n        else {\r\n            color = colorScale();\r\n        }\r\n        if (item && opacityEncoding.field) {\r\n            const opacityData = item.get(opacityEncoding.field);\r\n            opacity = opacityScale(opacityData);\r\n        }\r\n        else {\r\n            opacity = opacityScale();\r\n        }\r\n        const key = `${color.raw}-${opacity}`;\r\n        let cached = colorCache.get(key);\r\n        if (!cached) {\r\n            cached = toGraphColor(color.rgbav(opacity));\r\n            colorCache.set(key, cached);\r\n        }\r\n        return cached;\r\n    }, [colorScale, opacityScale, colorEncoding, opacityEncoding, map, colorCache]);\r\n}\r\n/**\r\n * Some graspologic apis have a weighter that scales 0-1,\r\n * accompanied by min/max props on the component.\r\n * This provides a toggled range to ensure valid min/max\r\n * values switch for fixed versus scaled ranges.\r\n * @param encoding\r\n */\r\nexport function useRange(encoding) {\r\n    return useMemo(() => {\r\n        if (encoding.binding === DataBinding.Fixed) {\r\n            return encoding.value ? [encoding.value, encoding.value] : [0, 0];\r\n        }\r\n        return encoding.range || [0, 1];\r\n    }, [encoding]);\r\n}\r\n"]}]}