{"remainingRequest":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js??ruleSet[1].rules[0].use[1]!C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js??ruleSet[1].rules[0].use[2]!C:\\ws\\graph-drill\\src\\state\\url.ts","dependencies":[{"path":"C:\\ws\\graph-drill\\src\\state\\url.ts","mtime":1631029334894},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\cache-loader-virtual-2fd14a2267\\0\\cache\\cache-loader-npm-4.1.0-82c3da90d8-0339778bdd.zip\\node_modules\\cache-loader\\dist\\cjs.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyohDQogKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4gU2VlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcHJvamVjdC4NCiAqLwppbXBvcnQgeyBnZXREYXRhc2V0LCBnZXRGb3JtYXQsIGdldE5vZGVzRmlsZSwgZ2V0RWRnZXNGaWxlLCBnZXRKb2luRmlsZSwgZ2V0Q29tbXVuaXRpZXNGaWxlIH0gZnJvbSAnLi4vdXRpbHMvcXVlcnknOwppbXBvcnQgeyBhdG9tLCB1c2VSZWNvaWxWYWx1ZSB9IGZyb20gJ3JlY29pbCc7IC8vIFRPRE86IHdlIG1heSB3YW50IHRoaXMgdG8gYmUgYW4gZW52IHZhcmlhYmxlIGZvciBkZWRpY2F0ZWQgZGVwbG95bWVudHMKCmNvbnN0IGRhdGFzZXRTdGF0ZSA9IGF0b20oewogIGtleTogJ2RhdGFzZXQnLAogIGRlZmF1bHQ6IGdldERhdGFzZXQoKQp9KTsKY29uc3QgZm9ybWF0U3RhdGUgPSBhdG9tKHsKICBrZXk6ICdmb3JtYXQnLAogIGRlZmF1bHQ6IGdldEZvcm1hdCgpCn0pOyAvLyB0aGVzZSBmaWxlcyBhbGxvdyBsb2FkaW5nIG9mIHByZS1iYWtlZCBmaWxlcyBmcm9tIHRoZSB1cmwKLy8gbm90ZSB0aGF0IG9ubHkgb25lIHBlciB0eXBlIGlzIGFsbG93ZWQsIHRvIGZvcm0gYSAiY29tcGxldGUiCi8vIHByZXNldCBkYXRhc2V0LiBUT0RPOiBubyByZWFzb24gd2UgY291bGRuJ3Qgc3VwcG9ydCBtdWx0aXBsZXMKLy8gYW5kIGpvaW4gdGhlIHJlc3VsdGluZyB0YWJsZXMgb2YgZWFjaCB0eXBlCi8vIGlmIHdlIGRpZCB0aGF0LCB3ZSBtYXkgd2FudCB0byB1bmlmeSB0aGlzIHdpdGggdGhlIGZpbGVzU3RhdGUKCmNvbnN0IG5vZGVzRmlsZVN0YXRlID0gYXRvbSh7CiAga2V5OiAnbm9kZXMtZmlsZScsCiAgZGVmYXVsdDogZ2V0Tm9kZXNGaWxlKCkKfSk7CmNvbnN0IGVkZ2VzRmlsZVN0YXRlID0gYXRvbSh7CiAga2V5OiAnZWRnZXMtZmlsZScsCiAgZGVmYXVsdDogZ2V0RWRnZXNGaWxlKCkKfSk7CmNvbnN0IGpvaW5GaWxlU3RhdGUgPSBhdG9tKHsKICBrZXk6ICdqb2luLWZpbGUnLAogIGRlZmF1bHQ6IGdldEpvaW5GaWxlKCkKfSk7CmNvbnN0IGNvbW11bml0aWVzRmlsZVN0YXRlID0gYXRvbSh7CiAga2V5OiAnY29tbXVuaXRpZXMtZmlsZScsCiAgZGVmYXVsdDogZ2V0Q29tbXVuaXRpZXNGaWxlKCkKfSk7CmV4cG9ydCBmdW5jdGlvbiB1c2VEYXRhc2V0KCkgewogIHJldHVybiB1c2VSZWNvaWxWYWx1ZShkYXRhc2V0U3RhdGUpOwp9CmV4cG9ydCBmdW5jdGlvbiB1c2VGb3JtYXQoKSB7CiAgcmV0dXJuIHVzZVJlY29pbFZhbHVlKGZvcm1hdFN0YXRlKTsKfQpleHBvcnQgZnVuY3Rpb24gdXNlTm9kZXNGaWxlKCkgewogIHJldHVybiB1c2VSZWNvaWxWYWx1ZShub2Rlc0ZpbGVTdGF0ZSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIHVzZUVkZ2VzRmlsZSgpIHsKICByZXR1cm4gdXNlUmVjb2lsVmFsdWUoZWRnZXNGaWxlU3RhdGUpOwp9CmV4cG9ydCBmdW5jdGlvbiB1c2VKb2luRmlsZSgpIHsKICByZXR1cm4gdXNlUmVjb2lsVmFsdWUoam9pbkZpbGVTdGF0ZSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIHVzZUNvbW11bml0aWVzRmlsZSgpIHsKICByZXR1cm4gdXNlUmVjb2lsVmFsdWUoY29tbXVuaXRpZXNGaWxlU3RhdGUpOwp9"},{"version":3,"sources":["C:/ws/graph-drill/src/state/url.ts"],"names":["getDataset","getFormat","getNodesFile","getEdgesFile","getJoinFile","getCommunitiesFile","atom","useRecoilValue","datasetState","key","default","formatState","nodesFileState","edgesFileState","joinFileState","communitiesFileState","useDataset","useFormat","useNodesFile","useEdgesFile","useJoinFile","useCommunitiesFile"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,EAA8CC,YAA9C,EAA4DC,WAA5D,EAAyEC,kBAAzE,QAAoG,gBAApG;AACA,SAASC,IAAT,EAAeC,cAAf,QAAqC,QAArC,C,CACA;;AACA,MAAMC,YAAY,GAAGF,IAAI,CAAC;AACtBG,EAAAA,GAAG,EAAE,SADiB;AAEtBC,EAAAA,OAAO,EAAEV,UAAU;AAFG,CAAD,CAAzB;AAIA,MAAMW,WAAW,GAAGL,IAAI,CAAC;AACrBG,EAAAA,GAAG,EAAE,QADgB;AAErBC,EAAAA,OAAO,EAAET,SAAS;AAFG,CAAD,CAAxB,C,CAIA;AACA;AACA;AACA;AACA;;AACA,MAAMW,cAAc,GAAGN,IAAI,CAAC;AACxBG,EAAAA,GAAG,EAAE,YADmB;AAExBC,EAAAA,OAAO,EAAER,YAAY;AAFG,CAAD,CAA3B;AAIA,MAAMW,cAAc,GAAGP,IAAI,CAAC;AACxBG,EAAAA,GAAG,EAAE,YADmB;AAExBC,EAAAA,OAAO,EAAEP,YAAY;AAFG,CAAD,CAA3B;AAIA,MAAMW,aAAa,GAAGR,IAAI,CAAC;AACvBG,EAAAA,GAAG,EAAE,WADkB;AAEvBC,EAAAA,OAAO,EAAEN,WAAW;AAFG,CAAD,CAA1B;AAIA,MAAMW,oBAAoB,GAAGT,IAAI,CAAC;AAC9BG,EAAAA,GAAG,EAAE,kBADyB;AAE9BC,EAAAA,OAAO,EAAEL,kBAAkB;AAFG,CAAD,CAAjC;AAIA,OAAO,SAASW,UAAT,GAAsB;AACzB,SAAOT,cAAc,CAACC,YAAD,CAArB;AACH;AACD,OAAO,SAASS,SAAT,GAAqB;AACxB,SAAOV,cAAc,CAACI,WAAD,CAArB;AACH;AACD,OAAO,SAASO,YAAT,GAAwB;AAC3B,SAAOX,cAAc,CAACK,cAAD,CAArB;AACH;AACD,OAAO,SAASO,YAAT,GAAwB;AAC3B,SAAOZ,cAAc,CAACM,cAAD,CAArB;AACH;AACD,OAAO,SAASO,WAAT,GAAuB;AAC1B,SAAOb,cAAc,CAACO,aAAD,CAArB;AACH;AACD,OAAO,SAASO,kBAAT,GAA8B;AACjC,SAAOd,cAAc,CAACQ,oBAAD,CAArB;AACH","sourcesContent":["/*!\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Licensed under the MIT license. See LICENSE file in the project.\r\n */\r\nimport { getDataset, getFormat, getNodesFile, getEdgesFile, getJoinFile, getCommunitiesFile, } from '../utils/query';\r\nimport { atom, useRecoilValue } from 'recoil';\r\n// TODO: we may want this to be an env variable for dedicated deployments\r\nconst datasetState = atom({\r\n    key: 'dataset',\r\n    default: getDataset(),\r\n});\r\nconst formatState = atom({\r\n    key: 'format',\r\n    default: getFormat(),\r\n});\r\n// these files allow loading of pre-baked files from the url\r\n// note that only one per type is allowed, to form a \"complete\"\r\n// preset dataset. TODO: no reason we couldn't support multiples\r\n// and join the resulting tables of each type\r\n// if we did that, we may want to unify this with the filesState\r\nconst nodesFileState = atom({\r\n    key: 'nodes-file',\r\n    default: getNodesFile(),\r\n});\r\nconst edgesFileState = atom({\r\n    key: 'edges-file',\r\n    default: getEdgesFile(),\r\n});\r\nconst joinFileState = atom({\r\n    key: 'join-file',\r\n    default: getJoinFile(),\r\n});\r\nconst communitiesFileState = atom({\r\n    key: 'communities-file',\r\n    default: getCommunitiesFile(),\r\n});\r\nexport function useDataset() {\r\n    return useRecoilValue(datasetState);\r\n}\r\nexport function useFormat() {\r\n    return useRecoilValue(formatState);\r\n}\r\nexport function useNodesFile() {\r\n    return useRecoilValue(nodesFileState);\r\n}\r\nexport function useEdgesFile() {\r\n    return useRecoilValue(edgesFileState);\r\n}\r\nexport function useJoinFile() {\r\n    return useRecoilValue(joinFileState);\r\n}\r\nexport function useCommunitiesFile() {\r\n    return useRecoilValue(communitiesFileState);\r\n}\r\n"]}]}