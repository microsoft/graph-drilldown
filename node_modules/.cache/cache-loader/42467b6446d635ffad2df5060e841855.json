{"remainingRequest":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js??ruleSet[1].rules[0].use[1]!C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js??ruleSet[1].rules[0].use[2]!C:\\ws\\graph-drill\\src\\state\\settings.ts","dependencies":[{"path":"C:\\ws\\graph-drill\\src\\state\\settings.ts","mtime":1631029334891},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\cache-loader-virtual-2fd14a2267\\0\\cache\\cache-loader-npm-4.1.0-82c3da90d8-0339778bdd.zip\\node_modules\\cache-loader\\dist\\cjs.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyohDQogKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4gU2VlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcHJvamVjdC4NCiAqLwppbXBvcnQgeyBwYXJzZVBhcmFtcyB9IGZyb20gJy4uL3V0aWxzL3F1ZXJ5JzsKaW1wb3J0IHsgbG9hZCwgVGhlbWVWYXJpYW50IH0gZnJvbSAnQHRoZW1hdGljL2NvcmUnOwppbXBvcnQgeyBhdG9tLCBzZWxlY3RvciwgdXNlUmVjb2lsU3RhdGUsIHVzZVJlY29pbFZhbHVlIH0gZnJvbSAncmVjb2lsJzsgLy8gVE9ETzogdGhlIGJ1bmRsZWQgc2V0dGluZ3Mgb2JqZWN0IGlzIGNvbnZlbmllbnQsIGJ1dCB0aGlzIHdpbGwgY2F1c2UgYWxsIHBlcmYgc3R1ZmYgdG8gY2FzY2FkZSBvbiBjaGFuZ2UKLy8gd2UgY2FuIHVzZSBhbiBhdG9tRmFtaWx5IHRvIHNlcGFyYXRlIHRoZXNlIGludG8gaW5kZXBlbmRlbnQgZGVwZW5kZW5jaWVzCgpjb25zdCBERUZBVUxUX1NFVFRJTkdTID0gcGFyc2VQYXJhbXMoewogIHNob3dQcmV2aWV3TWFwOiB0cnVlLAogIHNob3dNaW5pTWFwOiB0cnVlLAogIG1pbmlNYXBOb2RlUmFkaXVzOiAyLAogIGhpZGVFZGdlc1doaWxlTW92aW5nOiBmYWxzZSwKICAvLyBUT0RPOiB3ZSBkZWZhdWx0IHRoaXMgdG8gZGFyayBtb2RlLCBidXQgc2hvdWxkIHRyeSBjaGVja2luZyB1c2VyIE9TIHNldHRpbmcKICAvLyB3ZSBuZWVkIHRvIHNwcnVjZSB1cCB0aGUgbGlnaHQgbW9kZSBkZXNpZ24gZm9yIHRoaXMgYSBsaXR0bGUgYml0IHRob3VnaAogIGRhcmtNb2RlOiB0cnVlLAogIHN1YnNhbXBsZU1pbmlNYXA6IHRydWUsCiAgbWF4TWluaU1hcE5vZGVzOiAzMDAwMCwKICBzdWJzYW1wbGVFZGdlczogdHJ1ZSwKICBtYXhFZGdlczogNTAwMDAsCiAgc3Vic2FtcGxlTm9kZXM6IHRydWUsCiAgbWF4Tm9kZXM6IDUwMDAwMAp9KTsKY29uc3QgU0VUVElOR1NfR1JPVVBTID0gW3sKICBsYWJlbDogJ01haW4gbWFwJywKICBrZXlzOiBbJ3N1YnNhbXBsZU5vZGVzJywgJ21heE5vZGVzJ10KfSwgewogIGxhYmVsOiAnTWluaSBtYXAnLAogIGtleXM6IFsnc2hvd01pbmlNYXAnLCAnc3Vic2FtcGxlTWluaU1hcCcsICdtYXhNaW5pTWFwTm9kZXMnLCAnbWluaU1hcE5vZGVSYWRpdXMnXQp9LCB7CiAgbGFiZWw6ICdQcmV2aWV3IG1hcCcsCiAga2V5czogWydzaG93UHJldmlld01hcCddCn0sIHsKICBsYWJlbDogJ0VkZ2VzJywKICBrZXlzOiBbJ2hpZGVFZGdlc1doaWxlTW92aW5nJywgJ3N1YnNhbXBsZUVkZ2VzJywgJ21heEVkZ2VzJ10KfV07CmNvbnN0IEZJWEVEX0NPTFVNTlMgPSBuZXcgU2V0KFsnbm9kZS5sYWJlbCcsICdub2RlLngnLCAnbm9kZS55JywgJ25vZGUuZCddKTsKZXhwb3J0IGNvbnN0IHNldHRpbmdzU3RhdGUgPSBhdG9tKHsKICBrZXk6ICdzZXR0aW5ncycsCiAgZGVmYXVsdDogREVGQVVMVF9TRVRUSU5HUwp9KTsKY29uc3Qgc2V0dGluZ3NHcm91cHNTdGF0ZSA9IGF0b20oewogIGtleTogJ3NldHRpbmdzLWdyb3VwcycsCiAgZGVmYXVsdDogU0VUVElOR1NfR1JPVVBTCn0pOwpjb25zdCB2aXNpYmxlQnJvd3NlckNvbHVtbnMgPSBhdG9tKHsKICBrZXk6ICdicm93c2VyLWNvbHVtbnMnLAogIGRlZmF1bHQ6IEZJWEVEX0NPTFVNTlMKfSk7CmNvbnN0IHZpc2libGVCcm93c2VyU3RhdGUgPSBzZWxlY3Rvcih7CiAga2V5OiAnYnJvd3Nlci1jb2x1bW4tc3RhdGUnLAogIGdldDogKHsKICAgIGdldAogIH0pID0+IHsKICAgIHJldHVybiBnZXQodmlzaWJsZUJyb3dzZXJDb2x1bW5zKTsKICB9LAogIHNldDogKHsKICAgIHNldAogIH0sIG5ld1ZhbHVlKSA9PiB7CiAgICAvLyBUT0RPOiB1c2Ugc2VsZWN0b3JGYW1pbHkgYW5kIGRvIHRoZSBtZXJnZSBoZXJlIHdpdGggYSBwYXJ0aWFsICsgb3ZlcmxheT8KICAgIHNldCh2aXNpYmxlQnJvd3NlckNvbHVtbnMsIG5ld1ZhbHVlKTsKICB9Cn0pOwpleHBvcnQgY29uc3QgdGhlbWVTdGF0ZSA9IHNlbGVjdG9yKHsKICBrZXk6ICd0aGVtZScsCiAgZGFuZ2Vyb3VzbHlBbGxvd011dGFiaWxpdHk6IHRydWUsCiAgZ2V0OiAoewogICAgZ2V0CiAgfSkgPT4gewogICAgY29uc3Qgc2V0dGluZ3MgPSBnZXQoc2V0dGluZ3NTdGF0ZSk7CiAgICBjb25zdCB0aGVtZSA9IGxvYWQoewogICAgICB2YXJpYW50OiBzZXR0aW5ncy5kYXJrTW9kZSA/IFRoZW1lVmFyaWFudC5EYXJrIDogVGhlbWVWYXJpYW50LkxpZ2h0CiAgICB9KTsKICAgIHJldHVybiB0aGVtZTsKICB9Cn0pOwpleHBvcnQgZnVuY3Rpb24gdXNlU2V0dGluZ3MoKSB7CiAgcmV0dXJuIHVzZVJlY29pbFN0YXRlKHNldHRpbmdzU3RhdGUpOwp9CmV4cG9ydCBmdW5jdGlvbiB1c2VTZXR0aW5nc0dyb3VwcygpIHsKICByZXR1cm4gdXNlUmVjb2lsVmFsdWUoc2V0dGluZ3NHcm91cHNTdGF0ZSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIHVzZUJyb3dzZXJDb2x1bW5zKCkgewogIHJldHVybiB1c2VSZWNvaWxTdGF0ZSh2aXNpYmxlQnJvd3NlclN0YXRlKTsKfQpleHBvcnQgZnVuY3Rpb24gdXNlVGhlbWUoKSB7CiAgcmV0dXJuIHVzZVJlY29pbFZhbHVlKHRoZW1lU3RhdGUpOwp9"},{"version":3,"sources":["C:/ws/graph-drill/src/state/settings.ts"],"names":["parseParams","load","ThemeVariant","atom","selector","useRecoilState","useRecoilValue","DEFAULT_SETTINGS","showPreviewMap","showMiniMap","miniMapNodeRadius","hideEdgesWhileMoving","darkMode","subsampleMiniMap","maxMiniMapNodes","subsampleEdges","maxEdges","subsampleNodes","maxNodes","SETTINGS_GROUPS","label","keys","FIXED_COLUMNS","Set","settingsState","key","default","settingsGroupsState","visibleBrowserColumns","visibleBrowserState","get","set","newValue","themeState","dangerouslyAllowMutability","settings","theme","variant","Dark","Light","useSettings","useSettingsGroups","useBrowserColumns","useTheme"],"mappings":"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","sourcesContent":["/*!\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Licensed under the MIT license. See LICENSE file in the project.\r\n */\r\nimport { parseParams } from '../utils/query';\r\nimport { load, ThemeVariant } from '@thematic/core';\r\nimport { atom, selector, useRecoilState, useRecoilValue } from 'recoil';\r\n// TODO: the bundled settings object is convenient, but this will cause all perf stuff to cascade on change\r\n// we can use an atomFamily to separate these into independent dependencies\r\nconst DEFAULT_SETTINGS = parseParams({\r\n    showPreviewMap: true,\r\n    showMiniMap: true,\r\n    miniMapNodeRadius: 2,\r\n    hideEdgesWhileMoving: false,\r\n    // TODO: we default this to dark mode, but should try checking user OS setting\r\n    // we need to spruce up the light mode design for this a little bit though\r\n    darkMode: true,\r\n    subsampleMiniMap: true,\r\n    maxMiniMapNodes: 30000,\r\n    subsampleEdges: true,\r\n    maxEdges: 50000,\r\n    subsampleNodes: true,\r\n    maxNodes: 500000,\r\n});\r\nconst SETTINGS_GROUPS = [\r\n    {\r\n        label: 'Main map',\r\n        keys: ['subsampleNodes', 'maxNodes'],\r\n    },\r\n    {\r\n        label: 'Mini map',\r\n        keys: [\r\n            'showMiniMap',\r\n            'subsampleMiniMap',\r\n            'maxMiniMapNodes',\r\n            'miniMapNodeRadius',\r\n        ],\r\n    },\r\n    {\r\n        label: 'Preview map',\r\n        keys: ['showPreviewMap'],\r\n    },\r\n    {\r\n        label: 'Edges',\r\n        keys: ['hideEdgesWhileMoving', 'subsampleEdges', 'maxEdges'],\r\n    },\r\n];\r\nconst FIXED_COLUMNS = new Set(['node.label', 'node.x', 'node.y', 'node.d']);\r\nexport const settingsState = atom({\r\n    key: 'settings',\r\n    default: DEFAULT_SETTINGS,\r\n});\r\nconst settingsGroupsState = atom({\r\n    key: 'settings-groups',\r\n    default: SETTINGS_GROUPS,\r\n});\r\nconst visibleBrowserColumns = atom({\r\n    key: 'browser-columns',\r\n    default: FIXED_COLUMNS,\r\n});\r\nconst visibleBrowserState = selector({\r\n    key: 'browser-column-state',\r\n    get: ({ get }) => {\r\n        return get(visibleBrowserColumns);\r\n    },\r\n    set: ({ set }, newValue) => {\r\n        // TODO: use selectorFamily and do the merge here with a partial + overlay?\r\n        set(visibleBrowserColumns, newValue);\r\n    },\r\n});\r\nexport const themeState = selector({\r\n    key: 'theme',\r\n    dangerouslyAllowMutability: true,\r\n    get: ({ get }) => {\r\n        const settings = get(settingsState);\r\n        const theme = load({\r\n            variant: settings.darkMode ? ThemeVariant.Dark : ThemeVariant.Light,\r\n        });\r\n        return theme;\r\n    },\r\n});\r\nexport function useSettings() {\r\n    return useRecoilState(settingsState);\r\n}\r\nexport function useSettingsGroups() {\r\n    return useRecoilValue(settingsGroupsState);\r\n}\r\nexport function useBrowserColumns() {\r\n    return useRecoilState(visibleBrowserState);\r\n}\r\nexport function useTheme() {\r\n    return useRecoilValue(themeState);\r\n}\r\n"]}]}