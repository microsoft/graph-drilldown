{"remainingRequest":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js??ruleSet[1].rules[0].use[1]!C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js??ruleSet[1].rules[0].use[2]!C:\\ws\\graph-drill\\src\\state\\vis\\nodeOpacity.ts","dependencies":[{"path":"C:\\ws\\graph-drill\\src\\state\\vis\\nodeOpacity.ts","mtime":1631029334914},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\cache-loader-virtual-2fd14a2267\\0\\cache\\cache-loader-npm-4.1.0-82c3da90d8-0339778bdd.zip\\node_modules\\cache-loader\\dist\\cjs.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgeyBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IH0ga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9CgppbXBvcnQgeyBzZWxlY3RlZENvbW11bml0eVN0YXRlIH0gZnJvbSAnLi4vY29tbXVuaXRpZXMnOwppbXBvcnQgeyBjb21tdW5pdHlOb2Rlc1RhYmxlU3RhdGUgfSBmcm9tICcuLi90YWJsZXMnOwppbXBvcnQgeyBnZXREZWZhdWx0TnVtZXJpY09wdGlvbnMgfSBmcm9tICcuL2NvbmZpZyc7CmltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnOwppbXBvcnQgeyBhdG9tLCBhdG9tRmFtaWx5LCBzZWxlY3RvckZhbWlseSwgdXNlUmVjb2lsVmFsdWUsIHVzZVNldFJlY29pbFN0YXRlIH0gZnJvbSAncmVjb2lsJzsKaW1wb3J0IHsgZ2V0Q29sdW1uU3RhdHMgfSBmcm9tICd+L2FycXVlcm8nOwpjb25zdCBmaWVsZFN0YXRlID0gYXRvbSh7CiAga2V5OiAnbm9kZS1vcGFjaXR5LWVuY29kaW5nLWZpZWxkJywKICBkZWZhdWx0OiAnJwp9KTsKY29uc3QgZW5jb2RpbmdTdGF0ZSA9IGF0b21GYW1pbHkoewogIGtleTogJ25vZGUtb3BhY2l0eS1lbmNvZGluZy1zdGF0ZScsCiAgZGVmYXVsdDogc2VsZWN0b3JGYW1pbHkoewogICAga2V5OiAnbm9kZS1vcGFjaXR5LWVuY29kaW5nLXN0YXRlLWRlZmF1bHQnLAogICAgZ2V0OiBmaWVsZCA9PiAoewogICAgICBnZXQKICAgIH0pID0+IHsKICAgICAgY29uc3QgcGlkID0gZ2V0KHNlbGVjdGVkQ29tbXVuaXR5U3RhdGUpOwogICAgICBjb25zdCB0YWJsZSA9IGdldChjb21tdW5pdHlOb2Rlc1RhYmxlU3RhdGUocGlkKSk7CiAgICAgIGNvbnN0IHN0YXRzID0gZ2V0Q29sdW1uU3RhdHModGFibGUsIGZpZWxkKTsKICAgICAgcmV0dXJuIGdldERlZmF1bHROb2RlT3BhY2l0eU9wdGlvbnMoZmllbGQsIHN0YXRzKTsKICAgIH0KICB9KQp9KTsKZXhwb3J0IGZ1bmN0aW9uIHVzZU5vZGVPcGFjaXR5RW5jb2RpbmcoKSB7CiAgY29uc3QgZmllbGQgPSB1c2VSZWNvaWxWYWx1ZShmaWVsZFN0YXRlKTsKICByZXR1cm4gdXNlUmVjb2lsVmFsdWUoZW5jb2RpbmdTdGF0ZShmaWVsZCkpOwp9CmV4cG9ydCBmdW5jdGlvbiB1c2VVcGRhdGVOb2RlT3BhY2l0eUVuY29kaW5nKCkgewogIGNvbnN0IGVuY29kaW5nID0gdXNlTm9kZU9wYWNpdHlFbmNvZGluZygpOwogIGNvbnN0IHNldHRlciA9IHVzZVNldFJlY29pbFN0YXRlKGVuY29kaW5nU3RhdGUoZW5jb2RpbmcuZmllbGQgfHwgJycpKTsKICBjb25zdCBmaWVsZFNldHRlciA9IHVzZVNldFJlY29pbFN0YXRlKGZpZWxkU3RhdGUpOwogIHJldHVybiB1c2VDYWxsYmFjayh1cGRhdGUgPT4gewogICAgaWYgKHVwZGF0ZS5maWVsZCkgewogICAgICBmaWVsZFNldHRlcih1cGRhdGUuZmllbGQpOwogICAgfSBlbHNlIHsKICAgICAgc2V0dGVyKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgZW5jb2RpbmcpLCB1cGRhdGUpKTsKICAgIH0KICB9LCBbZW5jb2RpbmcsIHNldHRlciwgZmllbGRTZXR0ZXJdKTsKfQoKZnVuY3Rpb24gZ2V0RGVmYXVsdE5vZGVPcGFjaXR5T3B0aW9ucyhmaWVsZCwgc3RhdHMpIHsKICByZXR1cm4gZ2V0RGVmYXVsdE51bWVyaWNPcHRpb25zKGZpZWxkLCBzdGF0cywgewogICAgdmFsdWU6IDAuOSwKICAgIHJhbmdlOiBbMC4xLCAxXQogIH0pOwp9"},{"version":3,"sources":["C:/ws/graph-drill/src/state/vis/nodeOpacity.ts"],"names":["selectedCommunityState","communityNodesTableState","getDefaultNumericOptions","useCallback","atom","atomFamily","selectorFamily","useRecoilValue","useSetRecoilState","getColumnStats","fieldState","key","default","encodingState","get","field","pid","table","stats","getDefaultNodeOpacityOptions","useNodeOpacityEncoding","useUpdateNodeOpacityEncoding","encoding","setter","fieldSetter","update","value","range"],"mappings":";;;;;;AAAA,SAASA,sBAAT,QAAuC,gBAAvC;AACA,SAASC,wBAAT,QAAyC,WAAzC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,cAA3B,EAA2CC,cAA3C,EAA2DC,iBAA3D,QAAqF,QAArF;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,MAAMC,UAAU,GAAGN,IAAI,CAAC;AACpBO,EAAAA,GAAG,EAAE,6BADe;AAEpBC,EAAAA,OAAO,EAAE;AAFW,CAAD,CAAvB;AAIA,MAAMC,aAAa,GAAGR,UAAU,CAAC;AAC7BM,EAAAA,GAAG,EAAE,6BADwB;AAE7BC,EAAAA,OAAO,EAAEN,cAAc,CAAC;AACpBK,IAAAA,GAAG,EAAE,qCADe;AAEpBG,IAAAA,GAAG,EAAGC,KAAD,IAAW,CAAC;AAAED,MAAAA;AAAF,KAAD,KAAa;AACzB,YAAME,GAAG,GAAGF,GAAG,CAACd,sBAAD,CAAf;AACA,YAAMiB,KAAK,GAAGH,GAAG,CAACb,wBAAwB,CAACe,GAAD,CAAzB,CAAjB;AACA,YAAME,KAAK,GAAGT,cAAc,CAACQ,KAAD,EAAQF,KAAR,CAA5B;AACA,aAAOI,4BAA4B,CAACJ,KAAD,EAAQG,KAAR,CAAnC;AACH;AAPmB,GAAD;AAFM,CAAD,CAAhC;AAYA,OAAO,SAASE,sBAAT,GAAkC;AACrC,QAAML,KAAK,GAAGR,cAAc,CAACG,UAAD,CAA5B;AACA,SAAOH,cAAc,CAACM,aAAa,CAACE,KAAD,CAAd,CAArB;AACH;AACD,OAAO,SAASM,4BAAT,GAAwC;AAC3C,QAAMC,QAAQ,GAAGF,sBAAsB,EAAvC;AACA,QAAMG,MAAM,GAAGf,iBAAiB,CAACK,aAAa,CAACS,QAAQ,CAACP,KAAT,IAAkB,EAAnB,CAAd,CAAhC;AACA,QAAMS,WAAW,GAAGhB,iBAAiB,CAACE,UAAD,CAArC;AACA,SAAOP,WAAW,CAAEsB,MAAD,IAAY;AAC3B,QAAIA,MAAM,CAACV,KAAX,EAAkB;AACdS,MAAAA,WAAW,CAACC,MAAM,CAACV,KAAR,CAAX;AACH,KAFD,MAGK;AACDQ,MAAAA,MAAM,iCACCD,QADD,GAECG,MAFD,EAAN;AAIH;AACJ,GAViB,EAUf,CAACH,QAAD,EAAWC,MAAX,EAAmBC,WAAnB,CAVe,CAAlB;AAWH;;AACD,SAASL,4BAAT,CAAsCJ,KAAtC,EAA6CG,KAA7C,EAAoD;AAChD,SAAOhB,wBAAwB,CAACa,KAAD,EAAQG,KAAR,EAAe;AAC1CQ,IAAAA,KAAK,EAAE,GADmC;AAE1CC,IAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,CAAN;AAFmC,GAAf,CAA/B;AAIH","sourcesContent":["import { selectedCommunityState } from '../communities';\r\nimport { communityNodesTableState } from '../tables';\r\nimport { getDefaultNumericOptions } from './config';\r\nimport { useCallback } from 'react';\r\nimport { atom, atomFamily, selectorFamily, useRecoilValue, useSetRecoilState, } from 'recoil';\r\nimport { getColumnStats } from '~/arquero';\r\nconst fieldState = atom({\r\n    key: 'node-opacity-encoding-field',\r\n    default: '',\r\n});\r\nconst encodingState = atomFamily({\r\n    key: 'node-opacity-encoding-state',\r\n    default: selectorFamily({\r\n        key: 'node-opacity-encoding-state-default',\r\n        get: (field) => ({ get }) => {\r\n            const pid = get(selectedCommunityState);\r\n            const table = get(communityNodesTableState(pid));\r\n            const stats = getColumnStats(table, field);\r\n            return getDefaultNodeOpacityOptions(field, stats);\r\n        },\r\n    }),\r\n});\r\nexport function useNodeOpacityEncoding() {\r\n    const field = useRecoilValue(fieldState);\r\n    return useRecoilValue(encodingState(field));\r\n}\r\nexport function useUpdateNodeOpacityEncoding() {\r\n    const encoding = useNodeOpacityEncoding();\r\n    const setter = useSetRecoilState(encodingState(encoding.field || ''));\r\n    const fieldSetter = useSetRecoilState(fieldState);\r\n    return useCallback((update) => {\r\n        if (update.field) {\r\n            fieldSetter(update.field);\r\n        }\r\n        else {\r\n            setter({\r\n                ...encoding,\r\n                ...update,\r\n            });\r\n        }\r\n    }, [encoding, setter, fieldSetter]);\r\n}\r\nfunction getDefaultNodeOpacityOptions(field, stats) {\r\n    return getDefaultNumericOptions(field, stats, {\r\n        value: 0.9,\r\n        range: [0.1, 1],\r\n    });\r\n}\r\n"]}]}