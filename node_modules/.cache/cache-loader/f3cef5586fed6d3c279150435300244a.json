{"remainingRequest":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js??ruleSet[1].rules[0].use[1]!C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js??ruleSet[1].rules[0].use[2]!C:\\ws\\graph-drill\\src\\arquero\\util.ts","dependencies":[{"path":"C:\\ws\\graph-drill\\src\\arquero\\util.ts","mtime":1631029334677},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\cache-loader-virtual-2fd14a2267\\0\\cache\\cache-loader-npm-4.1.0-82c3da90d8-0339778bdd.zip\\node_modules\\cache-loader\\dist\\cjs.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgeyBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IH0ga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9CgppbXBvcnQgeyBUYWJsZUNvbGxlY3Rpb24gfSBmcm9tICcuL1RhYmxlQ29sbGVjdGlvbic7CmltcG9ydCB7IG9uZSB9IGZyb20gJy4vdGFibGUnOwppbXBvcnQgeyBoaXN0b2dyYW0gfSBmcm9tICdAZXNzZXgtanMtdG9vbGtpdC90b29sYm94JzsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lCgppbXBvcnQgeyBvcCB9IGZyb20gJ2FycXVlcm8nOwppbXBvcnQgeyBwcmVjaXNpb25GaXhlZCB9IGZyb20gJ2QzLWZvcm1hdCc7CmV4cG9ydCBmdW5jdGlvbiBnZXRDb2x1bW5TdGF0cyh0YWJsZSwgbmFtZSkgewogIGlmICghdGFibGUgfHwgdGFibGUubnVtUm93cygpID09PSAwIHx8IHRhYmxlLm51bUNvbHMoKSA9PT0gMCB8fCAhbmFtZSkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YVR5cGU6ICcnLAogICAgICBwcmVjaXNpb246IDAsCiAgICAgIHVuaXF1ZTogW10sCiAgICAgIGRvbWFpbjogWzAsIDFdLAogICAgICBkb21haW45NTogWzAsIDFdLAogICAgICBkb21haW45OTogWzAsIDFdCiAgICB9OwogIH0KCiAgY29uc3QgdHlwZSA9IHR5cGVvZiB0YWJsZS5nZXQobmFtZSwgMCk7CiAgY29uc3Qgc3RhdHMgPSBvbmUodGFibGUucm9sbHVwKHsKICAgIG1pbjogb3AubWluKG5hbWUpLAogICAgbWF4OiBvcC5tYXgobmFtZSksCiAgICBxMDE6IG9wLnF1YW50aWxlKG5hbWUsIDAuMDEpLAogICAgcTA1OiBvcC5xdWFudGlsZShuYW1lLCAwLjA1KSwKICAgIHE5NTogb3AucXVhbnRpbGUobmFtZSwgMC45NSksCiAgICBxOTk6IG9wLnF1YW50aWxlKG5hbWUsIDAuOTkpLAogICAgdW5pcXVlOiBvcC51bmlxdWUobmFtZSkKICB9KSk7CiAgY29uc3QgcmV0ID0gewogICAgZGF0YVR5cGU6IHR5cGUsCiAgICBwcmVjaXNpb246IGdldFByZWNpc2lvbihbc3RhdHMubWluLCBzdGF0cy5tYXhdLCBzdGF0cy51bmlxdWVzKSwKICAgIHVuaXF1ZTogc3RhdHMudW5pcXVlLAogICAgZG9tYWluOiBbc3RhdHMubWluLCBzdGF0cy5tYXhdLAogICAgZG9tYWluOTU6IFtzdGF0cy5xMDUsIHN0YXRzLnE5NV0sCiAgICBkb21haW45OTogW3N0YXRzLnEwMSwgc3RhdHMucTk5XQogIH07CiAgcmV0dXJuIHJldDsKfSAvLyBjb21wdXRlIGEgc3VnZ2VzdGVkIHByZWNpc2lvbiBiYXNlZCBvbiAxMDAgZGl2aXNpb25zIG9mIHRoZSBkYXRhIHJhbmdlCgpleHBvcnQgZnVuY3Rpb24gZ2V0UHJlY2lzaW9uKGRvbWFpbiA9IFswLCAxXSwgdmFsdWVzKSB7CiAgY29uc3Qgc3ByZWFkID0gZG9tYWluWzFdIC0gZG9tYWluWzBdOwogIGNvbnN0IHdob2xlID0gY2hlY2tXaG9sZSh2YWx1ZXMpOwogIHJldHVybiB3aG9sZSA/IDAgOiBwcmVjaXNpb25GaXhlZChzcHJlYWQgLyAxMDApOwp9CgpmdW5jdGlvbiBjaGVja1dob2xlKG51bWJlcnMpIHsKICBpZiAoIW51bWJlcnMpIHsKICAgIHJldHVybiBmYWxzZTsKICB9CgogIHJldHVybiBudW1iZXJzLmV2ZXJ5KG4gPT4gTnVtYmVyLmlzSW50ZWdlcihuKSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBnZXRDb2x1bW5IaXN0b2dyYW0odGFibGUsIG5hbWUpIHsKICBpZiAoIXRhYmxlIHx8IHRhYmxlLm51bVJvd3MoKSA9PT0gMCB8fCAhbmFtZSkgewogICAgcmV0dXJuIFtdOwogIH0KCiAgY29uc3QgdHlwZSA9IG5hbWUuc3BsaXQoJy4nKVswXTsKICBjb25zdCBjb2xsZWN0aW9uID0gbmV3IFRhYmxlQ29sbGVjdGlvbih0YWJsZSwgdHlwZSk7IC8vIFRPRE86IHVzZSB0aGUgYmluVGFibGVDb2x1bW4gZnVuY3Rpb24sIGJ1dCB0aGlzIGRvZXMgbm90IHByb2R1Y2UgdGhlIHNhbWUgdHlwZSBvZiBiaW5zIGFzIHRoZSBoaXN0b2dyYW0gdXRpbGl0eQoKICBjb25zdCBoaXN0byA9IGhpc3RvZ3JhbShjb2xsZWN0aW9uLnRvQXJyYXkoKSwgMTAwLCBkID0+IGQuZ2V0KG5hbWUpKTsKICByZXR1cm4gaGlzdG87Cn0KLyoqDQogKiBUaGlzIGZ1bmN0aW9uIHRha2VzIGFuIGFycXVlcm8gdGFibGUgYW5kIGJpbnMgdGhlIHZhbHVlcyBvZiBhIHNwZWNpZmllZCBjb2x1bW4NCiAqIGludG8gYSBmaXhlZCBzZXQgb2YgcXVhbnRpbGVzIGZyb20gMC0xLjAuDQogKiAvLyBUT0RPOiB1c2Ugb3AubnRpbGU/Pw0KICogQHBhcmFtIHRhYmxlDQogKiBAcGFyYW0gY29sdW1uDQogKi8KCmV4cG9ydCBmdW5jdGlvbiBiaW5UYWJsZUNvbHVtbih0YWJsZSwgY29sdW1uKSB7CiAgY29uc3QgcXVhbnRpbGVPcHMgPSBuZXcgQXJyYXkoMTAwKS5maWxsKDEpLnJlZHVjZSgoYWNjLCBjdXIsIGlkeCkgPT4gewogICAgYWNjW2lkeF0gPSBvcC5xdWFudGlsZShjb2x1bW4sIGlkeCAvIDEwMCk7CiAgICByZXR1cm4gYWNjOwogIH0sIHt9KTsKICBjb25zdCBkb21haW4gPSBvbmUodGFibGUucm9sbHVwKHsKICAgIG1pbjogb3AubWluKGNvbHVtbiksCiAgICBtYXg6IG9wLm1heChjb2x1bW4pCiAgfSkpOwogIGNvbnN0IGJpbm5lZCA9IHRhYmxlLnJvbGx1cChfb2JqZWN0U3ByZWFkKHt9LCBxdWFudGlsZU9wcykpOyAvLyBjcmFmdCBhIHNldCBvZiBkMy1zdHlsZSBiaW5zIHRvIHB1c2ggZGF0YSBpbnRvCgogIGNvbnN0IGJpbnMgPSBPYmplY3QudmFsdWVzKGJpbm5lZC5vYmplY3RzKClbMF0pLm1hcCgodiwgaSwgYSkgPT4gewogICAgY29uc3QgYXJyID0gW107CiAgICBhcnIueDAgPSB2OwoKICAgIGlmIChpID09PSBhLmxlbmd0aCAtIDEpIHsKICAgICAgYXJyLngxID0gZG9tYWluLm1heDsKICAgIH0gZWxzZSB7CiAgICAgIGFyci54MSA9IGFbaSArIDFdOwogICAgfQoKICAgIHJldHVybiBhcnI7CiAgfSk7IC8vIGZpbGwgdGhlIGJpbnMKCiAgdGFibGUuc2NhbihpZHggPT4gewogICAgY29uc3QgdmFsdWUgPSB0YWJsZS5nZXQoY29sdW1uLCBpZHgpOwogICAgY29uc3QgYmluSW5kZXggPSBiaW5zLmZpbmRJbmRleChiaW4gPT4gdmFsdWUgPj0gYmluLngwICYmIHZhbHVlIDwgYmluLngxKTsgLy8gYmluIG1heGVzIGFyZSBleGNsdXNpdmUgZXhjZXB0IGZvciB0aGUgbGFzdCBiaW4KICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9kMy9kMy1hcnJheS9ibG9iL3YyLjguMC9SRUFETUUubWQjX2JpbgoKICAgIGNvbnN0IGJpbiA9IGJpbkluZGV4IDwgMCA/IGJpbnMubGVuZ3RoIC0gMSA6IGJpbkluZGV4OwogICAgYmluc1tiaW5dLnB1c2godmFsdWUpOwogIH0pOwogIHJldHVybiBiaW5zOwp9"},{"version":3,"sources":["C:/ws/graph-drill/src/arquero/util.ts"],"names":["TableCollection","one","histogram","op","precisionFixed","getColumnStats","table","name","numRows","numCols","dataType","precision","unique","domain","domain95","domain99","type","get","stats","rollup","min","max","q01","quantile","q05","q95","q99","ret","getPrecision","uniques","values","spread","whole","checkWhole","numbers","every","n","Number","isInteger","getColumnHistogram","split","collection","histo","toArray","d","binTableColumn","column","quantileOps","Array","fill","reduce","acc","cur","idx","binned","bins","Object","objects","map","v","i","a","arr","x0","length","x1","scan","value","binIndex","findIndex","bin","push"],"mappings":"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","sourcesContent":["import { TableCollection } from './TableCollection';\r\nimport { one } from './table';\r\nimport { histogram } from '@essex-js-toolkit/toolbox';\r\n// eslint-disable-next-line\r\nimport { op } from 'arquero';\r\nimport { precisionFixed } from 'd3-format';\r\nexport function getColumnStats(table, name) {\r\n    if (!table || table.numRows() === 0 || table.numCols() === 0 || !name) {\r\n        return {\r\n            dataType: '',\r\n            precision: 0,\r\n            unique: [],\r\n            domain: [0, 1],\r\n            domain95: [0, 1],\r\n            domain99: [0, 1],\r\n        };\r\n    }\r\n    const type = typeof table.get(name, 0);\r\n    const stats = one(table.rollup({\r\n        min: op.min(name),\r\n        max: op.max(name),\r\n        q01: op.quantile(name, 0.01),\r\n        q05: op.quantile(name, 0.05),\r\n        q95: op.quantile(name, 0.95),\r\n        q99: op.quantile(name, 0.99),\r\n        unique: op.unique(name),\r\n    }));\r\n    const ret = {\r\n        dataType: type,\r\n        precision: getPrecision([stats.min, stats.max], stats.uniques),\r\n        unique: stats.unique,\r\n        domain: [stats.min, stats.max],\r\n        domain95: [stats.q05, stats.q95],\r\n        domain99: [stats.q01, stats.q99],\r\n    };\r\n    return ret;\r\n}\r\n// compute a suggested precision based on 100 divisions of the data range\r\nexport function getPrecision(domain = [0, 1], values) {\r\n    const spread = domain[1] - domain[0];\r\n    const whole = checkWhole(values);\r\n    return whole ? 0 : precisionFixed(spread / 100);\r\n}\r\nfunction checkWhole(numbers) {\r\n    if (!numbers) {\r\n        return false;\r\n    }\r\n    return numbers.every(n => Number.isInteger(n));\r\n}\r\nexport function getColumnHistogram(table, name) {\r\n    if (!table || table.numRows() === 0 || !name) {\r\n        return [];\r\n    }\r\n    const type = name.split('.')[0];\r\n    const collection = new TableCollection(table, type);\r\n    // TODO: use the binTableColumn function, but this does not produce the same type of bins as the histogram utility\r\n    const histo = histogram(collection.toArray(), 100, (d) => d.get(name));\r\n    return histo;\r\n}\r\n/**\r\n * This function takes an arquero table and bins the values of a specified column\r\n * into a fixed set of quantiles from 0-1.0.\r\n * // TODO: use op.ntile??\r\n * @param table\r\n * @param column\r\n */\r\nexport function binTableColumn(table, column) {\r\n    const quantileOps = new Array(100).fill(1).reduce((acc, cur, idx) => {\r\n        acc[idx] = op.quantile(column, idx / 100);\r\n        return acc;\r\n    }, {});\r\n    const domain = one(table.rollup({\r\n        min: op.min(column),\r\n        max: op.max(column),\r\n    }));\r\n    const binned = table.rollup({\r\n        ...quantileOps,\r\n    });\r\n    // craft a set of d3-style bins to push data into\r\n    const bins = Object.values(binned.objects()[0]).map((v, i, a) => {\r\n        const arr = [];\r\n        arr.x0 = v;\r\n        if (i === a.length - 1) {\r\n            arr.x1 = domain.max;\r\n        }\r\n        else {\r\n            arr.x1 = a[i + 1];\r\n        }\r\n        return arr;\r\n    });\r\n    // fill the bins\r\n    table.scan((idx) => {\r\n        const value = table.get(column, idx);\r\n        const binIndex = bins.findIndex(bin => value >= bin.x0 && value < bin.x1);\r\n        // bin maxes are exclusive except for the last bin\r\n        // https://github.com/d3/d3-array/blob/v2.8.0/README.md#_bin\r\n        const bin = binIndex < 0 ? bins.length - 1 : binIndex;\r\n        bins[bin].push(value);\r\n    });\r\n    return bins;\r\n}\r\n"]}]}