{"remainingRequest":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js??ruleSet[1].rules[0].use[1]!C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js??ruleSet[1].rules[0].use[2]!C:\\ws\\graph-drill\\src\\components\\CommunityList\\hooks\\useDynamicColumn.ts","dependencies":[{"path":"C:\\ws\\graph-drill\\src\\components\\CommunityList\\hooks\\useDynamicColumn.ts","mtime":1631029334770},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\cache-loader-virtual-2fd14a2267\\0\\cache\\cache-loader-npm-4.1.0-82c3da90d8-0339778bdd.zip\\node_modules\\cache-loader\\dist\\cjs.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyohDQogKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4gU2VlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcHJvamVjdC4NCiAqLwppbXBvcnQgeyBCQVJfSEVJR0hUIH0gZnJvbSAnLi4vc3R5bGVzJzsKaW1wb3J0IHsgTWFyayB9IGZyb20gJy4uL3R5cGVzJzsKaW1wb3J0IHsgdXNlTWVtbywgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7CmltcG9ydCB7IHVzZURhdGFCb3VuZENvbG9yU2NhbGUgfSBmcm9tICd+L2hvb2tzL2dyYXBoJzsKZXhwb3J0IGZ1bmN0aW9uIHVzZUR5bmFtaWNDb2x1bW4oZW5jb2RpbmcsIHdpZHRoKSB7CiAgY29uc3QgY29sb3JTY2FsZSA9IHVzZURhdGFCb3VuZENvbG9yU2NhbGUoZW5jb2RpbmcpOwogIGNvbnN0IGNpcmNsZVNpemVTY2FsZSA9IHVzZUNhbGxiYWNrKCgpID0+IEJBUl9IRUlHSFQgLyAyLCBbXSk7CiAgcmV0dXJuIHVzZU1lbW8oKCkgPT4gewogICAgdmFyIF9lbmNvZGluZyRmaWVsZDsKCiAgICBjb25zdCBwYXJ0cyA9IChlbmNvZGluZyA9PT0gbnVsbCB8fCBlbmNvZGluZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9lbmNvZGluZyRmaWVsZCA9IGVuY29kaW5nLmZpZWxkKSA9PT0gbnVsbCB8fCBfZW5jb2RpbmckZmllbGQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9lbmNvZGluZyRmaWVsZC5zcGxpdCgnLicpKSB8fCBbXTsKICAgIHJldHVybiB7CiAgICAgIGhlYWRlcjogcGFydHNbMF0gPT09ICdub2RlJyA/ICcnIDogYFske3BhcnRzWzFdfV1gLAogICAgICBmaWVsZDogZW5jb2RpbmcuZmllbGQsCiAgICAgIG1hcms6IHBhcnRzWzBdID09PSAnbm9kZScgPyBNYXJrLk5vbmUgOiBNYXJrLkNpcmNsZSwKICAgICAgc2l6ZVNjYWxlOiBjaXJjbGVTaXplU2NhbGUsCiAgICAgIGZpbGxTY2FsZTogY29sb3JTY2FsZSwKICAgICAgd2lkdGg6IHdpZHRoCiAgICB9OwogIH0sIFtjb2xvclNjYWxlLCBjaXJjbGVTaXplU2NhbGUsIGVuY29kaW5nLCB3aWR0aF0pOwp9"},{"version":3,"sources":["C:/ws/graph-drill/src/components/CommunityList/hooks/useDynamicColumn.ts"],"names":["BAR_HEIGHT","Mark","useMemo","useCallback","useDataBoundColorScale","useDynamicColumn","encoding","width","colorScale","circleSizeScale","parts","field","split","header","mark","None","Circle","sizeScale","fillScale"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,UAAT,QAA2B,WAA3B;AACA,SAASC,IAAT,QAAqB,UAArB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,OAArC;AACA,SAASC,sBAAT,QAAuC,eAAvC;AACA,OAAO,SAASC,gBAAT,CAA0BC,QAA1B,EAAoCC,KAApC,EAA2C;AAC9C,QAAMC,UAAU,GAAGJ,sBAAsB,CAACE,QAAD,CAAzC;AACA,QAAMG,eAAe,GAAGN,WAAW,CAAC,MAAMH,UAAU,GAAG,CAApB,EAAuB,EAAvB,CAAnC;AACA,SAAOE,OAAO,CAAC,MAAM;AAAA;;AACjB,UAAMQ,KAAK,GAAG,CAAAJ,QAAQ,SAAR,IAAAA,QAAQ,WAAR,+BAAAA,QAAQ,CAAEK,KAAV,oEAAiBC,KAAjB,CAAuB,GAAvB,MAA+B,EAA7C;AACA,WAAO;AACHC,MAAAA,MAAM,EAAEH,KAAK,CAAC,CAAD,CAAL,KAAa,MAAb,GAAsB,EAAtB,GAA4B,IAAGA,KAAK,CAAC,CAAD,CAAI,GAD7C;AAEHC,MAAAA,KAAK,EAAEL,QAAQ,CAACK,KAFb;AAGHG,MAAAA,IAAI,EAAEJ,KAAK,CAAC,CAAD,CAAL,KAAa,MAAb,GAAsBT,IAAI,CAACc,IAA3B,GAAkCd,IAAI,CAACe,MAH1C;AAIHC,MAAAA,SAAS,EAAER,eAJR;AAKHS,MAAAA,SAAS,EAAEV,UALR;AAMHD,MAAAA,KAAK,EAAEA;AANJ,KAAP;AAQH,GAVa,EAUX,CAACC,UAAD,EAAaC,eAAb,EAA8BH,QAA9B,EAAwCC,KAAxC,CAVW,CAAd;AAWH","sourcesContent":["/*!\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Licensed under the MIT license. See LICENSE file in the project.\r\n */\r\nimport { BAR_HEIGHT } from '../styles';\r\nimport { Mark } from '../types';\r\nimport { useMemo, useCallback } from 'react';\r\nimport { useDataBoundColorScale } from '~/hooks/graph';\r\nexport function useDynamicColumn(encoding, width) {\r\n    const colorScale = useDataBoundColorScale(encoding);\r\n    const circleSizeScale = useCallback(() => BAR_HEIGHT / 2, []);\r\n    return useMemo(() => {\r\n        const parts = encoding?.field?.split('.') || [];\r\n        return {\r\n            header: parts[0] === 'node' ? '' : `[${parts[1]}]`,\r\n            field: encoding.field,\r\n            mark: parts[0] === 'node' ? Mark.None : Mark.Circle,\r\n            sizeScale: circleSizeScale,\r\n            fillScale: colorScale,\r\n            width: width,\r\n        };\r\n    }, [colorScale, circleSizeScale, encoding, width]);\r\n}\r\n"]}]}