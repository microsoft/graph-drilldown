{"remainingRequest":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js??ruleSet[1].rules[0].use[1]!C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js??ruleSet[1].rules[0].use[2]!C:\\ws\\graph-drill\\src\\arquero\\TableCollection.ts","dependencies":[{"path":"C:\\ws\\graph-drill\\src\\arquero\\TableCollection.ts","mtime":1631029334665},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\cache-loader-virtual-2fd14a2267\\0\\cache\\cache-loader-npm-4.1.0-82c3da90d8-0339778bdd.zip\\node_modules\\cache-loader\\dist\\cjs.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdGFibGUgYXMgY3JlYXRlVGFibGUgfSBmcm9tICdhcnF1ZXJvJzsKCmNsYXNzIFRhYmxlSXRlbUZhY2FkZSB7CiAgY29uc3RydWN0b3IodGFibGUsIGluZGV4LCBwcmVmaXgpIHsKICAgIHRoaXMuX3RhYmxlID0gdGFibGU7CiAgICB0aGlzLl9pbmRleCA9IGluZGV4OwogICAgdGhpcy5faWQgPSBgJHtwcmVmaXh9LmlkYDsKICB9CgogIGdldCB0YWJsZSgpIHsKICAgIHJldHVybiB0aGlzLl90YWJsZTsKICB9CgogIGdldCBjb2x1bW5zKCkgewogICAgcmV0dXJuIHRoaXMuX3RhYmxlLmNvbHVtbk5hbWVzKCk7CiAgfQoKICBnZXQoY29sKSB7CiAgICByZXR1cm4gdGhpcy5fdGFibGUuZ2V0KGNvbCwgdGhpcy5faW5kZXgpOwogIH0KCiAgZ2V0IGlkKCkgewogICAgcmV0dXJuIHRoaXMuZ2V0KHRoaXMuX2lkKTsKICB9Cgp9CgpjbGFzcyBOb2RlRmFjYWRlIGV4dGVuZHMgVGFibGVJdGVtRmFjYWRlIHsKICBjb25zdHJ1Y3Rvcih0YWJsZSwgaW5kZXgpIHsKICAgIHN1cGVyKHRhYmxlLCBpbmRleCwgJ25vZGUnKTsKICB9CgogIGdldCB4KCkgewogICAgcmV0dXJuIHRoaXMuZ2V0KCdub2RlLngnKTsKICB9CgogIGdldCB5KCkgewogICAgcmV0dXJuIHRoaXMuZ2V0KCdub2RlLnknKTsKICB9CgogIGdldCBkKCkgewogICAgcmV0dXJuIHRoaXMuZ2V0KCdub2RlLmQnKTsKICB9Cgp9CgpjbGFzcyBDb21tdW5pdHlGYWNhZGUgZXh0ZW5kcyBUYWJsZUl0ZW1GYWNhZGUgewogIGNvbnN0cnVjdG9yKHRhYmxlLCBpbmRleCkgewogICAgc3VwZXIodGFibGUsIGluZGV4LCAnY29tbXVuaXR5Jyk7CiAgfQoKICBnZXQgcGlkKCkgewogICAgcmV0dXJuIHRoaXMuZ2V0KCdjb21tdW5pdHkucGlkJyk7CiAgfQoKICBnZXQgY2hpbGRDb3VudCgpIHsKICAgIHJldHVybiB0aGlzLmdldCgnY29tbXVuaXR5LmNoaWxkQ291bnQnKTsKICB9CgogIGdldCBub2RlQ291bnQoKSB7CiAgICByZXR1cm4gdGhpcy5nZXQoJ2NvbW11bml0eS5ub2RlQ291bnQnKTsKICB9Cgp9CgpjbGFzcyBFZGdlRmFjYWRlIGV4dGVuZHMgVGFibGVJdGVtRmFjYWRlIHsKICBjb25zdHJ1Y3Rvcih0YWJsZSwgaW5kZXgpIHsKICAgIHN1cGVyKHRhYmxlLCBpbmRleCwgJ2VkZ2UnKTsKICB9CgogIGdldCBzb3VyY2UoKSB7CiAgICByZXR1cm4gdGhpcy5nZXQoJ2VkZ2Uuc291cmNlJyk7CiAgfQoKICBnZXQgdGFyZ2V0KCkgewogICAgcmV0dXJuIHRoaXMuZ2V0KCdlZGdlLnRhcmdldCcpOwogIH0KCiAgZ2V0IHdlaWdodCgpIHsKICAgIHJldHVybiB0aGlzLmdldCgnZWRnZS53ZWlnaHQnKTsKICB9Cgp9CgpleHBvcnQgY2xhc3MgVGFibGVDb2xsZWN0aW9uIHsKICBjb25zdHJ1Y3Rvcih0YWJsZSwgcHJlZml4LCBpbmRpY2VzKSB7CiAgICB0aGlzLl90YWJsZSA9IGNyZWF0ZVRhYmxlKCk7CgogICAgaWYgKHRhYmxlKSB7CiAgICAgIHRoaXMuX3RhYmxlID0gdGFibGU7CiAgICB9CgogICAgdGhpcy5fcHJlZml4ID0gcHJlZml4OwoKICAgIHN3aXRjaCAocHJlZml4KSB7CiAgICAgIGNhc2UgJ25vZGUnOgogICAgICAgIHRoaXMuX0N0b3IgPSBOb2RlRmFjYWRlOwogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSAnY29tbXVuaXR5JzoKICAgICAgICB0aGlzLl9DdG9yID0gQ29tbXVuaXR5RmFjYWRlOwogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSAnZWRnZSc6CiAgICAgICAgdGhpcy5fQ3RvciA9IEVkZ2VGYWNhZGU7CiAgICAgICAgYnJlYWs7CgogICAgICBkZWZhdWx0OgogICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgZGF0YSB0eXBlOiAke3ByZWZpeH1gKTsKICAgIH0KCiAgICBpZiAoaW5kaWNlcykgewogICAgICB0aGlzLl9pbmRpY2VzID0gaW5kaWNlczsKICAgIH0KICB9CgogIGdldCB0YWJsZSgpIHsKICAgIHJldHVybiB0aGlzLl90YWJsZTsKICB9CgogIGdldCBzaXplKCkgewogICAgaWYgKHRoaXMuX2luZGljZXMpIHsKICAgICAgcmV0dXJuIHRoaXMuX2luZGljZXMubGVuZ3RoOwogICAgfQoKICAgIHJldHVybiB0aGlzLl90YWJsZS5udW1Sb3dzKCk7CiAgfQoKICBnZXR0ZXIobmFtZSkgewogICAgcmV0dXJuIHRoaXMuX3RhYmxlLmdldHRlcihuYW1lKTsKICB9CgogIHNvcnQoZGVmaW5pdGlvbikgewogICAgaWYgKHRoaXMuc2l6ZSA+IDApIHsKICAgICAgdGhpcy5fdGFibGUgPSB0aGlzLl90YWJsZS5vcmRlcmJ5KGRlZmluaXRpb24pOwogICAgfQoKICAgIHJldHVybiB0aGlzOwogIH0KCiAgbWFwKGNhbGxiYWNrLCBvcmRlcmVkID0gZmFsc2UpIHsKICAgIGNvbnN0IG91dHB1dCA9IFtdOwogICAgdGhpcy5zY2FuKGlkeCA9PiB7CiAgICAgIGNvbnN0IG4gPSBuZXcgdGhpcy5fQ3Rvcih0aGlzLl90YWJsZSwgaWR4LCB0aGlzLl9wcmVmaXgpOwogICAgICBvdXRwdXQucHVzaChjYWxsYmFjayhuLCBpZHgpKTsKICAgIH0sIG9yZGVyZWQpOwogICAgcmV0dXJuIG91dHB1dDsKICB9CgogIGZvckVhY2goY2FsbGJhY2ssIG9yZGVyZWQgPSBmYWxzZSkgewogICAgdGhpcy5zY2FuKGlkeCA9PiB7CiAgICAgIGNvbnN0IG4gPSBuZXcgdGhpcy5fQ3Rvcih0aGlzLl90YWJsZSwgaWR4KTsKICAgICAgY2FsbGJhY2sobiwgaWR4KTsKICAgIH0sIG9yZGVyZWQpOwogIH0KCiAgdG9NYXAoKSB7CiAgICBjb25zdCBtYXAgPSBuZXcgTWFwKCk7CiAgICB0aGlzLnNjYW4oaWR4ID0+IHsKICAgICAgY29uc3QgbiA9IG5ldyB0aGlzLl9DdG9yKHRoaXMuX3RhYmxlLCBpZHgpOwogICAgICBjb25zdCBpZCA9IG4uaWQ7CiAgICAgIG1hcC5zZXQoaWQsIG4pOwogICAgfSk7CiAgICByZXR1cm4gbWFwOwogIH0KCiAgdG9TZXQoKSB7CiAgICBjb25zdCBzZXQgPSBuZXcgU2V0KCk7CiAgICB0aGlzLnNjYW4oaWR4ID0+IHsKICAgICAgY29uc3QgbiA9IG5ldyB0aGlzLl9DdG9yKHRoaXMuX3RhYmxlLCBpZHgpOwogICAgICBzZXQuYWRkKG4pOwogICAgfSk7CiAgICByZXR1cm4gc2V0OwogIH0KCiAgdG9BcnJheShvcmRlcmVkID0gZmFsc2UpIHsKICAgIGNvbnN0IGFyciA9IFtdOwogICAgdGhpcy5zY2FuKGlkeCA9PiB7CiAgICAgIGFyci5wdXNoKG5ldyB0aGlzLl9DdG9yKHRoaXMuX3RhYmxlLCBpZHgpKTsKICAgIH0sIG9yZGVyZWQpOwogICAgcmV0dXJuIGFycjsKICB9IC8vIFRPRE86IGl0IHdvdWxkIGJlIG5pY2VyIGFwaS13aXNlIHRvIGludGVncmF0ZSB0aGUgb2Zmc2V0L2NvdW50IHBhcmFtcyBpbnRvIHRoZSBtYXAgbWV0aG9kLCBidXQgd2UgaGF2ZSB0byBwdWxsIG91dCB0aGUgc2NhbgoKCiAgcGFnZShjYWxsYmFjaywgb2Zmc2V0LCBjb3VudCkgewogICAgY29uc3QgYXJyID0gW107CiAgICBjb25zdCBpbmRpY2VzID0gdGhpcy5faW5kaWNlcyB8fCBbXTsKCiAgICBmb3IgKGxldCBpID0gb2Zmc2V0OyBpIDwgb2Zmc2V0ICsgY291bnQ7IGkrKykgewogICAgICBjb25zdCBpZHggPSBpbmRpY2VzW2ldIHx8IGk7CiAgICAgIGNvbnN0IG9iaiA9IG5ldyB0aGlzLl9DdG9yKHRoaXMuX3RhYmxlLCBpZHgpOwogICAgICBhcnIucHVzaChjYWxsYmFjayhvYmosIGlkeCkpOwogICAgfQoKICAgIHJldHVybiBhcnI7CiAgfSAvLyBkb2VzIGEgdG9BcnJheSB3aXRoIHN1YnNldHRpbmcgYmFzZWQgb24gcHJvcG9ydGlvbiBvZiB0b3RhbCBpdGVtcwogIC8vIG5vdGUgdGhhdCB0aGlzIGNvdWxkIHVzZSB1bmRlcmx5aW5nIGFycXVlcm8gdGFibGUgc2FtcGxpbmcgZm9yIGFjdHVhbCByYW5kb20sCiAgLy8gYnV0IHRoZSBwZXJmIG9mIHRoYXQgaGFzIG5vdCBiZWVuIGNoZWNrZWQsIGFuZCBpdCBuZWVkcyB0byBhY2NvdW50IGZvciBncm91cHMKCgogIHNhbXBsZShwcm9wb3J0aW9uKSB7CiAgICBjb25zdCBhcnIgPSBbXTsKICAgIGNvbnN0IHJhdGlvID0gTWF0aC5mbG9vcigxIC8gcHJvcG9ydGlvbik7CiAgICB0aGlzLnNjYW4oaWR4ID0+IHsKICAgICAgaWYgKGlkeCAlIHJhdGlvID09PSAwKSB7CiAgICAgICAgYXJyLnB1c2gobmV3IHRoaXMuX0N0b3IodGhpcy5fdGFibGUsIGlkeCkpOwogICAgICB9CiAgICB9KTsKICAgIHJldHVybiBhcnI7CiAgfQogIC8qKg0KICAgKiBEaXJlY3QgcGFzc3Rocm91Z2ggdG8gdGFibGUgc2NhbiwgYnV0IHVzaW5nIHByb3ZpZGVkIGluZGljZXMgaWYgcHJlc2VudC4NCiAgICogVGhpcyBsZXRzIHVzIGNyZWF0ZSBjb2xsZWN0aW9ucyB0aGF0IGFyZSBhICJ2aWV3IiBvdmVyIHRoZSB0b3Agb2YgYSBsYXJnZXINCiAgICogdGFibGUuDQogICAqIEFycXVlcm8gZG9lc24ndCBzdXBwb3J0IHRoZSBub3Rpb24gb2YgaXRlcmF0aW5nIGdyb3VwcyBkaXJlY3RseSwgc28gdGhpcyBwcm92aWRlcw0KICAgKiB0aGF0Lg0KICAgKiBAcGFyYW0gY2FsbGJhY2sNCiAgICogQHBhcmFtIG9yZGVyZWQNCiAgICovCgoKICBzY2FuKGNhbGxiYWNrLCBvcmRlcmVkID0gZmFsc2UpIHsKICAgIC8vIG5vdGUgdGhhdCB3ZSBhc3N1bWUgcHJvdmlkZWQgaW5kaWNlcyBhcmUgYWxyZWFkeSBvcmRlcmVkCiAgICBpZiAodGhpcy5faW5kaWNlcykgewogICAgICBjb25zdCBkYXRhID0gdGhpcy5fdGFibGUuZGF0YSgpOwoKICAgICAgbGV0IGNvbnQgPSB0cnVlOwoKICAgICAgY29uc3Qgc3RvcCA9ICgpID0+IGNvbnQgPSBmYWxzZTsKCiAgICAgIHRoaXMuX2luZGljZXMuZXZlcnkoaWR4ID0+IHsKICAgICAgICBjYWxsYmFjayhpZHgsIGRhdGEsIHN0b3ApOwogICAgICAgIHJldHVybiBjb250OwogICAgICB9KTsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiB0aGlzLl90YWJsZS5zY2FuKGNhbGxiYWNrLCBvcmRlcmVkKTsKICAgIH0KICB9Cgp9CmV4cG9ydCBjbGFzcyBDb21tdW5pdHlDb2xsZWN0aW9uIGV4dGVuZHMgVGFibGVDb2xsZWN0aW9uIHsKICBjb25zdHJ1Y3Rvcih0YWJsZSwgaW5kaWNlcykgewogICAgc3VwZXIodGFibGUsICdjb21tdW5pdHknLCBpbmRpY2VzKTsKICB9Cgp9CmV4cG9ydCBjbGFzcyBOb2RlQ29sbGVjdGlvbiBleHRlbmRzIFRhYmxlQ29sbGVjdGlvbiB7CiAgY29uc3RydWN0b3IodGFibGUsIGluZGljZXMpIHsKICAgIHN1cGVyKHRhYmxlLCAnbm9kZScsIGluZGljZXMpOwogIH0KCn0KZXhwb3J0IGNsYXNzIEVkZ2VDb2xsZWN0aW9uIGV4dGVuZHMgVGFibGVDb2xsZWN0aW9uIHsKICBjb25zdHJ1Y3Rvcih0YWJsZSwgaW5kaWNlcykgewogICAgc3VwZXIodGFibGUsICdlZGdlJywgaW5kaWNlcyk7CiAgfQoKfQ=="},{"version":3,"sources":["C:/ws/graph-drill/src/arquero/TableCollection.ts"],"names":["table","createTable","TableItemFacade","constructor","index","prefix","_table","_index","_id","columns","columnNames","get","col","id","NodeFacade","x","y","d","CommunityFacade","pid","childCount","nodeCount","EdgeFacade","source","target","weight","TableCollection","indices","_prefix","_Ctor","Error","_indices","size","length","numRows","getter","name","sort","definition","orderby","map","callback","ordered","output","scan","idx","n","push","forEach","toMap","Map","set","toSet","Set","add","toArray","arr","page","offset","count","i","obj","sample","proportion","ratio","Math","floor","data","cont","stop","every","CommunityCollection","NodeCollection","EdgeCollection"],"mappings":"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","sourcesContent":["import { table as createTable } from 'arquero';\r\nclass TableItemFacade {\r\n    constructor(table, index, prefix) {\r\n        this._table = table;\r\n        this._index = index;\r\n        this._id = `${prefix}.id`;\r\n    }\r\n    get table() {\r\n        return this._table;\r\n    }\r\n    get columns() {\r\n        return this._table.columnNames();\r\n    }\r\n    get(col) {\r\n        return this._table.get(col, this._index);\r\n    }\r\n    get id() {\r\n        return this.get(this._id);\r\n    }\r\n}\r\nclass NodeFacade extends TableItemFacade {\r\n    constructor(table, index) {\r\n        super(table, index, 'node');\r\n    }\r\n    get x() {\r\n        return this.get('node.x');\r\n    }\r\n    get y() {\r\n        return this.get('node.y');\r\n    }\r\n    get d() {\r\n        return this.get('node.d');\r\n    }\r\n}\r\nclass CommunityFacade extends TableItemFacade {\r\n    constructor(table, index) {\r\n        super(table, index, 'community');\r\n    }\r\n    get pid() {\r\n        return this.get('community.pid');\r\n    }\r\n    get childCount() {\r\n        return this.get('community.childCount');\r\n    }\r\n    get nodeCount() {\r\n        return this.get('community.nodeCount');\r\n    }\r\n}\r\nclass EdgeFacade extends TableItemFacade {\r\n    constructor(table, index) {\r\n        super(table, index, 'edge');\r\n    }\r\n    get source() {\r\n        return this.get('edge.source');\r\n    }\r\n    get target() {\r\n        return this.get('edge.target');\r\n    }\r\n    get weight() {\r\n        return this.get('edge.weight');\r\n    }\r\n}\r\nexport class TableCollection {\r\n    constructor(table, prefix, indices) {\r\n        this._table = createTable();\r\n        if (table) {\r\n            this._table = table;\r\n        }\r\n        this._prefix = prefix;\r\n        switch (prefix) {\r\n            case 'node':\r\n                this._Ctor = NodeFacade;\r\n                break;\r\n            case 'community':\r\n                this._Ctor = CommunityFacade;\r\n                break;\r\n            case 'edge':\r\n                this._Ctor = EdgeFacade;\r\n                break;\r\n            default:\r\n                throw new Error(`Unsupported data type: ${prefix}`);\r\n        }\r\n        if (indices) {\r\n            this._indices = indices;\r\n        }\r\n    }\r\n    get table() {\r\n        return this._table;\r\n    }\r\n    get size() {\r\n        if (this._indices) {\r\n            return this._indices.length;\r\n        }\r\n        return this._table.numRows();\r\n    }\r\n    getter(name) {\r\n        return this._table.getter(name);\r\n    }\r\n    sort(definition) {\r\n        if (this.size > 0) {\r\n            this._table = this._table.orderby(definition);\r\n        }\r\n        return this;\r\n    }\r\n    map(callback, ordered = false) {\r\n        const output = [];\r\n        this.scan(idx => {\r\n            const n = new this._Ctor(this._table, idx, this._prefix);\r\n            output.push(callback(n, idx));\r\n        }, ordered);\r\n        return output;\r\n    }\r\n    forEach(callback, ordered = false) {\r\n        this.scan((idx) => {\r\n            const n = new this._Ctor(this._table, idx);\r\n            callback(n, idx);\r\n        }, ordered);\r\n    }\r\n    toMap() {\r\n        const map = new Map();\r\n        this.scan((idx) => {\r\n            const n = new this._Ctor(this._table, idx);\r\n            const id = n.id;\r\n            map.set(id, n);\r\n        });\r\n        return map;\r\n    }\r\n    toSet() {\r\n        const set = new Set();\r\n        this.scan((idx) => {\r\n            const n = new this._Ctor(this._table, idx);\r\n            set.add(n);\r\n        });\r\n        return set;\r\n    }\r\n    toArray(ordered = false) {\r\n        const arr = [];\r\n        this.scan((idx) => {\r\n            arr.push(new this._Ctor(this._table, idx));\r\n        }, ordered);\r\n        return arr;\r\n    }\r\n    // TODO: it would be nicer api-wise to integrate the offset/count params into the map method, but we have to pull out the scan\r\n    page(callback, offset, count) {\r\n        const arr = [];\r\n        const indices = this._indices || [];\r\n        for (let i = offset; i < offset + count; i++) {\r\n            const idx = indices[i] || i;\r\n            const obj = new this._Ctor(this._table, idx);\r\n            arr.push(callback(obj, idx));\r\n        }\r\n        return arr;\r\n    }\r\n    // does a toArray with subsetting based on proportion of total items\r\n    // note that this could use underlying arquero table sampling for actual random,\r\n    // but the perf of that has not been checked, and it needs to account for groups\r\n    sample(proportion) {\r\n        const arr = [];\r\n        const ratio = Math.floor(1 / proportion);\r\n        this.scan((idx) => {\r\n            if (idx % ratio === 0) {\r\n                arr.push(new this._Ctor(this._table, idx));\r\n            }\r\n        });\r\n        return arr;\r\n    }\r\n    /**\r\n     * Direct passthrough to table scan, but using provided indices if present.\r\n     * This lets us create collections that are a \"view\" over the top of a larger\r\n     * table.\r\n     * Arquero doesn't support the notion of iterating groups directly, so this provides\r\n     * that.\r\n     * @param callback\r\n     * @param ordered\r\n     */\r\n    scan(callback, ordered = false) {\r\n        // note that we assume provided indices are already ordered\r\n        if (this._indices) {\r\n            const data = this._table.data();\r\n            let cont = true;\r\n            const stop = () => (cont = false);\r\n            this._indices.every(idx => {\r\n                callback(idx, data, stop);\r\n                return cont;\r\n            });\r\n        }\r\n        else {\r\n            return this._table.scan(callback, ordered);\r\n        }\r\n    }\r\n}\r\nexport class CommunityCollection extends TableCollection {\r\n    constructor(table, indices) {\r\n        super(table, 'community', indices);\r\n    }\r\n}\r\nexport class NodeCollection extends TableCollection {\r\n    constructor(table, indices) {\r\n        super(table, 'node', indices);\r\n    }\r\n}\r\nexport class EdgeCollection extends TableCollection {\r\n    constructor(table, indices) {\r\n        super(table, 'edge', indices);\r\n    }\r\n}\r\n"]}]}