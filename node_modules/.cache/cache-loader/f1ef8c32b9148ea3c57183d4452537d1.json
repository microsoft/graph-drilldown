{"remainingRequest":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js??ruleSet[1].rules[0].use[1]!C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js??ruleSet[1].rules[0].use[2]!C:\\ws\\graph-drill\\src\\components\\App\\hooks\\useUrlFiles.ts","dependencies":[{"path":"C:\\ws\\graph-drill\\src\\components\\App\\hooks\\useUrlFiles.ts","mtime":1631029334698},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\cache-loader-virtual-2fd14a2267\\0\\cache\\cache-loader-npm-4.1.0-82c3da90d8-0339778bdd.zip\\node_modules\\cache-loader\\dist\\cjs.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgdXNlQ29tbXVuaXRpZXNGaWxlLCB1c2VFZGdlc0ZpbGUsIHVzZUpvaW5GaWxlLCB1c2VOb2Rlc0ZpbGUgfSBmcm9tICd+L3N0YXRlJzsKaW1wb3J0IHsgRmlsZU9yaWdpbiB9IGZyb20gJ34vdHlwZXMnOwovKioNCiAqIFRoaXMgbG9hZHMgdGVzdCBkYXRhIGZpbGVzIGFzIHNwZWNpZmllZCBvbiB0aGUgdXJsLg0KICogVGhpcyBpcyB2ZXJ5IGFkLWhvYyAtIGl0IGlzIHN1cHBvc2VkIHRvIGJlIGFraW4gdG8NCiAqIGRyb3BwaW5nIHRoZSBuYW1lZCBmaWxlcyBvbiB0aGUgY29ycmVzcG9uZGluZyBGaWxlRHJvcCB3ZWxscy4NCiAqIEl0J3MgcG9zc2libGUgdGhpcyB3b3VsZCB3b3JrIHdpdGggZGF0YSBob3N0ZWQgZWxzZXdoZXJlIGlmIENPUlMNCiAqIGlzIHNldHVwIHByb3Blcmx5LCBidXQgb3RoZXJ3aXNlIHRoZXkgYXJlIGV4cGVjdGVkIHRvIGJlIGF2YWlsYWJsZSB1bmRlcg0KICogdGhlIHB1YmxpYyBmb2xkZXIuDQogKi8KCmV4cG9ydCBmdW5jdGlvbiB1c2VVcmxGaWxlcygpIHsKICBjb25zdCBub2Rlc0ZpbGUgPSB1c2VOb2Rlc0ZpbGUoKTsKICBjb25zdCBqb2luRmlsZSA9IHVzZUpvaW5GaWxlKCk7CiAgY29uc3QgY29tbXVuaXRpZXNGaWxlID0gdXNlQ29tbXVuaXRpZXNGaWxlKCk7CiAgY29uc3QgZWRnZXNGaWxlID0gdXNlRWRnZXNGaWxlKCk7CiAgcmV0dXJuIHVzZU1lbW8oKCkgPT4gewogICAgY29uc3QgYnVuZGxlID0ge307CgogICAgaWYgKG5vZGVzRmlsZSkgewogICAgICBidW5kbGUubm9kZXMgPSB7CiAgICAgICAgb3JpZ2luOiBGaWxlT3JpZ2luLlJlbW90ZSwKICAgICAgICB1cmw6IG5vZGVzRmlsZSwKICAgICAgICB0YWJsZVR5cGU6ICdub2RlJwogICAgICB9OwogICAgfQoKICAgIGlmIChqb2luRmlsZSkgewogICAgICBidW5kbGUuam9pbiA9IHsKICAgICAgICBvcmlnaW46IEZpbGVPcmlnaW4uUmVtb3RlLAogICAgICAgIHVybDogam9pbkZpbGUsCiAgICAgICAgdGFibGVUeXBlOiAnam9pbicKICAgICAgfTsKICAgIH0KCiAgICBpZiAoY29tbXVuaXRpZXNGaWxlKSB7CiAgICAgIGJ1bmRsZS5jb21tdW5pdGllcyA9IHsKICAgICAgICBvcmlnaW46IEZpbGVPcmlnaW4uUmVtb3RlLAogICAgICAgIHVybDogY29tbXVuaXRpZXNGaWxlLAogICAgICAgIHRhYmxlVHlwZTogJ2NvbW11bml0eScKICAgICAgfTsKICAgIH0KCiAgICBpZiAoZWRnZXNGaWxlKSB7CiAgICAgIGJ1bmRsZS5lZGdlcyA9IHsKICAgICAgICBvcmlnaW46IEZpbGVPcmlnaW4uUmVtb3RlLAogICAgICAgIHVybDogZWRnZXNGaWxlLAogICAgICAgIHRhYmxlVHlwZTogJ2VkZ2UnCiAgICAgIH07CiAgICB9CgogICAgcmV0dXJuIGJ1bmRsZTsKICB9LCBbbm9kZXNGaWxlLCBqb2luRmlsZSwgY29tbXVuaXRpZXNGaWxlLCBlZGdlc0ZpbGVdKTsKfQ=="},{"version":3,"sources":["C:/ws/graph-drill/src/components/App/hooks/useUrlFiles.ts"],"names":["useMemo","useCommunitiesFile","useEdgesFile","useJoinFile","useNodesFile","FileOrigin","useUrlFiles","nodesFile","joinFile","communitiesFile","edgesFile","bundle","nodes","origin","Remote","url","tableType","join","communities","edges"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,kBAAT,EAA6BC,YAA7B,EAA2CC,WAA3C,EAAwDC,YAAxD,QAA6E,SAA7E;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,GAAuB;AAC1B,QAAMC,SAAS,GAAGH,YAAY,EAA9B;AACA,QAAMI,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,eAAe,GAAGR,kBAAkB,EAA1C;AACA,QAAMS,SAAS,GAAGR,YAAY,EAA9B;AACA,SAAOF,OAAO,CAAC,MAAM;AACjB,UAAMW,MAAM,GAAG,EAAf;;AACA,QAAIJ,SAAJ,EAAe;AACXI,MAAAA,MAAM,CAACC,KAAP,GAAe;AACXC,QAAAA,MAAM,EAAER,UAAU,CAACS,MADR;AAEXC,QAAAA,GAAG,EAAER,SAFM;AAGXS,QAAAA,SAAS,EAAE;AAHA,OAAf;AAKH;;AACD,QAAIR,QAAJ,EAAc;AACVG,MAAAA,MAAM,CAACM,IAAP,GAAc;AACVJ,QAAAA,MAAM,EAAER,UAAU,CAACS,MADT;AAEVC,QAAAA,GAAG,EAAEP,QAFK;AAGVQ,QAAAA,SAAS,EAAE;AAHD,OAAd;AAKH;;AACD,QAAIP,eAAJ,EAAqB;AACjBE,MAAAA,MAAM,CAACO,WAAP,GAAqB;AACjBL,QAAAA,MAAM,EAAER,UAAU,CAACS,MADF;AAEjBC,QAAAA,GAAG,EAAEN,eAFY;AAGjBO,QAAAA,SAAS,EAAE;AAHM,OAArB;AAKH;;AACD,QAAIN,SAAJ,EAAe;AACXC,MAAAA,MAAM,CAACQ,KAAP,GAAe;AACXN,QAAAA,MAAM,EAAER,UAAU,CAACS,MADR;AAEXC,QAAAA,GAAG,EAAEL,SAFM;AAGXM,QAAAA,SAAS,EAAE;AAHA,OAAf;AAKH;;AACD,WAAOL,MAAP;AACH,GA/Ba,EA+BX,CAACJ,SAAD,EAAYC,QAAZ,EAAsBC,eAAtB,EAAuCC,SAAvC,CA/BW,CAAd;AAgCH","sourcesContent":["import { useMemo } from 'react';\r\nimport { useCommunitiesFile, useEdgesFile, useJoinFile, useNodesFile, } from '~/state';\r\nimport { FileOrigin } from '~/types';\r\n/**\r\n * This loads test data files as specified on the url.\r\n * This is very ad-hoc - it is supposed to be akin to\r\n * dropping the named files on the corresponding FileDrop wells.\r\n * It's possible this would work with data hosted elsewhere if CORS\r\n * is setup properly, but otherwise they are expected to be available under\r\n * the public folder.\r\n */\r\nexport function useUrlFiles() {\r\n    const nodesFile = useNodesFile();\r\n    const joinFile = useJoinFile();\r\n    const communitiesFile = useCommunitiesFile();\r\n    const edgesFile = useEdgesFile();\r\n    return useMemo(() => {\r\n        const bundle = {};\r\n        if (nodesFile) {\r\n            bundle.nodes = {\r\n                origin: FileOrigin.Remote,\r\n                url: nodesFile,\r\n                tableType: 'node',\r\n            };\r\n        }\r\n        if (joinFile) {\r\n            bundle.join = {\r\n                origin: FileOrigin.Remote,\r\n                url: joinFile,\r\n                tableType: 'join',\r\n            };\r\n        }\r\n        if (communitiesFile) {\r\n            bundle.communities = {\r\n                origin: FileOrigin.Remote,\r\n                url: communitiesFile,\r\n                tableType: 'community',\r\n            };\r\n        }\r\n        if (edgesFile) {\r\n            bundle.edges = {\r\n                origin: FileOrigin.Remote,\r\n                url: edgesFile,\r\n                tableType: 'edge',\r\n            };\r\n        }\r\n        return bundle;\r\n    }, [nodesFile, joinFile, communitiesFile, edgesFile]);\r\n}\r\n"]}]}