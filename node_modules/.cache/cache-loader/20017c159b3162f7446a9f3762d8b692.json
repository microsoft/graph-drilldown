{"remainingRequest":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js??ruleSet[1].rules[0].use[1]!C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js??ruleSet[1].rules[0].use[2]!C:\\ws\\graph-drill\\src\\components\\CommunityList\\hooks\\useColumns.ts","dependencies":[{"path":"C:\\ws\\graph-drill\\src\\components\\CommunityList\\hooks\\useColumns.ts","mtime":1631029334768},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\cache-loader-virtual-2fd14a2267\\0\\cache\\cache-loader-npm-4.1.0-82c3da90d8-0339778bdd.zip\\node_modules\\cache-loader\\dist\\cjs.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\babel-loader-virtual-fd8dd261de\\0\\cache\\babel-loader-npm-8.2.2-b4e600c2c5-df5092ef98.zip\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\ws\\graph-drill\\.yarn\\__virtual__\\ts-loader-virtual-aa0d54d245\\0\\cache\\ts-loader-npm-9.2.1-40e1a5908e-1f2e61905d.zip\\node_modules\\ts-loader\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyohDQogKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4gU2VlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcHJvamVjdC4NCiAqLwppbXBvcnQgeyBCQVJfSEVJR0hULCBCQVJfV0lEVEggfSBmcm9tICcuLi9zdHlsZXMnOwppbXBvcnQgeyBNYXJrIH0gZnJvbSAnLi4vdHlwZXMnOwppbXBvcnQgeyB1c2VCYXJTY2FsZSwgdXNlRHluYW1pY0NvbHVtbiwgdXNlQmFyRmlsbFNjYWxlIH0gZnJvbSAnLic7CmltcG9ydCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7CmltcG9ydCB7IHVzZUNoaWxkQ291bnREb21haW4sIHVzZU5vZGVDb3VudERvbWFpbiB9IGZyb20gJ34vaG9va3MvY29tbXVuaXRpZXMnOwppbXBvcnQgeyB1c2VOb2RlQ29sb3JFbmNvZGluZyB9IGZyb20gJ34vc3RhdGUnOwpjb25zdCBTTElNX0JBUiA9IDQwOwpleHBvcnQgZnVuY3Rpb24gdXNlQ29sdW1ucyhjb21tdW5pdGllcywgd2lkdGgsIGhlaWdodCkgewogIGNvbnN0IGNoaWxkQ291bnREb21haW4gPSB1c2VDaGlsZENvdW50RG9tYWluKGNvbW11bml0aWVzKTsKICBjb25zdCBjaGlsZEJhclNjYWxlID0gdXNlQmFyU2NhbGUoY2hpbGRDb3VudERvbWFpbiwgWzAsIEJBUl9XSURUSF0pOwogIGNvbnN0IG5vZGVDb3VudERvbWFpbiA9IHVzZU5vZGVDb3VudERvbWFpbihjb21tdW5pdGllcyk7CiAgY29uc3Qgbm9kZUJhclNjYWxlID0gdXNlQmFyU2NhbGUobm9kZUNvdW50RG9tYWluLCBbMCwgQkFSX1dJRFRIXSk7CiAgY29uc3QgZW5jb2RpbmcgPSB1c2VOb2RlQ29sb3JFbmNvZGluZygpOwogIGNvbnN0IGJhckhlaWdodCA9IHVzZU1lbW8oKCkgPT4gaGVpZ2h0ICE9PSB1bmRlZmluZWQgPyBoZWlnaHQgOiBCQVJfSEVJR0hULCBbaGVpZ2h0XSk7CiAgY29uc3QgYmFyV2lkdGggPSB1c2VNZW1vKCgpID0+IHdpZHRoICE9PSB1bmRlZmluZWQgPyB3aWR0aCA6IEJBUl9XSURUSCwgW3dpZHRoXSk7CiAgY29uc3Qgc2xpbUJhcldpZHRoID0gdXNlTWVtbygoKSA9PiB3aWR0aCAhPT0gdW5kZWZpbmVkID8gd2lkdGggOiBTTElNX0JBUiwgW3dpZHRoXSk7CiAgY29uc3QgZHluYW1pY0NvbHVtbiA9IHVzZUR5bmFtaWNDb2x1bW4oZW5jb2RpbmcsIHNsaW1CYXJXaWR0aCk7CiAgY29uc3QgYmFyRmlsbFNjYWxlID0gdXNlQmFyRmlsbFNjYWxlKCk7CiAgY29uc3QgY29sdW1ucyA9IHVzZU1lbW8oKCkgPT4gewogICAgcmV0dXJuIFtkeW5hbWljQ29sdW1uLCB7CiAgICAgIGhlYWRlcjogJ0lEJywKICAgICAgZmllbGQ6ICdjb21tdW5pdHkuaWQnLAogICAgICBhY2Nlc3NvcjogZCA9PiBkLmlkLAogICAgICB3aWR0aDogc2xpbUJhcldpZHRoLAogICAgICBoZWlnaHQ6IGJhckhlaWdodAogICAgfSwgewogICAgICBoZWFkZXI6ICdOb2RlIGNvdW50JywKICAgICAgZmllbGQ6ICdjb21tdW5pdHkubm9kZUNvdW50JywKICAgICAgYWNjZXNzb3I6IGQgPT4gZC5ub2RlQ291bnQsCiAgICAgIG1hcms6IE1hcmsuUmVjdCwKICAgICAgc2l6ZVNjYWxlOiBub2RlQmFyU2NhbGUsCiAgICAgIGZpbGxTY2FsZTogYmFyRmlsbFNjYWxlLAogICAgICB3aWR0aDogYmFyV2lkdGgsCiAgICAgIGhlaWdodDogYmFySGVpZ2h0CiAgICB9LCB7CiAgICAgIGhlYWRlcjogJ0NoaWxkIGNvdW50JywKICAgICAgZmllbGQ6ICdjb21tdW5pdHkuY2hpbGRDb3VudCcsCiAgICAgIGFjY2Vzc29yOiBkID0+IGQuY2hpbGRDb3VudCwKICAgICAgbWFyazogTWFyay5SZWN0LAogICAgICBzaXplU2NhbGU6IGNoaWxkQmFyU2NhbGUsCiAgICAgIGZpbGxTY2FsZTogYmFyRmlsbFNjYWxlLAogICAgICB3aWR0aDogYmFyV2lkdGgsCiAgICAgIGhlaWdodDogYmFySGVpZ2h0CiAgICB9XTsKICB9LCBbZHluYW1pY0NvbHVtbiwgbm9kZUJhclNjYWxlLCBiYXJGaWxsU2NhbGUsIGNoaWxkQmFyU2NhbGUsIGJhcldpZHRoLCBzbGltQmFyV2lkdGgsIGJhckhlaWdodF0pOwogIHJldHVybiBjb2x1bW5zOwp9"},{"version":3,"sources":["C:/ws/graph-drill/src/components/CommunityList/hooks/useColumns.ts"],"names":["BAR_HEIGHT","BAR_WIDTH","Mark","useBarScale","useDynamicColumn","useBarFillScale","useMemo","useChildCountDomain","useNodeCountDomain","useNodeColorEncoding","SLIM_BAR","useColumns","communities","width","height","childCountDomain","childBarScale","nodeCountDomain","nodeBarScale","encoding","barHeight","undefined","barWidth","slimBarWidth","dynamicColumn","barFillScale","columns","header","field","accessor","d","id","nodeCount","mark","Rect","sizeScale","fillScale","childCount"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,WAAtC;AACA,SAASC,IAAT,QAAqB,UAArB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,EAAwCC,eAAxC,QAA+D,GAA/D;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,mBAAT,EAA8BC,kBAA9B,QAAwD,qBAAxD;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,MAAMC,QAAQ,GAAG,EAAjB;AACA,OAAO,SAASC,UAAT,CAAoBC,WAApB,EAAiCC,KAAjC,EAAwCC,MAAxC,EAAgD;AACnD,QAAMC,gBAAgB,GAAGR,mBAAmB,CAACK,WAAD,CAA5C;AACA,QAAMI,aAAa,GAAGb,WAAW,CAACY,gBAAD,EAAmB,CAAC,CAAD,EAAId,SAAJ,CAAnB,CAAjC;AACA,QAAMgB,eAAe,GAAGT,kBAAkB,CAACI,WAAD,CAA1C;AACA,QAAMM,YAAY,GAAGf,WAAW,CAACc,eAAD,EAAkB,CAAC,CAAD,EAAIhB,SAAJ,CAAlB,CAAhC;AACA,QAAMkB,QAAQ,GAAGV,oBAAoB,EAArC;AACA,QAAMW,SAAS,GAAGd,OAAO,CAAC,MAAOQ,MAAM,KAAKO,SAAX,GAAuBP,MAAvB,GAAgCd,UAAxC,EAAqD,CAACc,MAAD,CAArD,CAAzB;AACA,QAAMQ,QAAQ,GAAGhB,OAAO,CAAC,MAAOO,KAAK,KAAKQ,SAAV,GAAsBR,KAAtB,GAA8BZ,SAAtC,EAAkD,CAACY,KAAD,CAAlD,CAAxB;AACA,QAAMU,YAAY,GAAGjB,OAAO,CAAC,MAAOO,KAAK,KAAKQ,SAAV,GAAsBR,KAAtB,GAA8BH,QAAtC,EAAiD,CAACG,KAAD,CAAjD,CAA5B;AACA,QAAMW,aAAa,GAAGpB,gBAAgB,CAACe,QAAD,EAAWI,YAAX,CAAtC;AACA,QAAME,YAAY,GAAGpB,eAAe,EAApC;AACA,QAAMqB,OAAO,GAAGpB,OAAO,CAAC,MAAM;AAC1B,WAAO,CACHkB,aADG,EAEH;AACIG,MAAAA,MAAM,EAAE,IADZ;AAEIC,MAAAA,KAAK,EAAE,cAFX;AAGIC,MAAAA,QAAQ,EAAGC,CAAD,IAAOA,CAAC,CAACC,EAHvB;AAIIlB,MAAAA,KAAK,EAAEU,YAJX;AAKIT,MAAAA,MAAM,EAAEM;AALZ,KAFG,EASH;AACIO,MAAAA,MAAM,EAAE,YADZ;AAEIC,MAAAA,KAAK,EAAE,qBAFX;AAGIC,MAAAA,QAAQ,EAAGC,CAAD,IAAOA,CAAC,CAACE,SAHvB;AAIIC,MAAAA,IAAI,EAAE/B,IAAI,CAACgC,IAJf;AAKIC,MAAAA,SAAS,EAAEjB,YALf;AAMIkB,MAAAA,SAAS,EAAEX,YANf;AAOIZ,MAAAA,KAAK,EAAES,QAPX;AAQIR,MAAAA,MAAM,EAAEM;AARZ,KATG,EAmBH;AACIO,MAAAA,MAAM,EAAE,aADZ;AAEIC,MAAAA,KAAK,EAAE,sBAFX;AAGIC,MAAAA,QAAQ,EAAGC,CAAD,IAAOA,CAAC,CAACO,UAHvB;AAIIJ,MAAAA,IAAI,EAAE/B,IAAI,CAACgC,IAJf;AAKIC,MAAAA,SAAS,EAAEnB,aALf;AAMIoB,MAAAA,SAAS,EAAEX,YANf;AAOIZ,MAAAA,KAAK,EAAES,QAPX;AAQIR,MAAAA,MAAM,EAAEM;AARZ,KAnBG,CAAP;AA8BH,GA/BsB,EA+BpB,CACCI,aADD,EAECN,YAFD,EAGCO,YAHD,EAICT,aAJD,EAKCM,QALD,EAMCC,YAND,EAOCH,SAPD,CA/BoB,CAAvB;AAwCA,SAAOM,OAAP;AACH","sourcesContent":["/*!\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Licensed under the MIT license. See LICENSE file in the project.\r\n */\r\nimport { BAR_HEIGHT, BAR_WIDTH } from '../styles';\r\nimport { Mark } from '../types';\r\nimport { useBarScale, useDynamicColumn, useBarFillScale } from '.';\r\nimport { useMemo } from 'react';\r\nimport { useChildCountDomain, useNodeCountDomain } from '~/hooks/communities';\r\nimport { useNodeColorEncoding } from '~/state';\r\nconst SLIM_BAR = 40;\r\nexport function useColumns(communities, width, height) {\r\n    const childCountDomain = useChildCountDomain(communities);\r\n    const childBarScale = useBarScale(childCountDomain, [0, BAR_WIDTH]);\r\n    const nodeCountDomain = useNodeCountDomain(communities);\r\n    const nodeBarScale = useBarScale(nodeCountDomain, [0, BAR_WIDTH]);\r\n    const encoding = useNodeColorEncoding();\r\n    const barHeight = useMemo(() => (height !== undefined ? height : BAR_HEIGHT), [height]);\r\n    const barWidth = useMemo(() => (width !== undefined ? width : BAR_WIDTH), [width]);\r\n    const slimBarWidth = useMemo(() => (width !== undefined ? width : SLIM_BAR), [width]);\r\n    const dynamicColumn = useDynamicColumn(encoding, slimBarWidth);\r\n    const barFillScale = useBarFillScale();\r\n    const columns = useMemo(() => {\r\n        return [\r\n            dynamicColumn,\r\n            {\r\n                header: 'ID',\r\n                field: 'community.id',\r\n                accessor: (d) => d.id,\r\n                width: slimBarWidth,\r\n                height: barHeight,\r\n            },\r\n            {\r\n                header: 'Node count',\r\n                field: 'community.nodeCount',\r\n                accessor: (d) => d.nodeCount,\r\n                mark: Mark.Rect,\r\n                sizeScale: nodeBarScale,\r\n                fillScale: barFillScale,\r\n                width: barWidth,\r\n                height: barHeight,\r\n            },\r\n            {\r\n                header: 'Child count',\r\n                field: 'community.childCount',\r\n                accessor: (d) => d.childCount,\r\n                mark: Mark.Rect,\r\n                sizeScale: childBarScale,\r\n                fillScale: barFillScale,\r\n                width: barWidth,\r\n                height: barHeight,\r\n            },\r\n        ];\r\n    }, [\r\n        dynamicColumn,\r\n        nodeBarScale,\r\n        barFillScale,\r\n        childBarScale,\r\n        barWidth,\r\n        slimBarWidth,\r\n        barHeight,\r\n    ]);\r\n    return columns;\r\n}\r\n"]}]}